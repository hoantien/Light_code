   1              		.syntax unified
   2              		.cpu cortex-r4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"contrast_refine_step.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN20contrast_refine_stepC2ER13cam_typedef_ttRK9rectanglePvS5_mm,"ax",%progbits
  19              		.align	1
  20              		.global	_ZN20contrast_refine_stepC2ER13cam_typedef_ttRK9rectanglePvS5_mm
  21              		.thumb
  22              		.thumb_func
  24              	_ZN20contrast_refine_stepC2ER13cam_typedef_ttRK9rectanglePvS5_mm:
  25              	.LFB2082:
  26              		.file 1 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp"
   1:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** /*******************************************************************************
   2:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  * Copyright (c) 2016, The LightCo
   3:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  * All rights reserved.
   4:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  * Redistribution and use in source and binary forms, with or without
   5:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  * modification, are strictly prohibited without prior permission
   6:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  * of The LightCo.
   7:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  *
   8:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  * @file    contrast_refine_step.cpp
   9:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  * @author  The LightCo
  10:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  * @version V1.0.0
  11:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  * @date    August-8-2016
  12:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  * @brief   Implements one step of contrast refinement iteration
  13:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  *
  14:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****  ******************************************************************************/
  15:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
  16:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #include <cstring>
  17:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #include <memory>
  18:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #include "cortex_r4.h"
  19:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #include "board_config.h"
  20:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #include "log.h"
  21:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #include "hal_mipi2axi.h"
  22:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #include "af_helper.h"
  23:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #include "image_raw10.h"
  24:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #include "contrast_refine_step.h"
  25:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
  26:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #define SLOGF_ID                SLOG_ID_AF
  27:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
  28:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** contrast_refine_step::contrast_refine_step(cam_typedef_t& cam, std::uint16_t scale,
  27              		.loc 1 29 0
  28              		.cfi_startproc
  29              		@ args = 16, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
  41 0004 86B0     		sub	sp, sp, #24
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 48
  44              		.loc 1 29 0
  45 0006 9846     		mov	r8, r3
  46 0008 0446     		mov	r4, r0
  47              	.LBB253:
  30:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         const rectangle& min_capture_rect, void* image_buffer_p,
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         EventGroupHandle_t event_group,
  32:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         EventBits_t lens_move_done_event, EventBits_t capture_done_event) :
  33:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****                 len_pos_control_(cam),
  34:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****                 capture_rectangle_{min_capture_rect},
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****                 event_group_{event_group},
  36:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****                 lens_move_done_event_{lens_move_done_event},
  37:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****                 capture_done_event_{capture_done_event},
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****                 image_ptr_{image_buffer_p} {
  48              		.loc 1 38 0
  49 000a 4B4B     		ldr	r3, .L10+8
  50              	.LVL1:
  51              	.LBE253:
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         const rectangle& min_capture_rect, void* image_buffer_p,
  52              		.loc 1 29 0
  53 000c 0D46     		mov	r5, r1
  54 000e 1646     		mov	r6, r2
  55 0010 0C9F     		ldr	r7, [sp, #48]
  56              	.LBB270:
  57              		.loc 1 38 0
  58 0012 9847     		blx	r3
  59              	.LVL2:
  60              	.LBB254:
  61              	.LBB255:
  62              	.LBB256:
  63              	.LBB257:
  64              	.LBB258:
  65              		.file 2 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_
   1:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
   3:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // Copyright (C) 2008-2014 Free Software Foundation, Inc.
   4:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** //
   5:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // any later version.
  10:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  11:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  16:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  20:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  25:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****  */
  29:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  30:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  33:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #pragma GCC system_header
  34:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  35:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #include <stdbool.h>
  37:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #include <stdint.h>
  38:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  39:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  40:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  41:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((always_inline))
  42:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #endif
  43:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  44:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** {
  46:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  48:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /**
  49:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    * @defgroup atomics Atomics
  50:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    *
  51:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    * Components for performing atomic operations.
  52:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    * @{
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    */
  54:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  55:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// Enumeration for memory_order
  56:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef enum memory_order
  57:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     {
  58:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       memory_order_relaxed,
  59:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       memory_order_consume,
  60:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       memory_order_acquire,
  61:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       memory_order_release,
  62:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       memory_order_acq_rel,
  63:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       memory_order_seq_cst
  64:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     } memory_order;
  65:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  66:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   enum __memory_order_modifier
  67:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     {
  68:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  69:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  70:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  71:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  72:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     };
  73:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  74:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   constexpr memory_order
  75:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   {
  77:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     return memory_order(__m | int(__mod));
  78:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   }
  79:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  80:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   constexpr memory_order
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
  82:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   {
  83:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     return memory_order(__m & int(__mod));
  84:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   }
  85:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  86:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
  87:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   constexpr memory_order
  88:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
  89:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   {
  90:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
  91:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
  92:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   }
  93:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
  94:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   constexpr memory_order
  95:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
  96:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   {
  97:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
  98:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       | (__m & __memory_order_modifier_mask));
  99:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   }
 100:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 101:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 102:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 103:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   { __atomic_thread_fence(__m); }
 104:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 105:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 106:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 107:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   { __atomic_signal_fence(__m); }
 108:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 109:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// kill_dependency
 110:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   template<typename _Tp>
 111:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     inline _Tp
 112:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 113:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     {
 114:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _Tp __ret(__y);
 115:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       return __ret;
 116:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     }
 117:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 118:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 119:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // Base types for atomics.
 120:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   template<typename _IntTp>
 121:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     struct __atomic_base;
 122:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 123:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_char
 124:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<char>  	       		atomic_char;
 125:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 126:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_schar
 127:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<signed char>	     	atomic_schar;
 128:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 129:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uchar
 130:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<unsigned char>		atomic_uchar;
 131:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 132:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_short
 133:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<short>			atomic_short;
 134:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 135:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_ushort
 136:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<unsigned short>	 	atomic_ushort;
 137:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 138:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_int
 139:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<int>  	       		atomic_int;
 140:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 141:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uint
 142:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<unsigned int>	     	atomic_uint;
 143:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 144:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_long
 145:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<long>  	       		atomic_long;
 146:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 147:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_ulong
 148:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<unsigned long>		atomic_ulong;
 149:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 150:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_llong
 151:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<long long>  		atomic_llong;
 152:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 153:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_ullong
 154:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<unsigned long long> 	atomic_ullong;
 155:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 156:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_wchar_t
 157:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<wchar_t>  		atomic_wchar_t;
 158:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 159:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_char16_t
 160:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<char16_t>  		atomic_char16_t;
 161:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 162:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_char32_t
 163:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<char32_t>  		atomic_char32_t;
 164:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 165:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_char32_t
 166:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<char32_t>  		atomic_char32_t;
 167:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 168:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 169:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_int_least8_t
 170:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<int_least8_t>  		atomic_int_least8_t;
 171:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 172:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uint_least8_t
 173:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<uint_least8_t>	       	atomic_uint_least8_t;
 174:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 175:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_int_least16_t
 176:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<int_least16_t>	       	atomic_int_least16_t;
 177:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 178:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uint_least16_t
 179:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<uint_least16_t>	       	atomic_uint_least16_t;
 180:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 181:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_int_least32_t
 182:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<int_least32_t>	       	atomic_int_least32_t;
 183:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 184:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uint_least32_t
 185:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<uint_least32_t>	       	atomic_uint_least32_t;
 186:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 187:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_int_least64_t
 188:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<int_least64_t>	       	atomic_int_least64_t;
 189:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 190:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uint_least64_t
 191:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<uint_least64_t>	       	atomic_uint_least64_t;
 192:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 193:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 194:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_int_fast8_t
 195:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<int_fast8_t>  		atomic_int_fast8_t;
 196:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 197:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uint_fast8_t
 198:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<uint_fast8_t>	      	atomic_uint_fast8_t;
 199:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 200:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_int_fast16_t
 201:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<int_fast16_t>	      	atomic_int_fast16_t;
 202:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 203:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uint_fast16_t
 204:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<uint_fast16_t>	      	atomic_uint_fast16_t;
 205:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 206:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_int_fast32_t
 207:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<int_fast32_t>	      	atomic_int_fast32_t;
 208:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 209:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uint_fast32_t
 210:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<uint_fast32_t>	      	atomic_uint_fast32_t;
 211:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 212:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_int_fast64_t
 213:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<int_fast64_t>	      	atomic_int_fast64_t;
 214:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 215:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uint_fast64_t
 216:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<uint_fast64_t>	      	atomic_uint_fast64_t;
 217:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 218:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 219:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_intptr_t
 220:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<intptr_t>  	       	atomic_intptr_t;
 221:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 222:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uintptr_t
 223:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<uintptr_t>  	       	atomic_uintptr_t;
 224:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 225:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_size_t
 226:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<size_t>	 	       	atomic_size_t;
 227:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 228:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_intmax_t
 229:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<intmax_t>  	       	atomic_intmax_t;
 230:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 231:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_uintmax_t
 232:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<uintmax_t>  	       	atomic_uintmax_t;
 233:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 234:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_ptrdiff_t
 235:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   typedef __atomic_base<ptrdiff_t>  	       	atomic_ptrdiff_t;
 236:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 237:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 238:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 239:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 240:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   template<typename _Tp>
 241:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     struct atomic;
 242:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 243:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   template<typename _Tp>
 244:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     struct atomic<_Tp*>;
 245:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 246:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 247:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 248:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 249:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #else
 250:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 251:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #endif
 252:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 253:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /**
 254:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 255:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    *
 256:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 257:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 258:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 259:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 260:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 261:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****    *  argument.
 262:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   */
 263:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 264:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 265:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   struct __atomic_flag_base
 266:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   {
 267:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 268:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   };
 269:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 270:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 271:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 272:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 273:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 274:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// atomic_flag
 275:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 276:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   {
 277:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 278:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 279:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 280:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 281:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 282:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 283:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 284:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 285:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 286:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     { }
 287:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 288:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 289:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 290:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     {
 291:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, __m);
 292:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     }
 293:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 294:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 295:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 296:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     {
 297:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, __m);
 298:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     }
 299:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 300:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 301:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 302:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     {
 303:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 304:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 305:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 306:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 307:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 308:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __atomic_clear (&_M_i, __m);
 309:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     }
 310:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 311:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 312:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 313:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     {
 314:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 315:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 316:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 317:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 318:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 319:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __atomic_clear (&_M_i, __m);
 320:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     }
 321:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 322:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   private:
 323:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 324:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     _S_init(bool __i)
 325:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 326:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   };
 327:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 328:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 329:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   /// Base class for atomic integrals.
 330:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   //
 331:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 332:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   //
 333:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_bool     bool
 334:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_char     char
 335:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_schar    signed char
 336:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 337:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_short    short
 338:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 339:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_int      int
 340:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_uint     unsigned int
 341:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_long     long
 342:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 343:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_llong    long long
 344:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 345:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_char16_t char16_t
 346:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_char32_t char32_t
 347:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 348:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   //
 349:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 350:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 351:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   // memory access expect.
 352:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****   template<typename _ITp>
 353:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     struct __atomic_base
 354:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     {
 355:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     private:
 356:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 357:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 358:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type 	_M_i;
 359:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 360:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****     public:
 361:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 362:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 363:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 364:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 365:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 366:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 367:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 368:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
  66              		.loc 2 368 0
  67 0014 0023     		movs	r3, #0
  68              	.LBE258:
  69              	.LBE257:
  70              	.LBE256:
  71              	.LBE255:
  72              	.LBE254:
  73              		.loc 1 38 0
  74 0016 04F11002 		add	r2, r4, #16
  75 001a D8F80000 		ldr	r0, [r8]	@ unaligned
  76 001e D8F80410 		ldr	r1, [r8, #4]	@ unaligned
  77 0022 03C2     		stmia	r2!, {r0, r1}
  78              	.LVL3:
  79 0024 04F5AC72 		add	r2, r4, #344
  80              	.LBB263:
  81              	.LBB262:
  82              	.LBB261:
  83              	.LBB260:
  84              	.LBB259:
  85              		.loc 2 368 0
  86 0028 84F84C30 		strb	r3, [r4, #76]
  87              	.LVL4:
  88 002c 04F16803 		add	r3, r4, #104
  89              	.L2:
  90              	.LVL5:
  91              	.LBE259:
  92              	.LBE260:
  93              	.LBE261:
  94              	.LBE262:
  95              	.LBE263:
  96              	.LBB264:
  97              	.LBB265:
  98              	.LBB266:
  99              	.LBB267:
 100              		.file 3 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h"
   1:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** /*******************************************************************************
   2:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * Copyright (c) 2016, The LightCo
   3:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * All rights reserved.
   4:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * Redistribution and use in source and binary forms, with or without
   5:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * modification, are strictly prohibited without prior permission
   6:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * of The LightCo.
   7:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  *
   8:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * @file    contrast_processor.h
   9:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * @author  The LightCo
  10:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * @version V1.0.0
  11:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * @date    July-14-2016
  12:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * @brief   Contrast processing for auto focus refinement
  13:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  *
  14:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  ******************************************************************************/
  15:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  16:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #ifndef __CONTRAST_PROCESSOR_H__
  17:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #define __CONTRAST_PROCESSOR_H__
  18:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  19:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #ifdef __cplusplus
  20:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** extern "C" {
  21:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #endif
  22:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** void process_contrast_test(unsigned int img_addr);
  23:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #ifdef __cplusplus
  24:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** }
  25:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #endif
  26:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  27:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #ifdef __cplusplus
  28:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #include <cstdint>
  30:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #include <array>
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #include <bitset>
  32:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #include "image_pixel_iter.h"
  33:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  34:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** template<typename T, std::size_t S>
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** class circular_cache_buffer {
  36:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** public:
  37:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void advance() {
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         if (++index_ == S)
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             index_ = 0;
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  42:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     T& ref(std::uint16_t delta = 0) {
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return array_[circ_index(delta)];
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     const T& ref(std::uint16_t delta = 0) const {
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return array_[circ_index(delta)];
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** private:
  51:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     std::size_t circ_index(std::size_t delta) const {
  52:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::size_t ci;
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         delta = delta % S;
  54:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         if (delta <= index_)
  55:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             ci = index_ - delta;
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         else
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             ci = S - delta + index_;
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return ci;
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
  60:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     std::size_t index_{0};
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     std::array<T, S> array_;
  63:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** };
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** class contrast_processor {
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** public:
  67:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     enum metric_type {
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         GRADIENT,
  70:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         LAPLACIAN1,
  71:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         LAPLACIAN2,
  72:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         DECIMATED2_GRADIENT,
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         DECIMATED4_GRADIENT,
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         INTENSITY,
  75:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         ENERGY,
  76:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         GRADIENT_TH,
  77:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         DECIMATED4_GRADIENT_TH,
  78:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         FILTERED_GRADIENT_TH,
  79:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         NUM_METRICS
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     };
  81:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  82:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	contrast_processor(std::uint16_t first_roi_pixel, std::uint16_t roi_width);
  83:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  84:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	void process_line(image_pixel_iter line_start);
  85:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  86:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	std::uint64_t get_metric_green(metric_type metric) const {
  87:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 		return metrics_arr_[metric].green;
  88:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	}
  89:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  90:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	std::uint64_t get_metric_red(metric_type metric) const {
  91:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return metrics_arr_[metric].red;
  92:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	}
  93:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  94:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	std::uint64_t get_metric_blue(metric_type metric) const {
  95:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return metrics_arr_[metric].blue;
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	}
  97:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	std::uint64_t get_metric(metric_type metric) const {
  99:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 		return metrics_arr_[metric].total_metric();
 100:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	}
 101:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 102:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     static const std::size_t MAX_ROI_WIDTH = 180;
 103:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     static const std::size_t NUM_LINES_CACHE = 5;
 104:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     using roi_color_line = std::array<std::int16_t, MAX_ROI_WIDTH>;
 105:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     using roi_color_cache = circular_cache_buffer<roi_color_line, NUM_LINES_CACHE>;
 106:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 107:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     struct metric_algo_desc {
 108:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint16_t min_lines;
 109:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t (*get_green_line_metric_fun)(const roi_color_cache& green_cache, std::uint16_
 110:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t (*get_rb_line_metric_fun)(const roi_color_cache& color_cache, std::uint16_t w
 111:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     };
 112:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 113:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void enable_metric(metric_type mt) {
 114:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         metrics_enable_[mt] = true;
 115:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
 116:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 117:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void disable_metric(metric_type mt) {
 118:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         metrics_enable_[mt] = false;
 119:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
 120:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 121:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void enable_all_metrics() {
 122:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         metrics_enable_.set();
 123:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
 124:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 125:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void disable_all_metrics() {
 126:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         metrics_enable_.reset();
 127:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
 128:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 129:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void enable_metrics(std::uint32_t metrics_mask);
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 131:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     struct metrics_per_color {
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t green;
 133:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t red;
 134:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t blue;
 135:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 136:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         metrics_per_color() :
 137:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****                 green{0}, red{0}, blue{0} {
 101              		.loc 3 137 0
 102 0030 0020     		movs	r0, #0
 103 0032 0021     		movs	r1, #0
 104 0034 1833     		adds	r3, r3, #24
 105              	.LVL6:
 106 0036 43E90C01 		strd	r0, [r3, #-48]
 107 003a 43E90A01 		strd	r0, [r3, #-40]
 108 003e 43E90801 		strd	r0, [r3, #-32]
 109              	.LBE267:
 110              	.LBE266:
 111              		.file 4 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array"
   1:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // <array> -*- C++ -*-
   2:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
   3:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // Copyright (C) 2007-2014 Free Software Foundation, Inc.
   4:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** //
   5:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // software; you can redistribute it and/or modify it under the
   7:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // terms of the GNU General Public License as published by the
   8:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // any later version.
  10:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  11:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // This library is distributed in the hope that it will be useful,
  12:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // GNU General Public License for more details.
  15:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  16:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // 3.1, as published by the Free Software Foundation.
  19:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  20:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // You should have received a copy of the GNU General Public License and
  21:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // <http://www.gnu.org/licenses/>.
  24:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  25:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** /** @file include/array
  26:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****  *  This is a Standard C++ Library header.
  27:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****  */
  28:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  29:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #ifndef _GLIBCXX_ARRAY
  30:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #define _GLIBCXX_ARRAY 1
  31:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  32:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #pragma GCC system_header
  33:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  34:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #if __cplusplus < 201103L
  35:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** # include <bits/c++0x_warning.h>
  36:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #else
  37:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  38:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #include <stdexcept>
  39:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #include <bits/stl_algobase.h>
  40:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #include <bits/range_access.h>
  41:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  42:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** {
  44:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  45:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  46:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   template<typename _Tp, std::size_t _Nm>
  47:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     struct __array_traits
  48:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     {
  49:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef _Tp _Type[_Nm];
  50:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  51:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       static constexpr _Tp&
  52:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       { return const_cast<_Tp&>(__t[__n]); }
  54:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     };
  55:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  56:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****  template<typename _Tp>
  57:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    struct __array_traits<_Tp, 0>
  58:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    {
  59:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      struct _Type { };
  60:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  61:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      static constexpr _Tp&
  62:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      _S_ref(const _Type&, std::size_t) noexcept
  63:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      { return *static_cast<_Tp*>(nullptr); }
  64:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    };
  65:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  66:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   /**
  67:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  68:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  69:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @ingroup sequences
  70:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  71:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  72:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  <a href="tables.html#66">reversible container</a>, and a
  73:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  <a href="tables.html#67">sequence</a>.
  74:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  75:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  Sets support random access iterators.
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  77:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  78:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @tparam  N  Number of elements.
  79:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   */
  80:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   template<typename _Tp, std::size_t _Nm>
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     struct array
 112              		.loc 4 81 0
 113 0042 9342     		cmp	r3, r2
 114 0044 F4D1     		bne	.L2
 115              	.LBE265:
 116              	.LBE264:
 117              		.loc 1 38 0
 118 0046 04F5A073 		add	r3, r4, #320
 119              	.LVL7:
 120 004a C3E90001 		strd	r0, [r3]
 121 004e 04F5A473 		add	r3, r4, #328
 122 0052 C3E90001 		strd	r0, [r3]
 123 0056 0D9B     		ldr	r3, [sp, #52]
 124 0058 C4F85031 		str	r3, [r4, #336]
 125 005c 0E9B     		ldr	r3, [sp, #56]
 126 005e C4F85431 		str	r3, [r4, #340]
 127 0062 0F9B     		ldr	r3, [sp, #60]
 128 0064 C4F85831 		str	r3, [r4, #344]
 129 0068 0023     		movs	r3, #0
 130              	.LBB268:
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.cam = &cam;
 131              		.loc 1 39 0
 132 006a A561     		str	r5, [r4, #24]
 133              	.LBE268:
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.cam = &cam;
 134              		.loc 1 38 0
 135 006c A4F85C31 		strh	r3, [r4, #348]	@ movhi
 136 0070 C4F86071 		str	r7, [r4, #352]
 137              	.LBB269:
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.mipi_rx_chid = afs_.cam->info.ch - 1;
 138              		.loc 1 40 0
 139 0074 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 140 0078 C3F30303 		ubfx	r3, r3, #0, #4
 141 007c 013B     		subs	r3, r3, #1
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.x_position = capture_rectangle_.left_x();
  42:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.y_position = capture_rectangle_.top_y();
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.x_width = capture_rectangle_.width();
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.y_width = capture_rectangle_.height();
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.destination = reinterpret_cast<std::uint32_t>(image_ptr_);
 142              		.loc 1 45 0
 143 007e A762     		str	r7, [r4, #40]
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.mipi_rx_chid = afs_.cam->info.ch - 1;
 144              		.loc 1 40 0
 145 0080 2377     		strb	r3, [r4, #28]
 146              	.LVL8:
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.x_position = capture_rectangle_.left_x();
 147              		.loc 1 41 0
 148 0082 238A     		ldrh	r3, [r4, #16]
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.af_cb = &crs_mipi2axi_callback;
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.cb_user_data = this;
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.flip_mode = FLIP_MODE_NONE;
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // Exposure, fps, resolution, sensitivity settings...
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint64_t exposure_ns{0};
  51:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     float gain{1.0f};
  52:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::memcpy(&exposure_ns, cam.image->settings[UC_FOCAL_STACKING]->exposure, sizeof(exposure_ns)
 149              		.loc 1 52 0
 150 0084 2D68     		ldr	r5, [r5]
 151              	.LVL9:
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.x_position = capture_rectangle_.left_x();
 152              		.loc 1 41 0
 153 0086 E383     		strh	r3, [r4, #30]	@ movhi
 154              	.LVL10:
  42:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.x_width = capture_rectangle_.width();
 155              		.loc 1 42 0
 156 0088 638A     		ldrh	r3, [r4, #18]
 157 008a 2384     		strh	r3, [r4, #32]	@ movhi
 158              	.LVL11:
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.y_width = capture_rectangle_.height();
 159              		.loc 1 43 0
 160 008c A38A     		ldrh	r3, [r4, #20]
 161 008e 6384     		strh	r3, [r4, #34]	@ movhi
 162              	.LVL12:
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.destination = reinterpret_cast<std::uint32_t>(image_ptr_);
 163              		.loc 1 44 0
 164 0090 E38A     		ldrh	r3, [r4, #22]
 165 0092 A384     		strh	r3, [r4, #36]	@ movhi
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.cb_user_data = this;
 166              		.loc 1 46 0
 167 0094 294B     		ldr	r3, .L10+12
 168 0096 E362     		str	r3, [r4, #44]
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // Exposure, fps, resolution, sensitivity settings...
 169              		.loc 1 48 0
 170 0098 0123     		movs	r3, #1
 171              		.loc 1 52 0
 172 009a EA69     		ldr	r2, [r5, #28]
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // Exposure, fps, resolution, sensitivity settings...
 173              		.loc 1 48 0
 174 009c 84F84A30 		strb	r3, [r4, #74]
 175              		.loc 1 52 0
 176 00a0 02AB     		add	r3, sp, #8
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.flip_mode = FLIP_MODE_NONE;
 177              		.loc 1 47 0
 178 00a2 2463     		str	r4, [r4, #48]
 179              		.loc 1 52 0
 180 00a4 1068     		ldr	r0, [r2]	@ unaligned
 181 00a6 5168     		ldr	r1, [r2, #4]	@ unaligned
 182 00a8 03C3     		stmia	r3!, {r0, r1}
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::memcpy(&gain, cam.image->settings[UC_FOCAL_STACKING]->sensitivity, sizeof(gain));
 183              		.loc 1 53 0
 184 00aa 1069     		ldr	r0, [r2, #16]	@ unaligned
 185 00ac 0190     		str	r0, [sp, #4]	@ unaligned
  54:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     if (exposure_ns == 0) {
 186              		.loc 1 54 0
 187 00ae DDE90223 		ldrd	r2, [sp, #8]
 188 00b2 1343     		orrs	r3, r2, r3
 189 00b4 06D1     		bne	.L3
  55:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         std::memcpy(&exposure_ns, cam.image->settings[UC_PREVIEW]->exposure, sizeof(exposure_ns));
 190              		.loc 1 55 0
 191 00b6 2A69     		ldr	r2, [r5, #16]
 192 00b8 02AB     		add	r3, sp, #8
 193 00ba 1068     		ldr	r0, [r2]	@ unaligned
 194 00bc 5168     		ldr	r1, [r2, #4]	@ unaligned
 195 00be 03C3     		stmia	r3!, {r0, r1}
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         std::memcpy(&gain, cam.image->settings[UC_PREVIEW]->sensitivity, sizeof(gain));
 196              		.loc 1 56 0
 197 00c0 1069     		ldr	r0, [r2, #16]	@ unaligned
 198 00c2 0190     		str	r0, [sp, #4]	@ unaligned
 199              	.L3:
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     if (exposure_ns == 0) {
 200              		.loc 1 58 0
 201 00c4 DDE90223 		ldrd	r2, [sp, #8]
 202 00c8 1343     		orrs	r3, r2, r3
 203 00ca 07D1     		bne	.L4
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         exposure_ns = 30000000;
 204              		.loc 1 59 0
 205 00cc 18A3     		adr	r3, .L10
 206 00ce D3E90023 		ldrd	r2, [r3]
 207 00d2 CDE90223 		strd	r2, [sp, #8]
  60:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         gain = 1.0f;
 208              		.loc 1 60 0
 209 00d6 4FF07E53 		mov	r3, #1065353216
 210 00da 0193     		str	r3, [sp, #4]	@ float
 211              	.L4:
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::memcpy(afs_.cam_settings.exposure, &exposure_ns, sizeof(afs_.cam_settings.exposure));
 212              		.loc 1 62 0
 213 00dc 02AB     		add	r3, sp, #8
  63:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t fps = 30;
 214              		.loc 1 63 0
 215 00de 1E22     		movs	r2, #30
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::memcpy(afs_.cam_settings.fps, &fps, sizeof(afs_.cam_settings.fps));
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint32_t res[2];
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     if (scale == 1) {
 216              		.loc 1 66 0
 217 00e0 012E     		cmp	r6, #1
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t fps = 30;
 218              		.loc 1 62 0
 219 00e2 03CB     		ldmia	r3!, {r0, r1}
  63:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t fps = 30;
 220              		.loc 1 63 0
 221 00e4 06AB     		add	r3, sp, #24
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t fps = 30;
 222              		.loc 1 62 0
 223 00e6 6063     		str	r0, [r4, #52]	@ unaligned
  63:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t fps = 30;
 224              		.loc 1 63 0
 225 00e8 23F8162D 		strh	r2, [r3, #-22]!	@ movhi
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::memcpy(afs_.cam_settings.fps, &fps, sizeof(afs_.cam_settings.fps));
 226              		.loc 1 64 0
 227 00ec 1B88     		ldrh	r3, [r3]	@ unaligned
 228 00ee A4F84830 		strh	r3, [r4, #72]	@ unaligned
  67:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         res[0] = X_13M;
 229              		.loc 1 67 0
 230 00f2 09BF     		itett	eq
 231 00f4 41F27003 		movweq	r3, #4208
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         res[1] = Y_13M;
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     } else {
  70:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         res[0] = X_3M_P2;
 232              		.loc 1 70 0
 233 00f8 4FF40063 		movne	r3, #2048
  67:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         res[0] = X_13M;
 234              		.loc 1 67 0
 235 00fc 0493     		streq	r3, [sp, #16]
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         res[1] = Y_13M;
 236              		.loc 1 68 0
 237 00fe 4FF44363 		moveq	r3, #3120
 238              		.loc 1 70 0
 239 0102 1CBF     		itt	ne
 240 0104 0493     		strne	r3, [sp, #16]
  71:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         res[1] = Y_3M_P2;
 241              		.loc 1 71 0
 242 0106 4FF4C063 		movne	r3, #1536
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t fps = 30;
 243              		.loc 1 62 0
 244 010a A163     		str	r1, [r4, #56]	@ unaligned
 245              		.loc 1 71 0
 246 010c 0593     		str	r3, [sp, #20]
  72:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::memcpy(afs_.cam_settings.resolution, &res, sizeof(afs_.cam_settings.resolution));
 247              		.loc 1 73 0
 248 010e 04AB     		add	r3, sp, #16
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.scale = scale;
 249              		.loc 1 74 0
 250 0110 E684     		strh	r6, [r4, #38]	@ movhi
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.scale = scale;
 251              		.loc 1 73 0
 252 0112 03CB     		ldmia	r3!, {r0, r1}
 253 0114 E063     		str	r0, [r4, #60]	@ unaligned
  75:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::memcpy(afs_.cam_settings.sensitivity, &gain, sizeof(afs_.cam_settings.sensitivity));
 254              		.loc 1 75 0
 255 0116 0198     		ldr	r0, [sp, #4]	@ unaligned
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     afs_.scale = scale;
 256              		.loc 1 73 0
 257 0118 2164     		str	r1, [r4, #64]	@ unaligned
  76:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // Configure sensor for captures
  77:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     af_configure_sensor_stream(&afs_, false);
 258              		.loc 1 77 0
 259 011a 0021     		movs	r1, #0
  75:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::memcpy(afs_.cam_settings.sensitivity, &gain, sizeof(afs_.cam_settings.sensitivity));
 260              		.loc 1 75 0
 261 011c 6064     		str	r0, [r4, #68]	@ unaligned
 262              		.loc 1 77 0
 263 011e 04F11800 		add	r0, r4, #24
 264 0122 074B     		ldr	r3, .L10+16
 265 0124 9847     		blx	r3
 266              	.LVL13:
 267              	.LBE269:
 268              	.LBE270:
  78:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 269              		.loc 1 78 0
 270 0126 2046     		mov	r0, r4
 271 0128 06B0     		add	sp, sp, #24
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 24
 274              		@ sp needed
 275 012a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 276              	.LVL14:
 277              	.L11:
 278 012e 00BF     		.align	3
 279              	.L10:
 280 0130 80C3C901 		.word	30000000
 281 0134 00000000 		.word	0
 282 0138 00000000 		.word	_ZN21lens_position_controlC1ER13cam_typedef_t
 283 013c 00000000 		.word	crs_mipi2axi_callback
 284 0140 00000000 		.word	af_configure_sensor_stream
 285              		.cfi_endproc
 286              	.LFE2082:
 288              		.global	_ZN20contrast_refine_stepC1ER13cam_typedef_ttRK9rectanglePvS5_mm
 289              		.thumb_set _ZN20contrast_refine_stepC1ER13cam_typedef_ttRK9rectanglePvS5_mm,_ZN20contrast_refine_s
 290 0144 AFF30080 		.section	.text._ZN20contrast_refine_stepD2Ev,"ax",%progbits
 291              		.align	1
 292              		.global	_ZN20contrast_refine_stepD2Ev
 293              		.thumb
 294              		.thumb_func
 296              	_ZN20contrast_refine_stepD2Ev:
 297              	.LFB2085:
  79:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** contrast_refine_step::~contrast_refine_step() {
 298              		.loc 1 80 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303              	.LVL15:
  81:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 304              		.loc 1 81 0
 305 0000 7047     		bx	lr
 306              		.cfi_endproc
 307              	.LFE2085:
 309              		.global	_ZN20contrast_refine_stepD1Ev
 310              		.thumb_set _ZN20contrast_refine_stepD1Ev,_ZN20contrast_refine_stepD2Ev
 311              		.section	.text._ZN20contrast_refine_step15start_move_lensEst,"ax",%progbits
 312              		.align	1
 313              		.global	_ZN20contrast_refine_step15start_move_lensEst
 314              		.thumb
 315              		.thumb_func
 317              	_ZN20contrast_refine_step15start_move_lensEst:
 318              	.LFB2089:
  82:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
  83:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** namespace {
  84:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::atomic<std::uint32_t> num_pending_frame_end_callbacks{0};
  85:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
  86:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
  87:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** extern "C" void crs_mipi2axi_callback(uint8_t iidx, uint32_t signal_irq,
  88:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         uint32_t error_irq, void *user_data) {
  89:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     if (num_pending_frame_end_callbacks <= 0) {
  90:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         printf("\r\nError: crs_mipi2axi_callback called when no capture requested\r\n");
  91:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         return;
  92:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
  93:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     static_cast<contrast_refine_step*>(user_data)->mipi2axi_cb(iidx, signal_irq, error_irq);
  94:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
  95:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** void lens_movement_done_cb(void* user_data, bool success, std::int16_t pos) {
  97:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     static_cast<contrast_refine_step*>(user_data)->lens_movement_done_cb(success, pos);
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
  99:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 100:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** void contrast_refine_step::start_move_lens(std::int16_t pos, std::uint16_t tolerance) {
 319              		.loc 1 100 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 8
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              	.LVL16:
 324 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 325              	.LCFI3:
 326              		.cfi_def_cfa_offset 24
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 101:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // Send move request with callback
 102:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     len_pos_control_.start_move_lens(pos, tolerance,
 103:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             lens_position_control::move_done_callback_t{::lens_movement_done_cb, this});
 329              		.loc 1 103 0
 330 0002 034B     		ldr	r3, .L14
 331 0004 0090     		str	r0, [sp]
 332 0006 034C     		ldr	r4, .L14+4
 333 0008 A047     		blx	r4
 334              	.LVL17:
 104:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 335              		.loc 1 104 0
 336 000a 04B0     		add	sp, sp, #16
 337              	.LCFI4:
 338              		.cfi_def_cfa_offset 8
 339              		@ sp needed
 340 000c 10BD     		pop	{r4, pc}
 341              	.L15:
 342 000e 00BF     		.align	2
 343              	.L14:
 344 0010 00000000 		.word	_Z21lens_movement_done_cbPvbs
 345 0014 00000000 		.word	_ZN21lens_position_control15start_move_lensEstNS_20move_done_callback_tE
 346              		.cfi_endproc
 347              	.LFE2089:
 349              		.section	.text._ZN20contrast_refine_step19start_capture_frameEv,"ax",%progbits
 350              		.align	1
 351              		.global	_ZN20contrast_refine_step19start_capture_frameEv
 352              		.thumb
 353              		.thumb_func
 355              	_ZN20contrast_refine_step19start_capture_frameEv:
 356              	.LFB2090:
 105:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 106:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** void contrast_refine_step::start_capture_frame() {
 357              		.loc 1 106 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              	.LVL18:
 362 0000 08B5     		push	{r3, lr}
 363              	.LCFI5:
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 3, -8
 366              		.cfi_offset 14, -4
 367              	.LBB280:
 368              	.LBB281:
 369              	.LBB282:
 370              	.LBB283:
 369:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 370:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator __int_type() const noexcept
 371:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return load(); }
 372:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 373:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 374:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return load(); }
 375:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 376:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 377:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 378:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 379:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	store(__i);
 380:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return __i;
 381:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 382:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 383:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 384:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 385:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 386:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	store(__i);
 387:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return __i;
 388:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 389:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 390:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 391:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator++(int) noexcept
 392:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return fetch_add(1); }
 393:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 394:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 395:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator++(int) volatile noexcept
 396:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return fetch_add(1); }
 397:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 398:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 399:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator--(int) noexcept
 400:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return fetch_sub(1); }
 401:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 402:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 403:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator--(int) volatile noexcept
 404:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return fetch_sub(1); }
 405:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 406:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 407:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator++() noexcept
 408:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, memory_order_seq_cst); }
 409:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 410:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 411:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator++() volatile noexcept
 412:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, memory_order_seq_cst); }
 413:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 414:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 415:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator--() noexcept
 416:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, memory_order_seq_cst); }
 417:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 418:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 419:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator--() volatile noexcept
 420:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, memory_order_seq_cst); }
 421:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 422:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 423:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 424:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, memory_order_seq_cst); }
 425:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 426:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 427:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 428:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, memory_order_seq_cst); }
 429:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 430:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 431:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 432:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, memory_order_seq_cst); }
 433:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 434:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 435:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 436:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, memory_order_seq_cst); }
 437:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 438:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 439:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 440:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, memory_order_seq_cst); }
 441:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 442:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 443:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 444:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, memory_order_seq_cst); }
 445:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 446:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 447:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 448:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, memory_order_seq_cst); }
 449:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 450:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 451:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 452:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, memory_order_seq_cst); }
 453:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 454:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 455:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 456:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, memory_order_seq_cst); }
 457:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 458:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       __int_type
 459:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 460:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, memory_order_seq_cst); }
 461:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 462:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       bool
 463:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       is_lock_free() const noexcept
 464:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_is_lock_free(sizeof(_M_i), nullptr); }
 465:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 466:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       bool
 467:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 468:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_is_lock_free(sizeof(_M_i), nullptr); }
 469:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 470:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 471:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 472:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 473:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****         memory_order __b = __m & __memory_order_mask;
 474:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 475:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 476:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 477:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 478:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, __m);
 371              		.loc 2 478 0
 372 0002 BFF35F8F 		dmb	sy
 373 0006 0123     		movs	r3, #1
 374 0008 80F84C30 		strb	r3, [r0, #76]
 375 000c BFF35F8F 		dmb	sy
 376              	.LVL19:
 377              	.LBE283:
 378              	.LBE282:
 379              	.LBE281:
 380              	.LBE280:
 381              	.LBB284:
 382              	.LBB285:
 383              	.LBB286:
 479:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 480:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 481:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 482:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       store(__int_type __i,
 483:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 484:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 485:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****         memory_order __b = __m & __memory_order_mask;
 486:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 487:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 488:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 489:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 490:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, __m);
 491:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 492:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 493:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 494:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 495:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 496:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****        memory_order __b = __m & __memory_order_mask;
 497:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 498:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 499:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 500:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, __m);
 501:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 502:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 503:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 504:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const volatile noexcept
 505:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 506:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****         memory_order __b = __m & __memory_order_mask;
 507:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 508:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 509:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 510:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, __m);
 511:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 512:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 513:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 514:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       exchange(__int_type __i,
 515:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	       memory_order __m = memory_order_seq_cst) noexcept
 516:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 517:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return __atomic_exchange_n(&_M_i, __i, __m);
 518:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 519:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 520:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 521:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 522:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       exchange(__int_type __i,
 523:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	       memory_order __m = memory_order_seq_cst) volatile noexcept
 524:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 525:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return __atomic_exchange_n(&_M_i, __i, __m);
 526:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 527:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 528:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE bool
 529:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       compare_exchange_weak(__int_type& __i1, __int_type __i2,
 530:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 			    memory_order __m1, memory_order __m2) noexcept
 531:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 532:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****        memory_order __b2 = __m2 & __memory_order_mask;
 533:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****        memory_order __b1 = __m1 & __memory_order_mask;
 534:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 != memory_order_release);
 535:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 != memory_order_acq_rel);
 536:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 <= __b1);
 537:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 538:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return __atomic_compare_exchange_n(&_M_i, &__i1, __i2, 1, __m1, __m2);
 539:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 540:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 541:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE bool
 542:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       compare_exchange_weak(__int_type& __i1, __int_type __i2,
 543:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 			    memory_order __m1,
 544:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 			    memory_order __m2) volatile noexcept
 545:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 546:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****        memory_order __b2 = __m2 & __memory_order_mask;
 547:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****        memory_order __b1 = __m1 & __memory_order_mask;
 548:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 != memory_order_release);
 549:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 != memory_order_acq_rel);
 550:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 <= __b1);
 551:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 552:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return __atomic_compare_exchange_n(&_M_i, &__i1, __i2, 1, __m1, __m2);
 553:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 554:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 555:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE bool
 556:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       compare_exchange_weak(__int_type& __i1, __int_type __i2,
 557:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 			    memory_order __m = memory_order_seq_cst) noexcept
 558:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 559:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return compare_exchange_weak(__i1, __i2, __m,
 560:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 				     __cmpexch_failure_order(__m));
 561:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 562:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 563:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE bool
 564:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       compare_exchange_weak(__int_type& __i1, __int_type __i2,
 565:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 		   memory_order __m = memory_order_seq_cst) volatile noexcept
 566:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 567:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return compare_exchange_weak(__i1, __i2, __m,
 568:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 				     __cmpexch_failure_order(__m));
 569:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 570:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 571:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE bool
 572:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       compare_exchange_strong(__int_type& __i1, __int_type __i2,
 573:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 			      memory_order __m1, memory_order __m2) noexcept
 574:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 575:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****         memory_order __b2 = __m2 & __memory_order_mask;
 576:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****         memory_order __b1 = __m1 & __memory_order_mask;
 577:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 != memory_order_release);
 578:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 != memory_order_acq_rel);
 579:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 <= __b1);
 580:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 581:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return __atomic_compare_exchange_n(&_M_i, &__i1, __i2, 0, __m1, __m2);
 582:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 583:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 584:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE bool
 585:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       compare_exchange_strong(__int_type& __i1, __int_type __i2,
 586:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 			      memory_order __m1,
 587:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 			      memory_order __m2) volatile noexcept
 588:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 589:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****         memory_order __b2 = __m2 & __memory_order_mask;
 590:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****         memory_order __b1 = __m1 & __memory_order_mask;
 591:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 592:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 != memory_order_release);
 593:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 != memory_order_acq_rel);
 594:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	__glibcxx_assert(__b2 <= __b1);
 595:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 596:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return __atomic_compare_exchange_n(&_M_i, &__i1, __i2, 0, __m1, __m2);
 597:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 598:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 599:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE bool
 600:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       compare_exchange_strong(__int_type& __i1, __int_type __i2,
 601:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 			      memory_order __m = memory_order_seq_cst) noexcept
 602:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 603:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return compare_exchange_strong(__i1, __i2, __m,
 604:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 				       __cmpexch_failure_order(__m));
 605:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 606:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 607:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE bool
 608:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       compare_exchange_strong(__int_type& __i1, __int_type __i2,
 609:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 		 memory_order __m = memory_order_seq_cst) volatile noexcept
 610:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       {
 611:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 	return compare_exchange_strong(__i1, __i2, __m,
 612:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 				       __cmpexch_failure_order(__m));
 613:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 614:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 615:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 616:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       fetch_add(__int_type __i,
 617:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 		memory_order __m = memory_order_seq_cst) noexcept
 618:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_fetch_add(&_M_i, __i, __m); }
 384              		.loc 2 618 0
 385 0010 074B     		ldr	r3, .L18
 386 0012 BFF35F8F 		dmb	sy
 387              	.L17:
 388 0016 53E8002F 		ldrex	r2, [r3]
 389 001a 0132     		adds	r2, r2, #1
 390 001c 43E80021 		strex	r1, r2, [r3]
 391 0020 0029     		cmp	r1, #0
 392 0022 F8D1     		bne	.L17
 393              	.LBE286:
 394              	.LBE285:
 395              	.LBE284:
 107:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // Start capture of one frame
 108:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     is_capture_ongoing_ = true;
 109:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     num_pending_frame_end_callbacks++;
 110:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     trigger_sensor(&afs_);
 396              		.loc 1 110 0
 397 0024 034B     		ldr	r3, .L18+4
 398              	.LBB289:
 399              	.LBB288:
 400              	.LBB287:
 401              		.loc 2 618 0
 402 0026 BFF35F8F 		dmb	sy
 403              	.LBE287:
 404              	.LBE288:
 405              	.LBE289:
 406              		.loc 1 110 0
 407 002a 1830     		adds	r0, r0, #24
 408              	.LVL20:
 409 002c 9847     		blx	r3
 410              	.LVL21:
 411 002e 08BD     		pop	{r3, pc}
 412              	.L19:
 413              		.align	2
 414              	.L18:
 415 0030 00000000 		.word	.LANCHOR0
 416 0034 00000000 		.word	trigger_sensor
 417              		.cfi_endproc
 418              	.LFE2090:
 420              		.section	.text._ZN20contrast_refine_step21lens_movement_done_cbEbs,"ax",%progbits
 421              		.align	1
 422              		.global	_ZN20contrast_refine_step21lens_movement_done_cbEbs
 423              		.thumb
 424              		.thumb_func
 426              	_ZN20contrast_refine_step21lens_movement_done_cbEbs:
 427              	.LFB2091:
 111:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 112:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 113:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** void contrast_refine_step::lens_movement_done_cb(bool success, std::int16_t pos) {
 428              		.loc 1 113 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              	.LVL22:
 433 0000 08B5     		push	{r3, lr}
 434              	.LCFI6:
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 3, -8
 437              		.cfi_offset 14, -4
 438              		.loc 1 113 0
 439 0002 0346     		mov	r3, r0
 114:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     measurement_position_ = pos;
 440              		.loc 1 114 0
 441 0004 A0F85C21 		strh	r2, [r0, #348]	@ movhi
 115:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     xEventGroupSetBits(event_group_, lens_move_done_event_);
 442              		.loc 1 115 0
 443 0008 D0F85001 		ldr	r0, [r0, #336]
 444              	.LVL23:
 445 000c D3F85411 		ldr	r1, [r3, #340]
 446              	.LVL24:
 447 0010 014B     		ldr	r3, .L21
 448              	.LVL25:
 449 0012 9847     		blx	r3
 450              	.LVL26:
 451 0014 08BD     		pop	{r3, pc}
 452              	.L22:
 453 0016 00BF     		.align	2
 454              	.L21:
 455 0018 00000000 		.word	xEventGroupSetBits
 456              		.cfi_endproc
 457              	.LFE2091:
 459              		.section	.text._Z21lens_movement_done_cbPvbs,"ax",%progbits
 460              		.align	1
 461              		.global	_Z21lens_movement_done_cbPvbs
 462              		.thumb
 463              		.thumb_func
 465              	_Z21lens_movement_done_cbPvbs:
 466              	.LFB2088:
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     static_cast<contrast_refine_step*>(user_data)->lens_movement_done_cb(success, pos);
 467              		.loc 1 96 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              	.LVL27:
 472 0000 08B5     		push	{r3, lr}
 473              	.LCFI7:
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 3, -8
 476              		.cfi_offset 14, -4
  97:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 477              		.loc 1 97 0
 478 0002 014B     		ldr	r3, .L24
 479 0004 9847     		blx	r3
 480              	.LVL28:
 481 0006 08BD     		pop	{r3, pc}
 482              	.L25:
 483              		.align	2
 484              	.L24:
 485 0008 00000000 		.word	_ZN20contrast_refine_step21lens_movement_done_cbEbs
 486              		.cfi_endproc
 487              	.LFE2088:
 489              		.section	.text._ZN20contrast_refine_step17frame_captured_cbEv,"ax",%progbits
 490              		.align	1
 491              		.global	_ZN20contrast_refine_step17frame_captured_cbEv
 492              		.thumb
 493              		.thumb_func
 495              	_ZN20contrast_refine_step17frame_captured_cbEv:
 496              	.LFB2092:
 116:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 117:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 118:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** void contrast_refine_step::frame_captured_cb() {
 497              		.loc 1 118 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 8
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              	.LVL29:
 502 0000 07B5     		push	{r0, r1, r2, lr}
 503              	.LCFI8:
 504              		.cfi_def_cfa_offset 16
 505              		.cfi_offset 14, -4
 506              	.LBB305:
 507              	.LBB306:
 508              	.LBB307:
 509              	.LBB308:
 500:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 510              		.loc 2 500 0
 511 0002 BFF35F8F 		dmb	sy
 512 0006 90F84C20 		ldrb	r2, [r0, #76]	@ zero_extendqisi2
 513 000a BFF35F8F 		dmb	sy
 514              	.LBE308:
 515              	.LBE307:
 516              	.LBE306:
 517              	.LBE305:
 518              		.loc 1 118 0
 519 000e 0346     		mov	r3, r0
 520              	.LBB324:
 119:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     if (!is_capture_ongoing_) {
 521              		.loc 1 119 0
 522 0010 1AB9     		cbnz	r2, .L27
 120:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         printf("\r\nError: frame_captured_cb called when no capture requested\r\n");
 523              		.loc 1 120 0
 524 0012 144B     		ldr	r3, .L34
 525 0014 1448     		ldr	r0, .L34+4
 526              	.LVL30:
 527 0016 9847     		blx	r3
 528              	.LVL31:
 529 0018 20E0     		b	.L26
 530              	.LVL32:
 531              	.L27:
 532              	.LBB309:
 533              	.LBB310:
 534              	.LBB311:
 619:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 620:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 621:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       fetch_add(__int_type __i,
 622:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 		memory_order __m = memory_order_seq_cst) volatile noexcept
 623:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_fetch_add(&_M_i, __i, __m); }
 624:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 
 625:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 626:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       fetch_sub(__int_type __i,
 627:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h **** 		memory_order __m = memory_order_seq_cst) noexcept
 628:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       { return __atomic_fetch_sub(&_M_i, __i, __m); }
 535              		.loc 2 628 0
 536 001a 144A     		ldr	r2, .L34+8
 537 001c BFF35F8F 		dmb	sy
 538              	.LVL33:
 539              	.L33:
 540 0020 52E8001F 		ldrex	r1, [r2]
 541 0024 0139     		subs	r1, r1, #1
 542 0026 42E80010 		strex	r0, r1, [r2]
 543 002a 0028     		cmp	r0, #0
 544 002c F8D1     		bne	.L33
 545              	.LBE311:
 546              	.LBE310:
 547              	.LBE309:
 548              	.LBB314:
 549              	.LBB315:
 550              	.LBB316:
 551              	.LBB317:
 478:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 552              		.loc 2 478 0
 553 002e 0021     		movs	r1, #0
 554              	.LBE317:
 555              	.LBE316:
 556              	.LBE315:
 557              	.LBE314:
 558              	.LBB321:
 559              	.LBB313:
 560              	.LBB312:
 561              		.loc 2 628 0
 562 0030 BFF35F8F 		dmb	sy
 563              	.LVL34:
 564              	.LBE312:
 565              	.LBE313:
 566              	.LBE321:
 121:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         return;
 122:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
 123:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     num_pending_frame_end_callbacks--;
 124:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     is_capture_ongoing_ = false;
 125:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     BaseType_t higher_pri_task_woken = pdFALSE;
 567              		.loc 1 125 0
 568 0034 02AA     		add	r2, sp, #8
 569              	.LBB322:
 570              	.LBB320:
 571              	.LBB319:
 572              	.LBB318:
 478:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 573              		.loc 2 478 0
 574 0036 BFF35F8F 		dmb	sy
 575 003a 83F84C10 		strb	r1, [r3, #76]
 576 003e BFF35F8F 		dmb	sy
 577              	.LBE318:
 578              	.LBE319:
 579              	.LBE320:
 580              	.LBE322:
 581              		.loc 1 125 0
 582 0042 42F8041D 		str	r1, [r2, #-4]!
 126:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     xEventGroupSetBitsFromISR(event_group_, capture_done_event_, &higher_pri_task_woken);
 583              		.loc 1 126 0
 584 0046 D3F85001 		ldr	r0, [r3, #336]
 585 004a D3F85811 		ldr	r1, [r3, #344]
 586 004e 084B     		ldr	r3, .L34+12
 587              	.LVL35:
 588 0050 9847     		blx	r3
 589              	.LVL36:
 590              	.LBB323:
 127:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     portEND_SWITCHING_ISR(higher_pri_task_woken);
 591              		.loc 1 127 0
 592 0052 019B     		ldr	r3, [sp, #4]
 593 0054 13B1     		cbz	r3, .L26
 594              		.loc 1 127 0 is_stmt 0 discriminator 1
 595 0056 0122     		movs	r2, #1
 596 0058 064B     		ldr	r3, .L34+16
 597 005a 1A60     		str	r2, [r3]
 598              	.LVL37:
 599              	.L26:
 600              	.LBE323:
 601              	.LBE324:
 128:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 602              		.loc 1 128 0 is_stmt 1
 603 005c 03B0     		add	sp, sp, #12
 604              	.LCFI9:
 605              		.cfi_def_cfa_offset 4
 606              		@ sp needed
 607 005e 5DF804FB 		ldr	pc, [sp], #4
 608              	.L35:
 609 0062 00BF     		.align	2
 610              	.L34:
 611 0064 00000000 		.word	puts
 612 0068 00000000 		.word	.LC0
 613 006c 00000000 		.word	.LANCHOR0
 614 0070 00000000 		.word	xEventGroupSetBitsFromISR
 615 0074 00000000 		.word	ulPortYieldRequired
 616              		.cfi_endproc
 617              	.LFE2092:
 619              		.section	.text.crs_mipi2axi_callback,"ax",%progbits
 620              		.align	1
 621              		.global	crs_mipi2axi_callback
 622              		.thumb
 623              		.thumb_func
 625              	crs_mipi2axi_callback:
 626              	.LFB2087:
  88:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     if (num_pending_frame_end_callbacks <= 0) {
 627              		.loc 1 88 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              	.LVL38:
 632              	.LBB331:
 633              	.LBB332:
 634              	.LBB333:
 500:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 635              		.loc 2 500 0
 636 0000 084A     		ldr	r2, .L42
 637              	.LVL39:
 638              	.LBE333:
 639              	.LBE332:
 640              	.LBE331:
  88:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     if (num_pending_frame_end_callbacks <= 0) {
 641              		.loc 1 88 0
 642 0002 08B5     		push	{r3, lr}
 643              	.LCFI10:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 3, -8
 646              		.cfi_offset 14, -4
 647              	.LBB336:
 648              	.LBB335:
 649              	.LBB334:
 500:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic_base.h ****       }
 650              		.loc 2 500 0
 651 0004 BFF35F8F 		dmb	sy
 652 0008 1268     		ldr	r2, [r2]
 653 000a BFF35F8F 		dmb	sy
 654              	.LBE334:
 655              	.LBE335:
 656              	.LBE336:
  89:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         printf("\r\nError: crs_mipi2axi_callback called when no capture requested\r\n");
 657              		.loc 1 89 0
 658 000e 1AB9     		cbnz	r2, .L37
  90:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         return;
 659              		.loc 1 90 0
 660 0010 054B     		ldr	r3, .L42+4
 661              	.LVL40:
 662 0012 0648     		ldr	r0, .L42+8
 663              	.LVL41:
 664 0014 9847     		blx	r3
 665              	.LVL42:
  91:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
 666              		.loc 1 91 0
 667 0016 08BD     		pop	{r3, pc}
 668              	.LVL43:
 669              	.L37:
 670              	.LBB337:
 671              	.LBB338:
 129:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** void contrast_refine_step::mipi2axi_cb(uint8_t iidx, uint32_t signal_irq, uint32_t error_irq) {
 131:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     if ((signal_irq & R1_VC0_FRAME_END) != 0)
 672              		.loc 1 131 0
 673 0018 CA00     		lsls	r2, r1, #3
 674 001a 02D5     		bpl	.L36
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         frame_captured_cb();
 675              		.loc 1 132 0
 676 001c 1846     		mov	r0, r3
 677              	.LVL44:
 678 001e 044B     		ldr	r3, .L42+12
 679              	.LVL45:
 680 0020 9847     		blx	r3
 681              	.LVL46:
 682              	.L36:
 683 0022 08BD     		pop	{r3, pc}
 684              	.L43:
 685              		.align	2
 686              	.L42:
 687 0024 00000000 		.word	.LANCHOR0
 688 0028 00000000 		.word	puts
 689 002c 3D000000 		.word	.LC1
 690 0030 00000000 		.word	_ZN20contrast_refine_step17frame_captured_cbEv
 691              	.LBE338:
 692              	.LBE337:
 693              		.cfi_endproc
 694              	.LFE2087:
 696              		.section	.text._ZN20contrast_refine_step11mipi2axi_cbEhmm,"ax",%progbits
 697              		.align	1
 698              		.global	_ZN20contrast_refine_step11mipi2axi_cbEhmm
 699              		.thumb
 700              		.thumb_func
 702              	_ZN20contrast_refine_step11mipi2axi_cbEhmm:
 703              	.LFB2093:
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     if ((signal_irq & R1_VC0_FRAME_END) != 0)
 704              		.loc 1 130 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              	.LVL47:
 709 0000 08B5     		push	{r3, lr}
 710              	.LCFI11:
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 3, -8
 713              		.cfi_offset 14, -4
 131:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         frame_captured_cb();
 714              		.loc 1 131 0
 715 0002 D300     		lsls	r3, r2, #3
 716              	.LVL48:
 717 0004 01D5     		bpl	.L44
 718              		.loc 1 132 0
 719 0006 014B     		ldr	r3, .L49
 720 0008 9847     		blx	r3
 721              	.LVL49:
 722              	.L44:
 723 000a 08BD     		pop	{r3, pc}
 724              	.L50:
 725              		.align	2
 726              	.L49:
 727 000c 00000000 		.word	_ZN20contrast_refine_step17frame_captured_cbEv
 728              		.cfi_endproc
 729              	.LFE2093:
 731              		.global	__aeabi_uldivmod
 732              		.global	__aeabi_ldivmod
 733              		.section	.text._ZN20contrast_refine_step24compute_sharpness_metricERK9rectanglem,"ax",%progbits
 734              		.align	1
 735              		.global	_ZN20contrast_refine_step24compute_sharpness_metricERK9rectanglem
 736              		.thumb
 737              		.thumb_func
 739              	_ZN20contrast_refine_step24compute_sharpness_metricERK9rectanglem:
 740              	.LFB2096:
 133:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 134:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 135:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** namespace {
 136:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #if 0
 137:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     void remove_data_pedestal(std::uint64_t* value, std::uint64_t pedestal) {
 138:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         if (*value <= pedestal)
 139:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             *value = 0;
 140:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         else
 141:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             *value -= pedestal;
 142:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
 143:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 144:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     void remove_data_pedestal(contrast_refine_step::metrics_per_color* metric, std::uint64_t pedest
 145:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         remove_data_pedestal(&metric->green, pedestal);
 146:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         remove_data_pedestal(&metric->red, pedestal);
 147:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         remove_data_pedestal(&metric->blue, pedestal);
 148:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
 149:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #endif
 150:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 151:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     void remove_data_pedestal1(std::uint64_t* value, std::uint64_t pedestal) {
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         if (*value <= pedestal)
 153:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             *value = 1;
 154:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         else
 155:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             *value -= pedestal;
 156:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
 157:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 158:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     void remove_data_pedestal1(contrast_refine_step::metrics_per_color* metric, std::uint64_t pedes
 159:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         remove_data_pedestal1(&metric->green, pedestal);
 160:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         remove_data_pedestal1(&metric->red, pedestal);
 161:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         remove_data_pedestal1(&metric->blue, pedestal);
 162:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
 163:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 164:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 165:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** void contrast_refine_step::compute_sharpness_metric(const rectangle& roi, std::uint32_t metrics_mas
 741              		.loc 1 165 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 88
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              	.LVL50:
 746 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 747              	.LCFI12:
 748              		.cfi_def_cfa_offset 36
 749              		.cfi_offset 4, -36
 750              		.cfi_offset 5, -32
 751              		.cfi_offset 6, -28
 752              		.cfi_offset 7, -24
 753              		.cfi_offset 8, -20
 754              		.cfi_offset 9, -16
 755              		.cfi_offset 10, -12
 756              		.cfi_offset 11, -8
 757              		.cfi_offset 14, -4
 758 0004 0E88     		ldrh	r6, [r1]
 759              	.LBB379:
 166:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // Compute metric on ROI
 167:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t scale = afs_.scale;
 760              		.loc 1 167 0
 761 0006 B0F82690 		ldrh	r9, [r0, #38]
 762              	.LVL51:
 763              	.LBE379:
 165:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // Compute metric on ROI
 764              		.loc 1 165 0
 765 000a 0F46     		mov	r7, r1
 766 000c 1546     		mov	r5, r2
 767              	.LBB412:
 168:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t x_scaled_offset = (roi.left_x() - capture_rectangle_.left_x() + scale - 1) / scal
 768              		.loc 1 168 0
 769 000e 33B2     		sxth	r3, r6
 770 0010 028A     		ldrh	r2, [r0, #16]
 771              	.LVL52:
 772 0012 11B2     		sxth	r1, r2
 773              	.LVL53:
 774 0014 5B1A     		subs	r3, r3, r1
 775              	.LVL54:
 776 0016 4B44     		add	r3, r3, r9
 777 0018 013B     		subs	r3, r3, #1
 169:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     x_scaled_offset = (x_scaled_offset + 1) / 2 * 2; // must be even to preserve Bayer pattern
 778              		.loc 1 169 0
 779 001a 4FF6FE78 		movw	r8, #65534
 780              	.LBE412:
 165:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // Compute metric on ROI
 781              		.loc 1 165 0
 782 001e 97B0     		sub	sp, sp, #92
 783              	.LCFI13:
 784              		.cfi_def_cfa_offset 128
 785              	.LBB413:
 168:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t x_scaled_offset = (roi.left_x() - capture_rectangle_.left_x() + scale - 1) / scal
 786              		.loc 1 168 0
 787 0020 93FBF9F3 		sdiv	r3, r3, r9
 788              	.LBE413:
 165:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // Compute metric on ROI
 789              		.loc 1 165 0
 790 0024 0446     		mov	r4, r0
 791              	.LBB414:
 170:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t right_x_offset = roi.left_x() + roi.width() - capture_rectangle_.left_x();
 171:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t roi_scaled_width = right_x_offset / scale - x_scaled_offset;
 172:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::unique_ptr<contrast_processor> cp{new contrast_processor(0, roi_scaled_width/2)};
 792              		.loc 1 172 0
 793 0026 4FF4B150 		mov	r0, #5664
 794              	.LVL55:
 169:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     x_scaled_offset = (x_scaled_offset + 1) / 2 * 2; // must be even to preserve Bayer pattern
 795              		.loc 1 169 0
 796 002a 0133     		adds	r3, r3, #1
 797 002c 03EA0808 		and	r8, r3, r8
 798              	.LVL56:
 170:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t right_x_offset = roi.left_x() + roi.width() - capture_rectangle_.left_x();
 799              		.loc 1 170 0
 800 0030 BB88     		ldrh	r3, [r7, #4]
 801 0032 1E44     		add	r6, r6, r3
 802              	.LVL57:
 803              		.loc 1 172 0
 804 0034 6A4B     		ldr	r3, .L63
 170:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t right_x_offset = roi.left_x() + roi.width() - capture_rectangle_.left_x();
 805              		.loc 1 170 0
 806 0036 B61A     		subs	r6, r6, r2
 807              		.loc 1 172 0
 808 0038 9847     		blx	r3
 809              	.LVL58:
 810 003a 0021     		movs	r1, #0
 171:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::unique_ptr<contrast_processor> cp{new contrast_processor(0, roi_scaled_width/2)};
 811              		.loc 1 171 0
 812 003c B6B2     		uxth	r6, r6
 813              		.loc 1 172 0
 814 003e 694B     		ldr	r3, .L63+4
 171:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::unique_ptr<contrast_processor> cp{new contrast_processor(0, roi_scaled_width/2)};
 815              		.loc 1 171 0
 816 0040 B6FBF9F6 		udiv	r6, r6, r9
 817 0044 C8EB0606 		rsb	r6, r8, r6
 818 0048 B6B2     		uxth	r6, r6
 819              	.LVL59:
 820              		.loc 1 172 0
 821 004a 7208     		lsrs	r2, r6, #1
 173:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     cp->enable_metrics(metrics_mask);
 174:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     //cp->enable_metric(contrast_processor::GRADIENT);
 175:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     //cp->enable_metric(contrast_processor::INTENSITY);
 176:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     image_raw10 img(image_ptr_, capture_rectangle_.width()/scale);
 177:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t y_scaled_offset = (roi.top_y() - capture_rectangle_.top_y() + scale - 1) / scale;
 178:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     y_scaled_offset = (y_scaled_offset + 1) / 2 * 2; // must be even to preserve Bayer pattern
 822              		.loc 1 178 0
 823 004c 4FF6FE76 		movw	r6, #65534
 824              	.LVL60:
 172:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     cp->enable_metrics(metrics_mask);
 825              		.loc 1 172 0
 826 0050 0C90     		str	r0, [sp, #48]
 827 0052 9847     		blx	r3
 828              	.LVL61:
 173:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     cp->enable_metrics(metrics_mask);
 829              		.loc 1 173 0
 830 0054 2946     		mov	r1, r5
 831 0056 0C98     		ldr	r0, [sp, #48]
 832 0058 634B     		ldr	r3, .L63+8
 833 005a 9847     		blx	r3
 834              	.LVL62:
 176:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t y_scaled_offset = (roi.top_y() - capture_rectangle_.top_y() + scale - 1) / scale;
 835              		.loc 1 176 0
 836 005c A28A     		ldrh	r2, [r4, #20]
 837 005e D4F86011 		ldr	r1, [r4, #352]
 838 0062 12A8     		add	r0, sp, #72
 839 0064 B2FBF9F2 		udiv	r2, r2, r9
 840 0068 604B     		ldr	r3, .L63+12
 841 006a 9847     		blx	r3
 842              	.LVL63:
 843 006c 7D88     		ldrh	r5, [r7, #2]
 844              	.LVL64:
 845 006e 628A     		ldrh	r2, [r4, #18]
 846              	.LVL65:
 177:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     y_scaled_offset = (y_scaled_offset + 1) / 2 * 2; // must be even to preserve Bayer pattern
 847              		.loc 1 177 0
 848 0070 2BB2     		sxth	r3, r5
 849              	.LVL66:
 850 0072 11B2     		sxth	r1, r2
 851 0074 5B1A     		subs	r3, r3, r1
 852              	.LVL67:
 853 0076 4B44     		add	r3, r3, r9
 854 0078 013B     		subs	r3, r3, #1
 855 007a 93FBF9F3 		sdiv	r3, r3, r9
 856              		.loc 1 178 0
 857 007e 0133     		adds	r3, r3, #1
 858 0080 1E40     		ands	r6, r6, r3
 859              	.LVL68:
 179:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t bottom_y_offset = roi.top_y() + roi.height() - capture_rectangle_.top_y();
 860              		.loc 1 179 0
 861 0082 FB88     		ldrh	r3, [r7, #6]
 862 0084 1D44     		add	r5, r5, r3
 863              	.LVL69:
 864 0086 AD1A     		subs	r5, r5, r2
 180:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t roi_scaled_height = bottom_y_offset / scale - y_scaled_offset;
 865              		.loc 1 180 0
 866 0088 ADB2     		uxth	r5, r5
 867 008a B5FBF9F5 		udiv	r5, r5, r9
 868              	.LBB380:
 181:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     for (std::uint16_t y = 0; y < roi_scaled_height; ++y) {
 869              		.loc 1 181 0
 870 008e 4FF00009 		mov	r9, #0
 871              	.LVL70:
 872              	.LBE380:
 180:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint16_t roi_scaled_height = bottom_y_offset / scale - y_scaled_offset;
 873              		.loc 1 180 0
 874 0092 AD1B     		subs	r5, r5, r6
 875 0094 ADB2     		uxth	r5, r5
 876              	.LVL71:
 877              	.L52:
 878 0096 1FFA89F2 		uxth	r2, r9
 879              	.LBB381:
 880              		.loc 1 181 0 discriminator 1
 881 009a AA42     		cmp	r2, r5
 882 009c 11D2     		bcs	.L62
 883              	.LVL72:
 182:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         cp->process_line(img.get_iter(y + y_scaled_offset, x_scaled_offset));
 884              		.loc 1 182 0 discriminator 3
 885 009e 0DF1500A 		add	r10, sp, #80
 886 00a2 3244     		add	r2, r2, r6
 887 00a4 5046     		mov	r0, r10
 888 00a6 12A9     		add	r1, sp, #72
 889 00a8 92B2     		uxth	r2, r2
 890 00aa 4346     		mov	r3, r8
 891 00ac 09F10109 		add	r9, r9, #1
 892              	.LVL73:
 893 00b0 DFF844C1 		ldr	ip, .L63+24
 894 00b4 E047     		blx	ip
 895              	.LVL74:
 896 00b6 0C98     		ldr	r0, [sp, #48]
 897 00b8 9AE80600 		ldmia	r10, {r1, r2}
 898 00bc 4C4B     		ldr	r3, .L63+16
 899 00be 9847     		blx	r3
 900              	.LVL75:
 901 00c0 E9E7     		b	.L52
 902              	.LVL76:
 903              	.L62:
 904              	.LBE381:
 183:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
 184:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 185:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metrics_arr_ = cp->get_metrics_array();
 905              		.loc 1 185 0
 906 00c2 0C9B     		ldr	r3, [sp, #48]
 907 00c4 F022     		movs	r2, #240
 908 00c6 04F15000 		add	r0, r4, #80
 909 00ca 03F10801 		add	r1, r3, #8
 910 00ce 494B     		ldr	r3, .L63+20
 911 00d0 9847     		blx	r3
 912              	.LVL77:
 186:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 187:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const metrics_per_color& metric_i = metrics_arr_[contrast_processor::INTENSITY];
 188:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const metrics_per_color& metric_e = metrics_arr_[contrast_processor::ENERGY];
 189:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint32_t roi_width_color = roi.width() / 2;
 913              		.loc 1 189 0
 914 00d2 B7F804A0 		ldrh	r10, [r7, #4]
 915 00d6 4FEA5A0A 		lsr	r10, r10, #1
 916              	.LVL78:
 190:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint32_t roi_height_green = roi.height();
 917              		.loc 1 190 0
 918 00da FD88     		ldrh	r5, [r7, #6]
 919              	.LVL79:
 191:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint32_t roi_height_rb = roi_height_green / 2;
 920              		.loc 1 191 0
 921 00dc 6B08     		lsrs	r3, r5, #1
 192:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint32_t roi_area_green = roi_width_color * roi_height_green;
 922              		.loc 1 192 0
 923 00de 05FB0AFC 		mul	ip, r5, r10
 193:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint32_t roi_area_rb = roi_width_color * roi_height_rb;
 194:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metrics_per_color metric_iavg;
 195:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_iavg.green = metric_i.green / roi_area_green; // per pixel average value
 924              		.loc 1 195 0
 925 00e2 DFF818B1 		ldr	fp, .L63+28
 926 00e6 6246     		mov	r2, ip
 191:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint32_t roi_area_green = roi_width_color * roi_height_green;
 927              		.loc 1 191 0
 928 00e8 0D93     		str	r3, [sp, #52]
 929              	.LVL80:
 930              		.loc 1 195 0
 931 00ea 0023     		movs	r3, #0
 932              	.LVL81:
 933 00ec CDF810C0 		str	ip, [sp, #16]
 934 00f0 D4E93201 		ldrd	r0, [r4, #200]
 935 00f4 D847     		blx	fp
 936              	.LVL82:
 193:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint32_t roi_area_rb = roi_width_color * roi_height_rb;
 937              		.loc 1 193 0
 938 00f6 0D9B     		ldr	r3, [sp, #52]
 939 00f8 0AFB03F8 		mul	r8, r10, r3
 940              	.LVL83:
 196:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_iavg.red = metric_i.red / roi_area_rb;
 941              		.loc 1 196 0
 942 00fc 0023     		movs	r3, #0
 943 00fe 4246     		mov	r2, r8
 195:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_iavg.red = metric_i.red / roi_area_rb;
 944              		.loc 1 195 0
 945 0100 0646     		mov	r6, r0
 946              	.LVL84:
 947 0102 0F46     		mov	r7, r1
 948              	.LVL85:
 949              		.loc 1 196 0
 950 0104 D4E93401 		ldrd	r0, [r4, #208]
 951 0108 D847     		blx	fp
 952              	.LVL86:
 197:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_iavg.blue = metric_i.blue / roi_area_rb;
 953              		.loc 1 197 0
 954 010a 4246     		mov	r2, r8
 955 010c 0023     		movs	r3, #0
 196:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_iavg.red = metric_i.red / roi_area_rb;
 956              		.loc 1 196 0
 957 010e CDE90001 		strd	r0, [sp]
 958              	.LVL87:
 959              		.loc 1 197 0
 960 0112 D4E93601 		ldrd	r0, [r4, #216]
 961              	.LVL88:
 962 0116 D847     		blx	fp
 963              	.LVL89:
 198:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metrics_per_color metric_eavg;
 199:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_eavg.green = metric_e.green / roi_area_green;
 200:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_eavg.red = metric_e.red / roi_area_rb;
 201:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_eavg.blue = metric_e.blue / roi_area_rb;
 964              		.loc 1 201 0
 965 0118 4246     		mov	r2, r8
 966 011a 0023     		movs	r3, #0
 197:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_iavg.blue = metric_i.blue / roi_area_rb;
 967              		.loc 1 197 0
 968 011c CDE90201 		strd	r0, [sp, #8]
 969              	.LVL90:
 970              		.loc 1 201 0
 971 0120 D4E93C01 		ldrd	r0, [r4, #240]
 972              	.LVL91:
 973 0124 D847     		blx	fp
 974              	.LVL92:
 202:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metrics_per_color metric_var;
 203:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_var.green = metric_eavg.green - metric_iavg.green * metric_iavg.green;
 975              		.loc 1 203 0
 976 0126 06FB07F3 		mul	r3, r6, r7
 201:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metrics_per_color metric_var;
 977              		.loc 1 201 0
 978 012a CDE90E01 		strd	r0, [sp, #56]
 979              	.LVL93:
 980              		.loc 1 203 0
 981 012e A6FB0601 		umull	r0, r1, r6, r6
 982 0132 CDE90601 		strd	r0, [sp, #24]
 983 0136 079A     		ldr	r2, [sp, #28]
 200:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_eavg.blue = metric_e.blue / roi_area_rb;
 984              		.loc 1 200 0
 985 0138 D4E93A01 		ldrd	r0, [r4, #232]
 986              		.loc 1 203 0
 987 013c 02EB4303 		add	r3, r2, r3, lsl #1
 200:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_eavg.blue = metric_e.blue / roi_area_rb;
 988              		.loc 1 200 0
 989 0140 4246     		mov	r2, r8
 990              		.loc 1 203 0
 991 0142 0793     		str	r3, [sp, #28]
 200:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_eavg.blue = metric_e.blue / roi_area_rb;
 992              		.loc 1 200 0
 993 0144 0023     		movs	r3, #0
 994 0146 D847     		blx	fp
 995              	.LVL94:
 199:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_eavg.red = metric_e.red / roi_area_rb;
 996              		.loc 1 199 0
 997 0148 DDF810C0 		ldr	ip, [sp, #16]
 998 014c 6246     		mov	r2, ip
 999 014e 0023     		movs	r3, #0
 200:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_eavg.blue = metric_e.blue / roi_area_rb;
 1000              		.loc 1 200 0
 1001 0150 8046     		mov	r8, r0
 1002              	.LVL95:
 1003 0152 8946     		mov	r9, r1
 1004              	.LVL96:
 199:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_eavg.red = metric_e.red / roi_area_rb;
 1005              		.loc 1 199 0
 1006 0154 D4E93801 		ldrd	r0, [r4, #224]
 1007 0158 D847     		blx	fp
 1008              	.LVL97:
 1009 015a 18EB0002 		adds	r2, r8, r0
 1010 015e 49EB0103 		adc	r3, r9, r1
 1011              	.LBB382:
 1012              	.LBB383:
 1013              	.LBB384:
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             *value = 1;
 1014              		.loc 1 152 0
 1015 0162 002F     		cmp	r7, #0
 1016 0164 CDE91023 		strd	r2, [sp, #64]
 1017 0168 08BF     		it	eq
 1018 016a 2B2E     		cmpeq	r6, #43
 1019              	.LBE384:
 1020              	.LBE383:
 1021              	.LBE382:
 204:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_var.red = metric_eavg.red - metric_iavg.red * metric_iavg.red;
 1022              		.loc 1 204 0
 1023 016c 019A     		ldr	r2, [sp, #4]
 1024 016e 009B     		ldr	r3, [sp]
 1025 0170 03FB02F3 		mul	r3, r3, r2
 1026 0174 009A     		ldr	r2, [sp]
 1027 0176 A2FB0201 		umull	r0, r1, r2, r2
 1028 017a CDE90801 		strd	r0, [sp, #32]
 1029 017e 099A     		ldr	r2, [sp, #36]
 1030 0180 02EB4303 		add	r3, r2, r3, lsl #1
 205:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_var.blue = metric_eavg.blue - metric_iavg.blue * metric_iavg.blue;
 1031              		.loc 1 205 0
 1032 0184 039A     		ldr	r2, [sp, #12]
 204:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     metric_var.red = metric_eavg.red - metric_iavg.red * metric_iavg.red;
 1033              		.loc 1 204 0
 1034 0186 0993     		str	r3, [sp, #36]
 1035              		.loc 1 205 0
 1036 0188 029B     		ldr	r3, [sp, #8]
 1037 018a 03FB02F3 		mul	r3, r3, r2
 1038 018e 029A     		ldr	r2, [sp, #8]
 1039 0190 A2FB0201 		umull	r0, r1, r2, r2
 1040 0194 CDE90A01 		strd	r0, [sp, #40]
 1041 0198 0B9A     		ldr	r2, [sp, #44]
 1042 019a 02EB4303 		add	r3, r2, r3, lsl #1
 1043 019e 0B93     		str	r3, [sp, #44]
 1044              	.LVL98:
 1045              	.LBB391:
 1046              	.LBB386:
 1047              	.LBB385:
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             *value = 1;
 1048              		.loc 1 152 0
 1049 01a0 04D3     		bcc	.L57
 155:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
 1050              		.loc 1 155 0
 1051 01a2 B6F12A02 		subs	r2, r6, #42
 1052 01a6 47F1FF33 		adc	r3, r7, #-1
 1053              	.LVL99:
 1054 01aa 01E0     		b	.L54
 1055              	.LVL100:
 1056              	.L57:
 153:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         else
 1057              		.loc 1 153 0
 1058 01ac 0122     		movs	r2, #1
 1059 01ae 0023     		movs	r3, #0
 1060              	.LVL101:
 1061              	.L54:
 1062              	.LBE385:
 1063              	.LBE386:
 1064              	.LBB387:
 1065              	.LBB388:
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             *value = 1;
 1066              		.loc 1 152 0
 1067 01b0 DDE90001 		ldrd	r0, [sp]
 1068 01b4 0029     		cmp	r1, #0
 1069 01b6 08BF     		it	eq
 1070 01b8 2B28     		cmpeq	r0, #43
 1071 01ba 03D3     		bcc	.L58
 155:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
 1072              		.loc 1 155 0
 1073 01bc 2A38     		subs	r0, r0, #42
 1074 01be 41F1FF31 		adc	r1, r1, #-1
 1075 01c2 01E0     		b	.L60
 1076              	.L58:
 153:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         else
 1077              		.loc 1 153 0
 1078 01c4 0120     		movs	r0, #1
 1079 01c6 0021     		movs	r1, #0
 1080              	.L60:
 1081 01c8 CDE90401 		strd	r0, [sp, #16]
 1082              	.LVL102:
 1083              	.LBE388:
 1084              	.LBE387:
 1085              	.LBB389:
 1086              	.LBB390:
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             *value = 1;
 1087              		.loc 1 152 0
 1088 01cc DDE90201 		ldrd	r0, [sp, #8]
 1089              	.LVL103:
 1090 01d0 0029     		cmp	r1, #0
 1091 01d2 08BF     		it	eq
 1092 01d4 2B28     		cmpeq	r0, #43
 1093 01d6 13D3     		bcc	.L59
 155:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     }
 1094              		.loc 1 155 0
 1095 01d8 2A38     		subs	r0, r0, #42
 1096 01da 41F1FF31 		adc	r1, r1, #-1
 1097 01de 11E0     		b	.L61
 1098              	.L64:
 1099              		.align	2
 1100              	.L63:
 1101 01e0 00000000 		.word	_Znwj
 1102 01e4 00000000 		.word	_ZN18contrast_processorC1Ett
 1103 01e8 00000000 		.word	_ZN18contrast_processor14enable_metricsEm
 1104 01ec 00000000 		.word	_ZN11image_raw10C1EPKvt
 1105 01f0 00000000 		.word	_ZN18contrast_processor12process_lineE16image_pixel_iter
 1106 01f4 00000000 		.word	memcpy
 1107 01f8 00000000 		.word	_ZN11image_raw108get_iterEtt
 1108 01fc 00000000 		.word	__aeabi_uldivmod
 1109              	.L59:
 153:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****         else
 1110              		.loc 1 153 0
 1111 0200 0120     		movs	r0, #1
 1112 0202 0021     		movs	r1, #0
 1113              	.L61:
 1114 0204 CDE90001 		strd	r0, [sp]
 1115              	.LVL104:
 1116              	.LBE390:
 1117              	.LBE389:
 1118              	.LBE391:
 206:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 207:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #if 1
 208:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const std::uint16_t data_pedestal = 42;
 209:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     remove_data_pedestal1(&metric_iavg, data_pedestal);
 210:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 211:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint32_t roi_area_green_metric_g = (roi_width_color-1) * (roi_height_green-1);
 212:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const std::uint64_t quant_noise2 = 3;
 213:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const std::int32_t digital_to_photon_q16 = (static_cast<std::int32_t>(1) << 16) * 10 / 55;
 214:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint64_t green_g_noise = 4 * roi_area_green_metric_g
 215:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             * (((metric_iavg.green * digital_to_photon_q16) >> 16) + quant_noise2);
 1119              		.loc 1 215 0
 1120 0208 42F68B67 		movw	r7, #11915
 1121              	.LBB392:
 1122              	.LBB393:
 138:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         }
 139:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 140:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t total_metric() const {
 141:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             return green + red + blue;
 1123              		.loc 3 141 0
 1124 020c DDE90401 		ldrd	r0, [sp, #16]
 1125              	.LVL105:
 1126              	.LBE393:
 1127              	.LBE392:
 211:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const std::uint64_t quant_noise2 = 3;
 1128              		.loc 1 211 0
 1129 0210 013D     		subs	r5, r5, #1
 1130              	.LVL106:
 1131              	.LBB396:
 1132              	.LBB394:
 1133              		.loc 3 141 0
 1134 0212 DDE90089 		ldrd	r8, [sp]
 1135              	.LBE394:
 1136              	.LBE396:
 211:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const std::uint64_t quant_noise2 = 3;
 1137              		.loc 1 211 0
 1138 0216 0AF1FF3A 		add	r10, r10, #-1
 1139              	.LVL107:
 1140              	.LBB397:
 1141              	.LBB395:
 1142              		.loc 3 141 0
 1143 021a 8018     		adds	r0, r0, r2
 1144 021c 5941     		adcs	r1, r1, r3
 1145 021e 18EB0008 		adds	r8, r8, r0
 1146 0222 49EB0109 		adc	r9, r9, r1
 1147              	.LVL108:
 1148              	.LBE395:
 1149              	.LBE397:
 1150              		.loc 1 215 0
 1151 0226 A2FB0701 		umull	r0, r1, r2, r7
 1152 022a AD00     		lsls	r5, r5, #2
 1153              	.LVL109:
 216:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::int64_t iavg = metric_iavg.total_metric();
 217:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const metrics_per_color& metric_g = metrics_arr_[contrast_processor::GRADIENT];
 218:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::int64_t green_gnorm = metric_g.green - green_g_noise;
 219:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     green_gnorm = (green_gnorm / iavg) * 600 / iavg * 600 / iavg;
 1154              		.loc 1 219 0
 1155 022c 4FF41676 		mov	r6, #600
 215:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::int64_t iavg = metric_iavg.total_metric();
 1156              		.loc 1 215 0
 1157 0230 07FB0311 		mla	r1, r7, r3, r1
 214:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             * (((metric_iavg.green * digital_to_photon_q16) >> 16) + quant_noise2);
 1158              		.loc 1 214 0
 1159 0234 0AFB05F5 		mul	r5, r10, r5
 215:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::int64_t iavg = metric_iavg.total_metric();
 1160              		.loc 1 215 0
 1161 0238 020C     		lsrs	r2, r0, #16
 1162              	.LVL110:
 1163 023a 42EA0142 		orr	r2, r2, r1, lsl #16
 1164 023e 0332     		adds	r2, r2, #3
 1165 0240 4FEA1143 		lsr	r3, r1, #16
 1166 0244 A2FB0501 		umull	r0, r1, r2, r5
 1167 0248 43F10003 		adc	r3, r3, #0
 1168 024c 05FB0311 		mla	r1, r5, r3, r1
 218:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     green_gnorm = (green_gnorm / iavg) * 600 / iavg * 600 / iavg;
 1169              		.loc 1 218 0
 1170 0250 D4E91423 		ldrd	r2, [r4, #80]
 1171              		.loc 1 219 0
 1172 0254 5B4D     		ldr	r5, .L65
 1173 0256 101A     		subs	r0, r2, r0
 1174 0258 63EB0101 		sbc	r1, r3, r1
 1175 025c 4246     		mov	r2, r8
 1176 025e 4B46     		mov	r3, r9
 1177 0260 A847     		blx	r5
 1178              	.LVL111:
 1179 0262 A0FB0623 		umull	r2, r3, r0, r6
 1180 0266 1046     		mov	r0, r2
 1181 0268 4246     		mov	r2, r8
 1182 026a 06FB0133 		mla	r3, r6, r1, r3
 1183 026e 1946     		mov	r1, r3
 1184 0270 4B46     		mov	r3, r9
 1185 0272 A847     		blx	r5
 1186              	.LVL112:
 1187 0274 A0FB0623 		umull	r2, r3, r0, r6
 1188 0278 CDE90223 		strd	r2, [sp, #8]
 1189 027c 039B     		ldr	r3, [sp, #12]
 1190 027e 06FB0133 		mla	r3, r6, r1, r3
 1191 0282 0393     		str	r3, [sp, #12]
 1192              	.LVL113:
 220:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 221:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint32_t roi_area_rb_metric_g = (roi_width_color-1) * (roi_height_rb-1);
 1193              		.loc 1 221 0
 1194 0284 0D9B     		ldr	r3, [sp, #52]
 1195 0286 013B     		subs	r3, r3, #1
 1196 0288 03FB0AFA 		mul	r10, r3, r10
 1197              	.LVL114:
 222:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint64_t red_g_noise = 4 * roi_area_rb_metric_g
 223:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             * (((metric_iavg.red * digital_to_photon_q16) >> 16) + quant_noise2);
 1198              		.loc 1 223 0
 1199 028c 049B     		ldr	r3, [sp, #16]
 222:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint64_t red_g_noise = 4 * roi_area_rb_metric_g
 1200              		.loc 1 222 0
 1201 028e 4FEA8A0A 		lsl	r10, r10, #2
 1202              	.LVL115:
 1203              		.loc 1 223 0
 1204 0292 A3FB0701 		umull	r0, r1, r3, r7
 1205 0296 059B     		ldr	r3, [sp, #20]
 1206 0298 020C     		lsrs	r2, r0, #16
 1207 029a 07FB0311 		mla	r1, r7, r3, r1
 1208 029e 42EA0142 		orr	r2, r2, r1, lsl #16
 1209 02a2 0332     		adds	r2, r2, #3
 1210 02a4 4FEA1143 		lsr	r3, r1, #16
 1211 02a8 A2FB0A01 		umull	r0, r1, r2, r10
 1212 02ac 43F10003 		adc	r3, r3, #0
 1213 02b0 0AFB0311 		mla	r1, r10, r3, r1
 224:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::int64_t red_gnorm = metric_g.red - red_g_noise;
 1214              		.loc 1 224 0
 1215 02b4 D4E91623 		ldrd	r2, [r4, #88]
 225:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     red_gnorm = (red_gnorm / iavg) * 600 / iavg * 600 / iavg;
 1216              		.loc 1 225 0
 1217 02b8 101A     		subs	r0, r2, r0
 1218 02ba 63EB0101 		sbc	r1, r3, r1
 1219 02be 4246     		mov	r2, r8
 1220 02c0 4B46     		mov	r3, r9
 1221 02c2 A847     		blx	r5
 1222              	.LVL116:
 1223 02c4 A0FB0623 		umull	r2, r3, r0, r6
 1224 02c8 1046     		mov	r0, r2
 1225 02ca 4246     		mov	r2, r8
 1226 02cc 06FB0133 		mla	r3, r6, r1, r3
 1227 02d0 1946     		mov	r1, r3
 1228 02d2 4B46     		mov	r3, r9
 1229 02d4 A847     		blx	r5
 1230              	.LVL117:
 1231 02d6 A0FB0623 		umull	r2, r3, r0, r6
 1232 02da CDE90423 		strd	r2, [sp, #16]
 1233              	.LVL118:
 1234 02de 059B     		ldr	r3, [sp, #20]
 1235 02e0 06FB0133 		mla	r3, r6, r1, r3
 1236 02e4 0593     		str	r3, [sp, #20]
 1237              	.LVL119:
 226:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 227:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::uint64_t blue_g_noise = 4 * roi_area_rb_metric_g
 228:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             * (((metric_iavg.blue * digital_to_photon_q16) >> 16) + quant_noise2);
 1238              		.loc 1 228 0
 1239 02e6 009B     		ldr	r3, [sp]
 1240 02e8 A3FB0701 		umull	r0, r1, r3, r7
 1241 02ec 019B     		ldr	r3, [sp, #4]
 1242 02ee 020C     		lsrs	r2, r0, #16
 1243 02f0 07FB0311 		mla	r1, r7, r3, r1
 1244 02f4 42EA0142 		orr	r2, r2, r1, lsl #16
 1245 02f8 0332     		adds	r2, r2, #3
 1246 02fa 4FEA1143 		lsr	r3, r1, #16
 1247 02fe A2FB0A01 		umull	r0, r1, r2, r10
 1248 0302 43F10003 		adc	r3, r3, #0
 1249 0306 0AFB0311 		mla	r1, r10, r3, r1
 229:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::int64_t blue_gnorm = metric_g.blue - blue_g_noise;
 1250              		.loc 1 229 0
 1251 030a D4E91823 		ldrd	r2, [r4, #96]
 230:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     blue_gnorm = (blue_gnorm / iavg) * 600 / iavg * 600 / iavg;
 1252              		.loc 1 230 0
 1253 030e 101A     		subs	r0, r2, r0
 1254 0310 63EB0101 		sbc	r1, r3, r1
 1255 0314 4246     		mov	r2, r8
 1256 0316 4B46     		mov	r3, r9
 1257 0318 A847     		blx	r5
 1258              	.LVL120:
 1259 031a A0FB0623 		umull	r2, r3, r0, r6
 1260 031e 1046     		mov	r0, r2
 1261 0320 4246     		mov	r2, r8
 1262 0322 06FB0133 		mla	r3, r6, r1, r3
 1263 0326 1946     		mov	r1, r3
 1264 0328 4B46     		mov	r3, r9
 1265 032a A847     		blx	r5
 1266              	.LVL121:
 231:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #endif
 232:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 233:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     sharpness_metric_gradient_norm_ = green_gnorm + red_gnorm + blue_gnorm;
 1267              		.loc 1 233 0
 1268 032c 04F5A07C 		add	ip, r4, #320
 219:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 1269              		.loc 1 219 0
 1270 0330 4246     		mov	r2, r8
 1271 0332 4B46     		mov	r3, r9
 1272              		.loc 1 233 0
 1273 0334 CDF800C0 		str	ip, [sp]
 1274              	.LVL122:
 234:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     sharpness_metric_variance_ = metric_var.total_metric();
 1275              		.loc 1 234 0
 1276 0338 04F5A474 		add	r4, r4, #328
 1277              	.LVL123:
 230:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #endif
 1278              		.loc 1 230 0
 1279 033c A0FB06AB 		umull	r10, fp, r0, r6
 1280 0340 06FB01BB 		mla	fp, r6, r1, fp
 1281              	.LVL124:
 219:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 1282              		.loc 1 219 0
 1283 0344 DDE90201 		ldrd	r0, [sp, #8]
 1284 0348 A847     		blx	r5
 1285              	.LVL125:
 225:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 1286              		.loc 1 225 0
 1287 034a 4246     		mov	r2, r8
 1288 034c 4B46     		mov	r3, r9
 219:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 1289              		.loc 1 219 0
 1290 034e 0646     		mov	r6, r0
 1291 0350 0F46     		mov	r7, r1
 225:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 1292              		.loc 1 225 0
 1293 0352 DDE90401 		ldrd	r0, [sp, #16]
 1294 0356 A847     		blx	r5
 1295              	.LVL126:
 230:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #endif
 1296              		.loc 1 230 0
 1297 0358 4246     		mov	r2, r8
 1298 035a 4B46     		mov	r3, r9
 233:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     sharpness_metric_variance_ = metric_var.total_metric();
 1299              		.loc 1 233 0
 1300 035c 3618     		adds	r6, r6, r0
 1301 035e 4F41     		adcs	r7, r7, r1
 230:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #endif
 1302              		.loc 1 230 0
 1303 0360 5046     		mov	r0, r10
 1304 0362 5946     		mov	r1, fp
 1305 0364 A847     		blx	r5
 1306              	.LVL127:
 1307 0366 DDE90E23 		ldrd	r2, [sp, #56]
 1308 036a DDE91089 		ldrd	r8, [sp, #64]
 1309              	.LVL128:
 233:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     sharpness_metric_variance_ = metric_var.total_metric();
 1310              		.loc 1 233 0
 1311 036e DDF800C0 		ldr	ip, [sp]
 1312 0372 8019     		adds	r0, r0, r6
 1313 0374 7941     		adcs	r1, r1, r7
 1314 0376 18EB0208 		adds	r8, r8, r2
 1315 037a 49EB0309 		adc	r9, r9, r3
 1316 037e DDE90623 		ldrd	r2, [sp, #24]
 1317 0382 CCE90001 		strd	r0, [ip]
 1318              	.LVL129:
 1319 0386 B8EB0202 		subs	r2, r8, r2
 1320 038a 69EB0303 		sbc	r3, r9, r3
 1321 038e 9046     		mov	r8, r2
 1322 0390 9946     		mov	r9, r3
 1323 0392 DDE90823 		ldrd	r2, [sp, #32]
 1324              	.LBB398:
 1325              	.LBB399:
 1326              	.LBB400:
 1327              	.LBB401:
 1328              		.file 5 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_
   1:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // unique_ptr implementation -*- C++ -*-
   2:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
   3:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // Copyright (C) 2008-2014 Free Software Foundation, Inc.
   4:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** //
   5:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // terms of the GNU General Public License as published by the
   8:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // any later version.
  10:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  11:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // GNU General Public License for more details.
  15:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  16:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  20:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  25:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** /** @file bits/unique_ptr.h
  26:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****  */
  29:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  30:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #ifndef _UNIQUE_PTR_H
  31:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #define _UNIQUE_PTR_H 1
  32:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  33:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #include <bits/c++config.h>
  34:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #include <debug/debug.h>
  35:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #include <type_traits>
  36:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #include <utility>
  37:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #include <tuple>
  38:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  39:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** namespace std _GLIBCXX_VISIBILITY(default)
  40:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** {
  41:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  43:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   /**
  44:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****    * @addtogroup pointer_abstractions
  45:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****    * @{
  46:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****    */
  47:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  48:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #if _GLIBCXX_USE_DEPRECATED
  49:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   template<typename> class auto_ptr;
  50:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #endif
  51:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  52:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   /// Primary template of default_delete, used by unique_ptr
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   template<typename _Tp>
  54:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     struct default_delete
  55:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     {
  56:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Default constructor
  57:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       constexpr default_delete() noexcept = default;
  58:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  59:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** @brief Converting constructor.
  60:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
  61:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * Allows conversion from a deleter for arrays of another type, @p _Up,
  62:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * only if @p _Up* is convertible to @p _Tp*.
  63:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
  64:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up, typename = typename
  65:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       enable_if<is_convertible<_Up*, _Tp*>::value>::type>
  66:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****         default_delete(const default_delete<_Up>&) noexcept { }
  67:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  68:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Calls @c delete @p __ptr
  69:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       void
  70:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       operator()(_Tp* __ptr) const
  71:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
  72:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	static_assert(!is_void<_Tp>::value,
  73:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  74:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	static_assert(sizeof(_Tp)>0,
  75:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	delete __ptr;
 1329              		.loc 5 76 0
 1330 0396 0C98     		ldr	r0, [sp, #48]
 1331 0398 B8EB0202 		subs	r2, r8, r2
 1332 039c 69EB0303 		sbc	r3, r9, r3
 1333 03a0 9046     		mov	r8, r2
 1334 03a2 9946     		mov	r9, r3
 1335              	.LBE401:
 1336              	.LBE400:
 1337              	.LBE399:
 1338              	.LBE398:
 1339              	.LBB408:
 1340              	.LBB409:
 1341              		.loc 3 141 0
 1342 03a4 DDE90A23 		ldrd	r2, [sp, #40]
 1343 03a8 B8EB0202 		subs	r2, r8, r2
 1344 03ac 69EB0303 		sbc	r3, r9, r3
 1345 03b0 9046     		mov	r8, r2
 1346 03b2 9946     		mov	r9, r3
 1347              	.LBE409:
 1348              	.LBE408:
 1349              	.LBB410:
 1350              	.LBB406:
 1351              	.LBB404:
 1352              	.LBB402:
 1353              		.loc 5 76 0
 1354 03b4 044B     		ldr	r3, .L65+4
 1355              	.LBE402:
 1356              	.LBE404:
 1357              	.LBE406:
 1358              	.LBE410:
 1359              		.loc 1 234 0
 1360 03b6 C4E90089 		strd	r8, [r4]
 1361              	.LVL130:
 1362              	.LBB411:
 1363              	.LBB407:
 1364              	.LBB405:
 1365              	.LBB403:
 1366              		.loc 5 76 0
 1367 03ba 9847     		blx	r3
 1368              	.LVL131:
 1369              	.LBE403:
 1370              	.LBE405:
 1371              	.LBE407:
 1372              	.LBE411:
 1373              	.LBE414:
 235:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 236:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     //log_metrics(metrics_mask);
 237:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 238:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #if 0
 239:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     // PAA_DEBUG Copy image:
 240:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     static char* dst = reinterpret_cast<char*>(DDR_BASE + 0x8000000);
 241:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const char* src = static_cast<const char*>(img.get_iter(0,0).current_pixelp());
 242:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const char* src_end = static_cast<const char*>(img.get_iter(capture_rectangle_.height(),0).curr
 243:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::size_t img_size = src_end - src;
 244:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     std::memcpy(dst, src, img_size);
 245:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     SLOGF(SLOG_DEBUG, "Copied image to address 0x%08llx, size: %d", reinterpret_cast<std::uint64_t>
 246:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     dst += 0x1400000;
 247:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** #endif
 248:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 1374              		.loc 1 248 0
 1375 03bc 17B0     		add	sp, sp, #92
 1376              	.LCFI14:
 1377              		.cfi_def_cfa_offset 36
 1378              		@ sp needed
 1379 03be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1380              	.LVL132:
 1381              	.L66:
 1382 03c2 00BF     		.align	2
 1383              	.L65:
 1384 03c4 00000000 		.word	__aeabi_ldivmod
 1385 03c8 00000000 		.word	_ZdlPv
 1386              		.cfi_endproc
 1387              	.LFE2096:
 1389              		.section	.text._ZN20contrast_refine_step11log_metricsEm,"ax",%progbits
 1390              		.align	1
 1391              		.global	_ZN20contrast_refine_step11log_metricsEm
 1392              		.thumb
 1393              		.thumb_func
 1395              	_ZN20contrast_refine_step11log_metricsEm:
 1396              	.LFB2097:
 249:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 250:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** void contrast_refine_step::log_metrics(std::uint32_t metrics_mask) {
 1397              		.loc 1 250 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 0, uses_anonymous_args = 0
 1401              	.LVL133:
 1402 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1403              	.LCFI15:
 1404              		.cfi_def_cfa_offset 20
 1405              		.cfi_offset 4, -20
 1406              		.cfi_offset 5, -16
 1407              		.cfi_offset 6, -12
 1408              		.cfi_offset 7, -8
 1409              		.cfi_offset 14, -4
 1410 0002 0446     		mov	r4, r0
 1411 0004 8FB0     		sub	sp, sp, #60
 1412              	.LCFI16:
 1413              		.cfi_def_cfa_offset 80
 1414              	.LBB415:
 251:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const metrics_per_color& mgth = metrics_arr_[contrast_processor::GRADIENT_TH];
 252:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const metrics_per_color& mg = metrics_arr_[contrast_processor::GRADIENT];
 253:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const metrics_per_color& mi = metrics_arr_[contrast_processor::INTENSITY];
 254:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const metrics_per_color& me = metrics_arr_[contrast_processor::ENERGY];
 255:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const metrics_per_color& ml2 = metrics_arr_[contrast_processor::LAPLACIAN2];
 256:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const metrics_per_color& md4gth = metrics_arr_[contrast_processor::DECIMATED4_GRADIENT_TH];
 257:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     const metrics_per_color& mfgth = metrics_arr_[contrast_processor::FILTERED_GRADIENT_TH];
 258:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** 
 259:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     SLOGF(SLOG_DEBUG, "CAM-%X Contrast metrics green:  %11llu, %11llu, %11llu, %11llu, %11llu, %11l
 1415              		.loc 1 259 0
 1416 0006 8369     		ldr	r3, [r0, #24]
 1417 0008 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 260:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             afs_.cam->info.module, mgth.green, mg.green, mi.green, me.green, ml2.green, md4gth.gree
 1418              		.loc 1 260 0
 1419 000c D0E93E01 		ldrd	r0, [r0, #248]
 1420              	.LVL134:
 259:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             afs_.cam->info.module, mgth.green, mg.green, mi.green, me.green, ml2.green, md4gth.gree
 1421              		.loc 1 259 0
 1422 0010 2746     		mov	r7, r4
 1423              		.loc 1 260 0
 1424 0012 CDE90001 		strd	r0, [sp]
 259:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             afs_.cam->info.module, mgth.green, mg.green, mi.green, me.green, ml2.green, md4gth.gree
 1425              		.loc 1 259 0
 1426 0016 2646     		mov	r6, r4
 1427              		.loc 1 260 0
 1428 0018 D4E91401 		ldrd	r0, [r4, #80]
 1429 001c CDE90201 		strd	r0, [sp, #8]
 1430 0020 D4E93201 		ldrd	r0, [r4, #200]
 1431 0024 CDE90401 		strd	r0, [sp, #16]
 1432 0028 D4E93801 		ldrd	r0, [r4, #224]
 1433 002c CDE90601 		strd	r0, [sp, #24]
 1434 0030 D4E92001 		ldrd	r0, [r4, #128]
 1435 0034 CDE90801 		strd	r0, [sp, #32]
 1436 0038 F7E94401 		ldrd	r0, [r7, #272]!
 1437 003c CDE90A01 		strd	r0, [sp, #40]
 1438 0040 F6E94A01 		ldrd	r0, [r6, #296]!
 1439 0044 324D     		ldr	r5, .L68
 1440 0046 CDE90C01 		strd	r0, [sp, #48]
 1441 004a 2B20     		movs	r0, #43
 1442 004c 1021     		movs	r1, #16
 1443              	.LVL135:
 1444 004e 314A     		ldr	r2, .L68+4
 1445 0050 A847     		blx	r5
 1446              	.LVL136:
 261:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     SLOGF(SLOG_DEBUG, "CAM-%X Contrast metrics red:    %11llu, %11llu, %11llu, %11llu, %11llu, %11l
 1447              		.loc 1 261 0
 1448 0052 04F58072 		add	r2, r4, #256
 1449 0056 A369     		ldr	r3, [r4, #24]
 1450 0058 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 262:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             afs_.cam->info.module, mgth.red, mg.red, mi.red, me.red, ml2.red, md4gth.red, mfgth.red
 1451              		.loc 1 262 0
 1452 005c D2E90001 		ldrd	r0, [r2]
 1453 0060 CDE90001 		strd	r0, [sp]
 1454 0064 D4E91601 		ldrd	r0, [r4, #88]
 1455 0068 CDE90201 		strd	r0, [sp, #8]
 1456 006c D4E93401 		ldrd	r0, [r4, #208]
 1457 0070 CDE90401 		strd	r0, [sp, #16]
 1458 0074 D4E93A01 		ldrd	r0, [r4, #232]
 1459 0078 CDE90601 		strd	r0, [sp, #24]
 1460 007c D4E92201 		ldrd	r0, [r4, #136]
 1461 0080 CDE90801 		strd	r0, [sp, #32]
 1462 0084 D7E90201 		ldrd	r0, [r7, #8]
 1463 0088 CDE90A01 		strd	r0, [sp, #40]
 1464 008c D6E90201 		ldrd	r0, [r6, #8]
 1465 0090 CDE90C01 		strd	r0, [sp, #48]
 1466 0094 2B20     		movs	r0, #43
 1467 0096 1021     		movs	r1, #16
 1468 0098 1F4A     		ldr	r2, .L68+8
 1469 009a A847     		blx	r5
 1470              	.LVL137:
 263:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     SLOGF(SLOG_DEBUG, "CAM-%X Contrast metrics blue:   %11llu, %11llu, %11llu, %11llu, %11llu, %11l
 1471              		.loc 1 263 0
 1472 009c 04F58472 		add	r2, r4, #264
 1473 00a0 A369     		ldr	r3, [r4, #24]
 1474 00a2 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 264:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             afs_.cam->info.module, mgth.blue, mg.blue, mi.blue, me.blue, ml2.blue, md4gth.blue, mfg
 1475              		.loc 1 264 0
 1476 00a6 D2E90001 		ldrd	r0, [r2]
 1477 00aa CDE90001 		strd	r0, [sp]
 1478 00ae D4E91801 		ldrd	r0, [r4, #96]
 1479 00b2 CDE90201 		strd	r0, [sp, #8]
 1480 00b6 D4E93601 		ldrd	r0, [r4, #216]
 1481 00ba CDE90401 		strd	r0, [sp, #16]
 1482 00be D4E93C01 		ldrd	r0, [r4, #240]
 1483 00c2 CDE90601 		strd	r0, [sp, #24]
 1484 00c6 D4E92401 		ldrd	r0, [r4, #144]
 1485 00ca CDE90801 		strd	r0, [sp, #32]
 1486 00ce D7E90401 		ldrd	r0, [r7, #16]
 1487 00d2 CDE90A01 		strd	r0, [sp, #40]
 1488 00d6 D6E90401 		ldrd	r0, [r6, #16]
 1489 00da CDE90C01 		strd	r0, [sp, #48]
 1490 00de 2B20     		movs	r0, #43
 1491 00e0 1021     		movs	r1, #16
 1492 00e2 0E4A     		ldr	r2, .L68+12
 1493 00e4 A847     		blx	r5
 1494              	.LVL138:
 265:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****     SLOGF(SLOG_DEBUG, "CAM-%X Contrast metrics gnorm, var: %lld, %llu",
 1495              		.loc 1 265 0
 1496 00e6 04F5A072 		add	r2, r4, #320
 1497 00ea A369     		ldr	r3, [r4, #24]
 1498 00ec 04F5A474 		add	r4, r4, #328
 1499              	.LVL139:
 1500 00f0 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 266:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp ****             afs_.cam->info.module, sharpness_metric_gradient_norm_, sharpness_metric_variance_);
 1501              		.loc 1 266 0
 1502 00f4 D2E90001 		ldrd	r0, [r2]
 1503 00f8 CDE90001 		strd	r0, [sp]
 1504 00fc D4E90001 		ldrd	r0, [r4]
 1505 0100 CDE90201 		strd	r0, [sp, #8]
 1506 0104 2B20     		movs	r0, #43
 1507 0106 1021     		movs	r1, #16
 1508 0108 054A     		ldr	r2, .L68+16
 1509 010a A847     		blx	r5
 1510              	.LVL140:
 1511              	.LBE415:
 267:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_refine_step.cpp **** }
 1512              		.loc 1 267 0
 1513 010c 0FB0     		add	sp, sp, #60
 1514              	.LCFI17:
 1515              		.cfi_def_cfa_offset 20
 1516              		@ sp needed
 1517 010e F0BD     		pop	{r4, r5, r6, r7, pc}
 1518              	.LVL141:
 1519              	.L69:
 1520              		.align	2
 1521              	.L68:
 1522 0110 00000000 		.word	slogf
 1523 0114 7E000000 		.word	.LC2
 1524 0118 D5000000 		.word	.LC3
 1525 011c 2C010000 		.word	.LC4
 1526 0120 83010000 		.word	.LC5
 1527              		.cfi_endproc
 1528              	.LFE2097:
 1530              		.section	.rodata.str1.1,"aMS",%progbits,1
 1531              	.LC0:
 1532 0000 0D0A4572 		.ascii	"\015\012Error: frame_captured_cb called when no cap"
 1532      726F723A 
 1532      20667261 
 1532      6D655F63 
 1532      61707475 
 1533 002d 74757265 		.ascii	"ture requested\015\000"
 1533      20726571 
 1533      75657374 
 1533      65640D00 
 1534              	.LC1:
 1535 003d 0D0A4572 		.ascii	"\015\012Error: crs_mipi2axi_callback called when no"
 1535      726F723A 
 1535      20637273 
 1535      5F6D6970 
 1535      69326178 
 1536 006a 20636170 		.ascii	" capture requested\015\000"
 1536      74757265 
 1536      20726571 
 1536      75657374 
 1536      65640D00 
 1537              	.LC2:
 1538 007e 43414D2D 		.ascii	"CAM-%X Contrast metrics green:  %11llu, %11llu, %11"
 1538      25582043 
 1538      6F6E7472 
 1538      61737420 
 1538      6D657472 
 1539 00b1 6C6C752C 		.ascii	"llu, %11llu, %11llu, %11llu, %11llu\000"
 1539      20253131 
 1539      6C6C752C 
 1539      20253131 
 1539      6C6C752C 
 1540              	.LC3:
 1541 00d5 43414D2D 		.ascii	"CAM-%X Contrast metrics red:    %11llu, %11llu, %11"
 1541      25582043 
 1541      6F6E7472 
 1541      61737420 
 1541      6D657472 
 1542 0108 6C6C752C 		.ascii	"llu, %11llu, %11llu, %11llu, %11llu\000"
 1542      20253131 
 1542      6C6C752C 
 1542      20253131 
 1542      6C6C752C 
 1543              	.LC4:
 1544 012c 43414D2D 		.ascii	"CAM-%X Contrast metrics blue:   %11llu, %11llu, %11"
 1544      25582043 
 1544      6F6E7472 
 1544      61737420 
 1544      6D657472 
 1545 015f 6C6C752C 		.ascii	"llu, %11llu, %11llu, %11llu, %11llu\000"
 1545      20253131 
 1545      6C6C752C 
 1545      20253131 
 1545      6C6C752C 
 1546              	.LC5:
 1547 0183 43414D2D 		.ascii	"CAM-%X Contrast metrics gnorm, var: %lld, %llu\000"
 1547      25582043 
 1547      6F6E7472 
 1547      61737420 
 1547      6D657472 
 1548              		.section	.bss._ZN12_GLOBAL__N_131num_pending_frame_end_callbacksE,"aw",%nobits
 1549              		.align	2
 1550              		.set	.LANCHOR0,. + 0
 1553              	_ZN12_GLOBAL__N_131num_pending_frame_end_callbacksE:
 1554 0000 00000000 		.space	4
 1555              		.text
 1556              	.Letext0:
 1557              		.file 6 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h
 1558              		.file 7 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/machine/_default_types
 1559              		.file 8 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/sys/lock.h"
 1560              		.file 9 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/sys/_types.h"
 1561              		.file 10 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/sys/reent.h"
 1562              		.file 11 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/cstring"
 1563              		.file 12 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/type_traits
 1564              		.file 13 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/except
 1565              		.file 14 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/arm-none-ea
 1566              		.file 15 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/stl_pa
 1567              		.file 16 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/new"
 1568              		.file 17 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/alloca
 1569              		.file 18 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/cwchar"
 1570              		.file 19 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/uses_a
 1571              		.file 20 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/char_t
 1572              		.file 21 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/cstdint"
 1573              		.file 22 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/clocale"
 1574              		.file 23 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/basic_
 1575              		.file 24 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/basic_
 1576              		.file 25 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple"
 1577              		.file 26 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/shared
 1578              		.file 27 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset"
 1579              		.file 28 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/atomic"
 1580              		.file 29 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h
 1581              		.file 30 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/string.h"
 1582              		.file 31 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/cpp_ty
 1583              		.file 32 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/debug/debug
 1584              		.file 33 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/predef
 1585              		.file 34 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/ext/new_all
 1586              		.file 35 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/ext/numeric
 1587              		.file 36 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/ext/concurr
 1588              		.file 37 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.
 1589              		.file 38 "<built-in>"
 1590              		.file 39 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/wchar.h"
 1591              		.file 40 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/arm-none-ea
 1592              		.file 41 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/stdint.h"
 1593              		.file 42 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/locale.h"
 1594              		.file 43 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacr
 1595              		.file 44 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/include/queue.h"
 1596              		.file 45 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/include/semphr.h"
 1597              		.file 46 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/include/event_groups.h"
 1598              		.file 47 "/home/tienluong/workspace/atlantis_fw/platform/asic/hal/include/hal_syncio.h"
 1599              		.file 48 "/home/tienluong/workspace/atlantis_fw/platform/asic/hal/include/hal_i2c.h"
 1600              		.file 49 "/home/tienluong/workspace/atlantis_fw/platform/asic/hal/include/hal_mipi2axi.h"
 1601              		.file 50 "/home/tienluong/workspace/atlantis_fw/platform/common/lcc_system.h"
 1602              		.file 51 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/img_sensor.h"
 1603              		.file 52 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/optical.h"
 1604              		.file 53 "/home/tienluong/workspace/atlantis_fw/platform/driver/include/eeprom.h"
 1605              		.file 54 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/light_system.h"
 1606              		.file 55 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/af_helper.h"
 1607              		.file 56 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/image_pixel_iter.h"
 1608              		.file 57 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/image_raw10.h"
 1609              		.file 58 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/lens_position_control.h"
 1610              		.file 59 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h"
 1611              		.file 60 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_refine_step.h"
DEFINED SYMBOLS
                            *ABS*:00000000 contrast_refine_step.cpp
     /tmp/ccs7048v.s:19     .text._ZN20contrast_refine_stepC2ER13cam_typedef_ttRK9rectanglePvS5_mm:00000000 $t
     /tmp/ccs7048v.s:24     .text._ZN20contrast_refine_stepC2ER13cam_typedef_ttRK9rectanglePvS5_mm:00000000 _ZN20contrast_refine_stepC2ER13cam_typedef_ttRK9rectanglePvS5_mm
     /tmp/ccs7048v.s:280    .text._ZN20contrast_refine_stepC2ER13cam_typedef_ttRK9rectanglePvS5_mm:00000130 $d
     /tmp/ccs7048v.s:625    .text.crs_mipi2axi_callback:00000000 crs_mipi2axi_callback
     /tmp/ccs7048v.s:24     .text._ZN20contrast_refine_stepC2ER13cam_typedef_ttRK9rectanglePvS5_mm:00000000 _ZN20contrast_refine_stepC1ER13cam_typedef_ttRK9rectanglePvS5_mm
     /tmp/ccs7048v.s:291    .text._ZN20contrast_refine_stepD2Ev:00000000 $t
     /tmp/ccs7048v.s:296    .text._ZN20contrast_refine_stepD2Ev:00000000 _ZN20contrast_refine_stepD2Ev
     /tmp/ccs7048v.s:296    .text._ZN20contrast_refine_stepD2Ev:00000000 _ZN20contrast_refine_stepD1Ev
     /tmp/ccs7048v.s:312    .text._ZN20contrast_refine_step15start_move_lensEst:00000000 $t
     /tmp/ccs7048v.s:317    .text._ZN20contrast_refine_step15start_move_lensEst:00000000 _ZN20contrast_refine_step15start_move_lensEst
     /tmp/ccs7048v.s:344    .text._ZN20contrast_refine_step15start_move_lensEst:00000010 $d
     /tmp/ccs7048v.s:465    .text._Z21lens_movement_done_cbPvbs:00000000 _Z21lens_movement_done_cbPvbs
     /tmp/ccs7048v.s:350    .text._ZN20contrast_refine_step19start_capture_frameEv:00000000 $t
     /tmp/ccs7048v.s:355    .text._ZN20contrast_refine_step19start_capture_frameEv:00000000 _ZN20contrast_refine_step19start_capture_frameEv
     /tmp/ccs7048v.s:415    .text._ZN20contrast_refine_step19start_capture_frameEv:00000030 $d
     /tmp/ccs7048v.s:421    .text._ZN20contrast_refine_step21lens_movement_done_cbEbs:00000000 $t
     /tmp/ccs7048v.s:426    .text._ZN20contrast_refine_step21lens_movement_done_cbEbs:00000000 _ZN20contrast_refine_step21lens_movement_done_cbEbs
     /tmp/ccs7048v.s:455    .text._ZN20contrast_refine_step21lens_movement_done_cbEbs:00000018 $d
     /tmp/ccs7048v.s:460    .text._Z21lens_movement_done_cbPvbs:00000000 $t
     /tmp/ccs7048v.s:485    .text._Z21lens_movement_done_cbPvbs:00000008 $d
     /tmp/ccs7048v.s:490    .text._ZN20contrast_refine_step17frame_captured_cbEv:00000000 $t
     /tmp/ccs7048v.s:495    .text._ZN20contrast_refine_step17frame_captured_cbEv:00000000 _ZN20contrast_refine_step17frame_captured_cbEv
     /tmp/ccs7048v.s:611    .text._ZN20contrast_refine_step17frame_captured_cbEv:00000064 $d
     /tmp/ccs7048v.s:620    .text.crs_mipi2axi_callback:00000000 $t
     /tmp/ccs7048v.s:687    .text.crs_mipi2axi_callback:00000024 $d
     /tmp/ccs7048v.s:697    .text._ZN20contrast_refine_step11mipi2axi_cbEhmm:00000000 $t
     /tmp/ccs7048v.s:702    .text._ZN20contrast_refine_step11mipi2axi_cbEhmm:00000000 _ZN20contrast_refine_step11mipi2axi_cbEhmm
     /tmp/ccs7048v.s:727    .text._ZN20contrast_refine_step11mipi2axi_cbEhmm:0000000c $d
     /tmp/ccs7048v.s:734    .text._ZN20contrast_refine_step24compute_sharpness_metricERK9rectanglem:00000000 $t
     /tmp/ccs7048v.s:739    .text._ZN20contrast_refine_step24compute_sharpness_metricERK9rectanglem:00000000 _ZN20contrast_refine_step24compute_sharpness_metricERK9rectanglem
     /tmp/ccs7048v.s:1101   .text._ZN20contrast_refine_step24compute_sharpness_metricERK9rectanglem:000001e0 $d
     /tmp/ccs7048v.s:1111   .text._ZN20contrast_refine_step24compute_sharpness_metricERK9rectanglem:00000200 $t
     /tmp/ccs7048v.s:1384   .text._ZN20contrast_refine_step24compute_sharpness_metricERK9rectanglem:000003c4 $d
     /tmp/ccs7048v.s:1390   .text._ZN20contrast_refine_step11log_metricsEm:00000000 $t
     /tmp/ccs7048v.s:1395   .text._ZN20contrast_refine_step11log_metricsEm:00000000 _ZN20contrast_refine_step11log_metricsEm
     /tmp/ccs7048v.s:1522   .text._ZN20contrast_refine_step11log_metricsEm:00000110 $d
     /tmp/ccs7048v.s:1549   .bss._ZN12_GLOBAL__N_131num_pending_frame_end_callbacksE:00000000 $d
     /tmp/ccs7048v.s:1553   .bss._ZN12_GLOBAL__N_131num_pending_frame_end_callbacksE:00000000 _ZN12_GLOBAL__N_131num_pending_frame_end_callbacksE
                     .debug_frame:00000010 $d
     /tmp/ccs7048v.s:290    .text._ZN20contrast_refine_stepC2ER13cam_typedef_ttRK9rectanglePvS5_mm:00000144 $t

UNDEFINED SYMBOLS
_ZN21lens_position_controlC1ER13cam_typedef_t
af_configure_sensor_stream
_ZN21lens_position_control15start_move_lensEstNS_20move_done_callback_tE
trigger_sensor
xEventGroupSetBits
puts
xEventGroupSetBitsFromISR
ulPortYieldRequired
__aeabi_uldivmod
__aeabi_ldivmod
_Znwj
_ZN18contrast_processorC1Ett
_ZN18contrast_processor14enable_metricsEm
_ZN11image_raw10C1EPKvt
_ZN18contrast_processor12process_lineE16image_pixel_iter
memcpy
_ZN11image_raw108get_iterEtt
_ZdlPv
slogf
