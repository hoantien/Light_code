   1              		.syntax unified
   2              		.cpu cortex-r4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"queue.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.prvCopyDataToQueue,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	prvCopyDataToQueue:
  24              	.LFB20:
  25              		.file 1 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c"
   1:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*
   2:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     FreeRTOS V8.2.3 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     All rights reserved
   4:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
   5:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
   7:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     This file is part of the FreeRTOS distribution.
   8:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
   9:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  13:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     ***************************************************************************
  14:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     ***************************************************************************
  19:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  20:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     link: http://www.freertos.org/a00114.html
  24:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  25:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     ***************************************************************************
  26:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *                                                                       *
  27:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *    platform software that is more than just the market leader, it     *
  30:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *    is the industry's de facto standard.                               *
  31:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *                                                                       *
  32:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *    tutorial book, reference manual, or both:                          *
  35:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****      *                                                                       *
  37:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     ***************************************************************************
  38:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  39:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     defined configASSERT()?
  42:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  43:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     embedded software for free we request you assist our global community by
  45:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     participating in the support forum.
  46:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  47:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  52:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  56:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  59:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  63:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     mission critical applications that require provable dependability.
  66:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  67:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****     1 tab == 4 spaces!
  68:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** */
  69:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  70:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #include <stdlib.h>
  71:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #include <string.h>
  72:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  73:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** task.h is included from an application file. */
  76:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  78:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #include "FreeRTOS.h"
  79:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #include "task.h"
  80:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #include "queue.h"
  81:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  82:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  83:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#include "croutine.h"
  84:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif
  85:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  86:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  87:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  88:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  89:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  90:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  91:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  92:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  93:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /* Constants used with the xRxLock and xTxLock structure members. */
  94:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #define queueUNLOCKED					( ( BaseType_t ) -1 )
  95:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( BaseType_t ) 0 )
  96:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  97:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  98:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  99:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
 100:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
 101:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
 102:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
 103:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
 104:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
 105:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** against the coding standard (although an exception to the standard has been
 106:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** permitted where the dual use also significantly changes the type of the
 107:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** structure member). */
 108:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #define pxMutexHolder					pcTail
 109:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #define uxQueueType						pcHead
 110:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 111:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 112:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 113:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** zero. */
 114:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
 115:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
 116:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 117:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
 118:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 119:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	performed just because a higher priority task has been woken. */
 120:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 121:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #else
 122:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 123:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif
 124:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 125:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*
 126:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * Definition of the queue used by the scheduler.
 127:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
 128:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
 129:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  */
 130:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** typedef struct QueueDefinition
 131:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
 132:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 133:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 134:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 135:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 136:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 137:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 138:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 139:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
 140:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	} u;
 141:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 142:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 143:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 144:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 145:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 146:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 147:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 148:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 149:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	volatile BaseType_t xRxLock;	/*< Stores the number of items received from the queue (removed from 
 150:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	volatile BaseType_t xTxLock;	/*< Stores the number of items transmitted to the queue (added to the
 151:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 152:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 153:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 154:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		uint8_t ucQueueType;
 155:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#endif
 156:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 157:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 158:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 159:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#endif
 160:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 161:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** } xQUEUE;
 162:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 163:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 164:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 165:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** typedef xQUEUE Queue_t;
 166:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 167:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 168:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 169:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*
 170:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 171:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 172:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  */
 173:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 174:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 175:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 176:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 177:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	more user friendly. */
 178:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 179:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 180:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 181:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		QueueHandle_t xHandle;
 182:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	} xQueueRegistryItem;
 183:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 184:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 185:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 186:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	debuggers. */
 187:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 188:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 189:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 190:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 191:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	array position being vacant. */
 192:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 193:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 194:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 195:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 196:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*
 197:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 198:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 199:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 200:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 201:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 202:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 203:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  */
 204:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 205:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 206:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*
 207:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 208:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  *
 209:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 210:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  */
 211:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 212:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 213:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*
 214:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 215:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  *
 216:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 217:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  */
 218:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 219:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 220:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*
 221:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 222:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * back of the queue.
 223:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  */
 224:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 225:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 226:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*
 227:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * Copies an item out of a queue.
 228:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  */
 229:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 230:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 231:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 232:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/*
 233:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 234:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	 * the queue set that the queue contains data.
 235:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	 */
 236:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 237:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif
 238:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 239:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 240:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 241:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*
 242:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 243:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  * accessing the queue event lists.
 244:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c ****  */
 245:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 246:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskENTER_CRITICAL();									\
 247:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{														\
 248:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( ( pxQueue )->xRxLock == queueUNLOCKED )			\
 249:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{													\
 250:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( pxQueue )->xRxLock = queueLOCKED_UNMODIFIED;	\
 251:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}													\
 252:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( ( pxQueue )->xTxLock == queueUNLOCKED )			\
 253:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{													\
 254:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( pxQueue )->xTxLock = queueLOCKED_UNMODIFIED;	\
 255:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}													\
 256:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}														\
 257:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskEXIT_CRITICAL()
 258:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 259:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 260:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 261:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
 262:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 263:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 264:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue );
 265:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 266:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskENTER_CRITICAL();
 267:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 268:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 269:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 270:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 271:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 272:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 273:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 274:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 275:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 276:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 277:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 278:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 279:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 280:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 281:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			it will be possible to write to it. */
 282:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 283:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 284:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 285:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 286:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 287:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 288:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
 289:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 290:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 291:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 292:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 293:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
 294:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 295:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 296:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 297:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 298:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
 299:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 300:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 301:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 302:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 303:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 304:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 305:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskEXIT_CRITICAL();
 306:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 307:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 308:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	versions. */
 309:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return pdPASS;
 310:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
 311:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 312:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 313:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, c
 314:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
 315:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t *pxNewQueue;
 316:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** size_t xQueueSizeInBytes;
 317:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** QueueHandle_t xReturn = NULL;
 318:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 319:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 320:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 321:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	( void ) ucQueueType;
 322:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 323:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 324:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 325:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 326:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 327:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* There is not going to be a queue storage area. */
 328:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		xQueueSizeInBytes = ( size_t ) 0;
 329:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 330:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	else
 331:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 332:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* The queue is one byte longer than asked for to make wrap checking
 333:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		easier/faster. */
 334:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1; /*lint !e961 MISRA 
 335:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 336:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 337:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* Allocate the new queue structure and storage area. */
 338:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 339:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 340:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	if( pxNewQueue != NULL )
 341:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 342:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 343:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 344:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* No RAM was allocated for the queue storage area, but PC head
 345:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			cannot be set to NULL because NULL is used as a key to say the queue
 346:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			is used as a mutex.  Therefore just set pcHead to point to the queue
 347:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			as a benign value that is known to be within the memory map. */
 348:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 349:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 350:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
 351:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 352:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 353:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			storage area. */
 354:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->pcHead = ( ( int8_t * ) pxNewQueue ) + sizeof( Queue_t );
 355:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 356:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 357:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Initialise the queue members as described above where the queue type
 358:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		is defined. */
 359:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxNewQueue->uxLength = uxQueueLength;
 360:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxNewQueue->uxItemSize = uxItemSize;
 361:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 362:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 363:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
 364:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 365:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->ucQueueType = ucQueueType;
 366:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 367:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		#endif /* configUSE_TRACE_FACILITY */
 368:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 369:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		#if( configUSE_QUEUE_SETS == 1 )
 370:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 371:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->pxQueueSetContainer = NULL;
 372:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 373:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		#endif /* configUSE_QUEUE_SETS */
 374:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 375:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		traceQUEUE_CREATE( pxNewQueue );
 376:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		xReturn = pxNewQueue;
 377:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 378:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	else
 379:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 380:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		mtCOVERAGE_TEST_MARKER();
 381:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 382:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 383:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( xReturn );
 384:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 385:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return xReturn;
 386:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
 387:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 388:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 389:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_MUTEXES == 1 )
 390:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 391:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 392:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 393:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t *pxNewQueue;
 394:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 395:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 396:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 397:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		( void ) ucQueueType;
 398:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 399:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Allocate the new queue structure. */
 400:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) );
 401:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxNewQueue != NULL )
 402:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 403:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Information required for priority inheritance. */
 404:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 405:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 406:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 407:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Queues used as a mutex no data is actually copied into or out
 408:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			of the queue. */
 409:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->pcWriteTo = NULL;
 410:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->u.pcReadFrom = NULL;
 411:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 412:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Each mutex has a length of 1 (like a binary semaphore) and
 413:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			an item size of 0 as nothing is actually copied into or out
 414:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			of the mutex. */
 415:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 416:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->uxLength = ( UBaseType_t ) 1U;
 417:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->uxItemSize = ( UBaseType_t ) 0U;
 418:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
 419:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 420:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 421:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
 422:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 423:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				pxNewQueue->ucQueueType = ucQueueType;
 424:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 425:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			#endif
 426:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 427:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
 428:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 429:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				pxNewQueue->pxQueueSetContainer = NULL;
 430:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 431:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			#endif
 432:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 433:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Ensure the event queues start with the correct state. */
 434:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 435:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 436:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 437:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 438:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 439:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 440:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 441:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 442:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
 443:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 444:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 445:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 446:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 447:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return pxNewQueue;
 448:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 449:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 450:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_MUTEXES */
 451:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 452:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 453:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 454:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 455:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 456:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 457:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	void *pxReturn;
 458:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 459:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 460:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 461:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 462:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 463:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		following critical section exiting and the function returning. */
 464:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		taskENTER_CRITICAL();
 465:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 466:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 467:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 468:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 469:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 470:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
 471:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 472:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				pxReturn = NULL;
 473:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 474:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 475:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		taskEXIT_CRITICAL();
 476:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 477:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return pxReturn;
 478:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 479:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 480:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif
 481:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 482:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 483:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 484:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 485:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 486:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 487:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xReturn;
 488:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 489:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 490:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( pxMutex );
 491:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 492:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 493:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 494:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 495:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 496:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 497:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 498:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 499:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 500:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 501:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 502:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 503:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 504:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 505:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 506:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			uxRecursiveCallCount member. */
 507:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 508:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 509:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Have we unwound the call count? */
 510:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 511:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 512:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 513:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				task that might be waiting to access the mutex. */
 514:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 515:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 516:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
 517:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 518:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 519:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 520:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 521:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdPASS;
 522:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 523:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
 524:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 525:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 526:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			holder. */
 527:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdFAIL;
 528:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 529:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 530:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 531:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 532:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return xReturn;
 533:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 534:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 535:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 536:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 537:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 538:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 539:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 540:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 541:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 542:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xReturn;
 543:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 544:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 545:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( pxMutex );
 546:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 547:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 548:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 549:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 550:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 551:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 552:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 553:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 554:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 555:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdPASS;
 556:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 557:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
 558:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 559:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 560:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 561:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 562:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 563:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			before reaching here. */
 564:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( xReturn == pdPASS )
 565:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 566:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 567:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 568:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
 569:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 570:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 571:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 572:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 573:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 574:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return xReturn;
 575:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 576:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 577:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 578:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 579:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 580:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_COUNTING_SEMAPHORES == 1 )
 581:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 582:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 583:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 584:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	QueueHandle_t xHandle;
 585:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 586:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 587:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 588:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 589:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 590:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 591:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( xHandle != NULL )
 592:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 593:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 594:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 595:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 596:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 597:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
 598:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 599:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 600:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 601:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 602:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( xHandle );
 603:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return xHandle;
 604:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 605:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 606:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_COUNTING_SEMAPHORES */
 607:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 608:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 609:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 610:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
 611:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 612:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** TimeOut_t xTimeOut;
 613:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 614:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 615:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue );
 616:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 617:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 618:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 619:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 620:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 621:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 622:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#endif
 623:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 624:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 625:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 626:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 627:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	of execution time efficiency. */
 628:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	for( ;; )
 629:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 630:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		taskENTER_CRITICAL();
 631:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 632:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 633:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 634:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 635:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			queue is full. */
 636:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 637:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 638:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 639:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 640:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 641:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 642:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 643:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 644:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 645:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
 646:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 647:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 648:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							to the queue set caused a higher priority task to
 649:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							unblock. A context switch is required. */
 650:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 651:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 652:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
 653:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 654:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 655:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 656:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 657:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
 658:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 659:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 660:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						queue then unblock it now. */
 661:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 662:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 663:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 664:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
 665:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								/* The unblocked task has a priority higher than
 666:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 667:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								do this from within the critical section - the
 668:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								kernel takes care of that. */
 669:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 670:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
 671:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
 672:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
 673:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 674:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
 675:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 676:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 677:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 678:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* This path is a special case that will only get
 679:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							executed if the task was holding multiple mutexes
 680:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							and the mutexes were given back in an order that is
 681:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							different to that in which they were taken. */
 682:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 683:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 684:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
 685:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 686:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 687:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 688:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 689:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 690:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 691:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 692:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 693:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					queue then unblock it now. */
 694:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 695:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 696:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 697:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 698:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* The unblocked task has a priority higher than
 699:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 700:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							this from within the critical section - the kernel
 701:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							takes care of that. */
 702:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 703:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 704:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
 705:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 706:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 707:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 708:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 709:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 710:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 711:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						/* This path is a special case that will only get
 712:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 713:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						the mutexes were given back in an order that is
 714:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						different to that in which they were taken. */
 715:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 716:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 717:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
 718:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 719:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 720:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 721:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 722:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 723:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 724:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				taskEXIT_CRITICAL();
 725:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				return pdPASS;
 726:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 727:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
 728:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 729:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 730:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 731:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 732:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					the block time has expired) so leave now. */
 733:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					taskEXIT_CRITICAL();
 734:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 735:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* Return to the original privilege level before exiting
 736:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					the function. */
 737:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 738:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return errQUEUE_FULL;
 739:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 740:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 741:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 742:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* The queue was full and a block time was specified so
 743:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					configure the timeout structure. */
 744:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 745:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 746:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 747:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
 748:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 749:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* Entry time was already set. */
 750:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 751:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 752:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 753:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 754:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		taskEXIT_CRITICAL();
 755:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 756:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 757:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		now the critical section has been exited. */
 758:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 759:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		vTaskSuspendAll();
 760:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		prvLockQueue( pxQueue );
 761:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 762:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 763:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 764:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 765:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 766:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 767:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 768:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 769:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 770:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 771:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				event list.  It is possible	that interrupts occurring now
 772:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				remove this task from the event	list again - but as the
 773:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 774:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				ready last instead of the actual ready list. */
 775:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 776:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 777:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 778:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 779:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				task is already in a ready list before it yields - in which
 780:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				case the yield will not cause a context switch unless there
 781:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 782:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 783:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 784:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					portYIELD_WITHIN_API();
 785:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 786:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 787:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
 788:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 789:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Try again. */
 790:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 791:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				( void ) xTaskResumeAll();
 792:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 793:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 794:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
 795:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 796:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* The timeout has expired. */
 797:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 798:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( void ) xTaskResumeAll();
 799:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 800:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Return to the original privilege level before exiting the
 801:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			function. */
 802:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 803:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			return errQUEUE_FULL;
 804:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 805:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 806:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
 807:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 808:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 809:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 810:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 811:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xQueueAltGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_
 812:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 813:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xEntryTimeSet = pdFALSE;
 814:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	TimeOut_t xTimeOut;
 815:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 816:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 817:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( pxQueue );
 818:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 819:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 820:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		for( ;; )
 821:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 822:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			taskENTER_CRITICAL();
 823:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 824:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Is there room on the queue now?  To be running we must be
 825:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				the highest priority task wanting to access the queue. */
 826:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 827:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 828:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					traceQUEUE_SEND( pxQueue );
 829:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 830:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 831:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 832:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					queue then unblock it now. */
 833:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 834:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 835:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 836:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 837:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* The unblocked task has a priority higher than
 838:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							our own so yield immediately. */
 839:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							portYIELD_WITHIN_API();
 840:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 841:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
 842:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 843:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 844:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 845:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 846:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
 847:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 848:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 849:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 850:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 851:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					taskEXIT_CRITICAL();
 852:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return pdPASS;
 853:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 854:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
 855:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 856:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( xTicksToWait == ( TickType_t ) 0 )
 857:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 858:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						taskEXIT_CRITICAL();
 859:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						return errQUEUE_FULL;
 860:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 861:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 862:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 863:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 864:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						xEntryTimeSet = pdTRUE;
 865:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 866:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 867:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 868:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			taskEXIT_CRITICAL();
 869:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 870:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			taskENTER_CRITICAL();
 871:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 872:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 873:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 874:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( prvIsQueueFull( pxQueue ) != pdFALSE )
 875:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 876:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 877:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 878:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						portYIELD_WITHIN_API();
 879:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 880:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
 881:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 882:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 883:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 884:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 885:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
 886:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 887:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					taskEXIT_CRITICAL();
 888:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 889:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return errQUEUE_FULL;
 890:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 891:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 892:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			taskEXIT_CRITICAL();
 893:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 894:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 895:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 896:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
 897:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 898:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 899:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 900:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 901:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xQueueAltGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicks
 902:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 903:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xEntryTimeSet = pdFALSE;
 904:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	TimeOut_t xTimeOut;
 905:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	int8_t *pcOriginalReadPosition;
 906:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 907:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 908:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( pxQueue );
 909:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 910:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 911:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		for( ;; )
 912:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 913:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			taskENTER_CRITICAL();
 914:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 915:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 916:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 917:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* Remember our read position in case we are just peeking. */
 918:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 919:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 920:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					prvCopyDataFromQueue( pxQueue, pvBuffer );
 921:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 922:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( xJustPeeking == pdFALSE )
 923:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 924:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						traceQUEUE_RECEIVE( pxQueue );
 925:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 926:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						/* Data is actually being removed (not just peeked). */
 927:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						--( pxQueue->uxMessagesWaiting );
 928:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 929:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
 930:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 931:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 932:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
 933:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								/* Record the information required to implement
 934:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								priority inheritance should it become necessary. */
 935:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								pxQueue->pxMutexHolder = ( int8_t * ) xTaskGetCurrentTaskHandle();
 936:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
 937:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
 938:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
 939:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 940:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
 941:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 942:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						#endif
 943:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 944:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 945:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 946:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 947:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
 948:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								portYIELD_WITHIN_API();
 949:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
 950:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
 951:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
 952:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 953:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
 954:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 955:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 956:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
 957:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 958:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						traceQUEUE_PEEK( pxQueue );
 959:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 960:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						/* The data is not being removed, so reset our read
 961:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						pointer. */
 962:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 963:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 964:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						/* The data is being left in the queue, so see if there are
 965:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						any other tasks waiting for the data. */
 966:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 967:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 968:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* Tasks that are removed from the event list will get added to
 969:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							the pending ready list as the scheduler is still suspended. */
 970:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 971:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
 972:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								/* The task waiting has a higher priority than this task. */
 973:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								portYIELD_WITHIN_API();
 974:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
 975:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
 976:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
 977:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 978:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
 979:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 980:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
 981:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 982:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 983:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 984:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 985:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 986:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					taskEXIT_CRITICAL();
 987:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return pdPASS;
 988:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 989:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
 990:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 991:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( xTicksToWait == ( TickType_t ) 0 )
 992:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 993:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						taskEXIT_CRITICAL();
 994:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						traceQUEUE_RECEIVE_FAILED( pxQueue );
 995:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						return errQUEUE_EMPTY;
 996:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 997:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 998:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 999:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
1000:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						xEntryTimeSet = pdTRUE;
1001:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1002:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1003:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1004:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			taskEXIT_CRITICAL();
1005:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1006:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			taskENTER_CRITICAL();
1007:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1008:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1009:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1010:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1011:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1012:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1013:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1014:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
1015:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1016:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1017:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1018:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								taskENTER_CRITICAL();
1019:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								{
1020:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 									vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1021:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								}
1022:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								taskEXIT_CRITICAL();
1023:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1024:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
1025:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1026:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1027:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1028:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1029:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						#endif
1030:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1031:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1032:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						portYIELD_WITHIN_API();
1033:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1034:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1035:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1036:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1037:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1038:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1039:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
1040:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1041:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					taskEXIT_CRITICAL();
1042:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1043:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return errQUEUE_EMPTY;
1044:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1045:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1046:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			taskEXIT_CRITICAL();
1047:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1048:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1049:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1050:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1051:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
1052:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1053:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1054:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
1055:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
1056:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
1057:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1058:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1059:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1060:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue );
1061:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1062:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
1063:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1064:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1065:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1066:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1067:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1068:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1069:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1070:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1071:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1072:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1073:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1074:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1075:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1076:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1077:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1078:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1079:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1080:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
1081:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
1082:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1083:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1084:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	post). */
1085:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1086:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1087:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
1088:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1089:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1090:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1091:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
1092:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
1093:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
1094:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			called here even though the disinherit function does not check if
1095:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
1096:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
1097:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1098:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1099:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			be done when the queue is unlocked later. */
1100:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
1101:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1102:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1103:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1104:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1105:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1106:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
1107:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1108:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
1109:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							to the queue set caused a higher priority task to
1110:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							unblock.  A context switch is required. */
1111:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1112:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1113:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1114:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1115:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
1116:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1117:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1118:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1119:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1120:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1121:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1122:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1123:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1124:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1125:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1126:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1127:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1128:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1129:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1130:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1131:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								/* The task waiting has a higher priority so
1132:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								record that a context switch is required. */
1133:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1134:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								{
1135:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1136:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								}
1137:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								else
1138:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								{
1139:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1140:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								}
1141:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1142:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
1143:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1144:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1145:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1146:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1147:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1148:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1149:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1150:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1151:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1152:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1153:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1154:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1155:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1156:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1157:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1158:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1159:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1160:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							context	switch is required. */
1161:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1162:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1163:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1164:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1165:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
1166:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1167:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1168:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1169:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1170:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1171:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1172:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1173:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1174:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1175:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1176:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1177:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1178:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1179:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1180:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1181:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1182:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
1183:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1184:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1185:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				knows that data was posted while it was locked. */
1186:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				++( pxQueue->xTxLock );
1187:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1188:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1189:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdPASS;
1190:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1191:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
1192:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1193:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1194:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1195:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1196:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1197:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1198:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1199:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return xReturn;
1200:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
1201:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1202:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1203:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1204:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
1205:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
1206:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1207:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1208:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1209:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1210:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1211:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1212:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1213:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	post). */
1214:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1215:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue );
1216:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1217:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1218:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	if the item size is not 0. */
1219:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1220:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1221:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1222:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1223:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	interrupts, only tasks. */
1224:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1225:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1226:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1227:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1228:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1229:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1230:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1231:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1232:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1233:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1234:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1235:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1236:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1237:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1238:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1239:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1240:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1241:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1242:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1243:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1244:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1245:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1246:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		space'. */
1247:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
1248:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1249:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1250:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1251:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1252:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1253:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1254:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1255:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1256:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			messages (semaphores) available. */
1257:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			++( pxQueue->uxMessagesWaiting );
1258:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1259:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1260:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			be done when the queue is unlocked later. */
1261:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
1262:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1263:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1264:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1265:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1266:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1267:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
1268:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1269:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1270:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							posting	to the queue set caused a higher priority
1271:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1272:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1273:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1274:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1275:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1276:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
1277:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1278:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1279:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1280:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1281:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1282:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1283:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1284:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1285:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1286:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1287:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1288:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1289:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1290:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1291:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1292:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								/* The task waiting has a higher priority so
1293:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								record that a context switch is required. */
1294:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1295:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								{
1296:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1297:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								}
1298:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								else
1299:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								{
1300:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1301:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								}
1302:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1303:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
1304:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1305:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1306:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1307:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1308:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1309:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1310:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1311:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1312:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1313:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1314:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1315:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1316:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1317:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1318:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1319:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1320:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1321:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							context	switch is required. */
1322:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1323:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1324:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1325:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1326:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							else
1327:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
1328:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1329:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
1330:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1331:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1332:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1333:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1334:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1335:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1336:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1337:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1338:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1339:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1340:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1341:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1342:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1343:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
1344:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1345:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1346:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				knows that data was posted while it was locked. */
1347:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				++( pxQueue->xTxLock );
1348:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1349:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1350:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdPASS;
1351:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1352:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
1353:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1354:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1355:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1356:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1357:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1358:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1359:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1360:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return xReturn;
1361:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
1362:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1363:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1364:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWa
1365:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
1366:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1367:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** TimeOut_t xTimeOut;
1368:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** int8_t *pcOriginalReadPosition;
1369:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1370:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1371:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue );
1372:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1373:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1374:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1375:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1376:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1377:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#endif
1378:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1379:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1380:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1381:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	of execution time efficiency. */
1382:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1383:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	for( ;; )
1384:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1385:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		taskENTER_CRITICAL();
1386:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1387:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1388:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			must be	the highest priority task wanting to access the queue. */
1389:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1390:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1391:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Remember the read position in case the queue is only being
1392:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				peeked. */
1393:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1394:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1395:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1396:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1397:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xJustPeeking == pdFALSE )
1398:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1399:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1400:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1401:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* Actually removing data, not just peeking. */
1402:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					--( pxQueue->uxMessagesWaiting );
1403:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1404:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1405:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1406:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1407:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1408:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* Record the information required to implement
1409:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							priority inheritance should it become necessary. */
1410:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
1411:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1412:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1413:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1414:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1415:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1416:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1417:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1418:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1419:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1420:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1421:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
1422:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1423:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1424:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1425:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1426:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1427:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1428:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1429:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1430:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1431:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1432:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1433:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1434:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1435:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
1436:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1437:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1438:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1439:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* The data is not being removed, so reset the read
1440:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					pointer. */
1441:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1442:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1443:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* The data is being left in the queue, so see if there are
1444:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					any other tasks waiting for the data. */
1445:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1446:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1447:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1448:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1449:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* The task waiting has a higher priority than this task. */
1450:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1451:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1452:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1453:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1454:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1455:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1456:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1457:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1458:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1459:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1460:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1461:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1462:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1463:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				taskEXIT_CRITICAL();
1464:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				return pdPASS;
1465:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1466:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
1467:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1468:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1469:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1470:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1471:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					the block time has expired) so leave now. */
1472:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					taskEXIT_CRITICAL();
1473:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1474:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return errQUEUE_EMPTY;
1475:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1476:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1477:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1478:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1479:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					configure the timeout structure. */
1480:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
1481:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1482:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1483:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
1484:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1485:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* Entry time was already set. */
1486:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1487:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1488:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1489:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1490:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		taskEXIT_CRITICAL();
1491:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1492:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1493:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		now the critical section has been exited. */
1494:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1495:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		vTaskSuspendAll();
1496:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		prvLockQueue( pxQueue );
1497:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1498:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1499:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1500:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1501:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1502:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1503:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1504:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1505:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1506:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1507:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1508:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1509:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						taskENTER_CRITICAL();
1510:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1511:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1512:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1513:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						taskEXIT_CRITICAL();
1514:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1515:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1516:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1517:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1518:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1519:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1520:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				#endif
1521:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1522:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1523:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1524:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1525:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1526:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					portYIELD_WITHIN_API();
1527:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1528:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
1529:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1530:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1531:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1532:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1533:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
1534:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1535:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Try again. */
1536:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1537:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				( void ) xTaskResumeAll();
1538:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1539:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1540:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
1541:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1542:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1543:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( void ) xTaskResumeAll();
1544:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
1545:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			return errQUEUE_EMPTY;
1546:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1547:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1548:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
1549:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1550:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1551:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1552:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
1553:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
1554:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1555:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1556:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1557:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue );
1558:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1559:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1560:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1561:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1562:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1563:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1564:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1565:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1566:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1567:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1568:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1569:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1570:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1571:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1572:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1573:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1574:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1575:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1576:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1577:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1578:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1579:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1580:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1581:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1582:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1583:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1584:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
1585:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1586:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1587:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1588:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1589:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			locked. */
1590:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
1591:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1592:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1593:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1594:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1595:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1596:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1597:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						force a context switch. */
1598:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1599:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1600:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1601:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1602:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1603:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1604:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1605:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1606:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1607:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1608:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1609:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1610:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1611:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1612:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
1613:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1614:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1615:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1616:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1617:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
1618:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1619:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1620:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				knows that data was removed while it was locked. */
1621:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				++( pxQueue->xRxLock );
1622:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1623:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1624:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdPASS;
1625:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1626:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
1627:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1628:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdFAIL;
1629:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1630:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1631:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1632:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1633:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1634:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return xReturn;
1635:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
1636:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1637:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1638:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1639:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
1640:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
1641:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1642:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** int8_t *pcOriginalReadPosition;
1643:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1644:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1645:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue );
1646:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1647:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1648:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1649:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1650:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1651:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1652:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1653:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1654:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1655:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1656:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1657:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1658:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1659:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1660:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1661:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1662:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1663:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1664:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1665:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1666:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1667:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1668:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1669:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1670:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1671:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1672:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1673:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			actually being removed from the queue. */
1674:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1675:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1676:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1677:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1678:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdPASS;
1679:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1680:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
1681:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1682:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdFAIL;
1683:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1684:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1685:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1686:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1687:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1688:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return xReturn;
1689:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
1690:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1691:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1692:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1693:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
1694:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxReturn;
1695:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1696:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( xQueue );
1697:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1698:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskENTER_CRITICAL();
1699:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1700:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1701:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1702:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskEXIT_CRITICAL();
1703:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1704:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return uxReturn;
1705:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1706:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1707:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1708:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1709:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
1710:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxReturn;
1711:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t *pxQueue;
1712:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1713:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1714:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue );
1715:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1716:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskENTER_CRITICAL();
1717:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1718:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1719:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1720:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskEXIT_CRITICAL();
1721:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1722:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return uxReturn;
1723:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1724:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1725:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1726:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1727:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
1728:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxReturn;
1729:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1730:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( xQueue );
1731:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1732:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1733:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1734:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return uxReturn;
1735:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1736:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1737:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1738:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1739:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
1740:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1741:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1742:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue );
1743:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1744:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1745:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1746:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1747:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1748:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1749:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#endif
1750:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	vPortFree( pxQueue );
1751:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
1752:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1753:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1754:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1755:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1756:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1757:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1758:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1759:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1760:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1761:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1762:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1763:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1764:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1765:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1766:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1767:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1768:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1769:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1770:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1771:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1772:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1773:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1774:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1775:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1776:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1777:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1778:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
1779:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1780:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1781:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1782:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1783:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1784:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
1785:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
  26              		.loc 1 1785 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38              		.loc 1 1785 0
  39 0002 1546     		mov	r5, r2
  40 0004 0446     		mov	r4, r0
1786:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn = pdFALSE;
1787:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1788:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
  41              		.loc 1 1788 0
  42 0006 026C     		ldr	r2, [r0, #64]
  43              	.LVL1:
  44 0008 3AB9     		cbnz	r2, .L2
1789:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1790:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1791:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1792:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  45              		.loc 1 1792 0
  46 000a 0568     		ldr	r5, [r0]
  47              	.LVL2:
  48 000c 002D     		cmp	r5, #0
  49 000e 27D1     		bne	.L11
1793:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1794:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* The mutex is no longer being held. */
1795:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
  50              		.loc 1 1795 0
  51 0010 4068     		ldr	r0, [r0, #4]
  52              	.LVL3:
  53 0012 164B     		ldr	r3, .L13
  54 0014 9847     		blx	r3
  55              	.LVL4:
1796:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
  56              		.loc 1 1796 0
  57 0016 6560     		str	r5, [r4, #4]
  58 0018 23E0     		b	.L4
  59              	.LVL5:
  60              	.L2:
  61 001a 154B     		ldr	r3, .L13+4
1797:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1798:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
1799:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1800:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1801:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1802:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1803:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
1804:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1805:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
  62              		.loc 1 1805 0
  63 001c 65B9     		cbnz	r5, .L5
1806:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1807:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
  64              		.loc 1 1807 0
  65 001e 8068     		ldr	r0, [r0, #8]
  66              	.LVL6:
  67 0020 9847     		blx	r3
  68              	.LVL7:
1808:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
  69              		.loc 1 1808 0
  70 0022 A268     		ldr	r2, [r4, #8]
  71 0024 236C     		ldr	r3, [r4, #64]
  72 0026 1344     		add	r3, r3, r2
1809:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
  73              		.loc 1 1809 0
  74 0028 6268     		ldr	r2, [r4, #4]
1808:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
  75              		.loc 1 1808 0
  76 002a A360     		str	r3, [r4, #8]
  77              		.loc 1 1809 0
  78 002c 9342     		cmp	r3, r2
  79 002e 17D3     		bcc	.L11
1810:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1811:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
  80              		.loc 1 1811 0
  81 0030 2368     		ldr	r3, [r4]
1786:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
  82              		.loc 1 1786 0
  83 0032 2846     		mov	r0, r5
  84              		.loc 1 1811 0
  85 0034 A360     		str	r3, [r4, #8]
  86 0036 14E0     		b	.L4
  87              	.LVL8:
  88              	.L5:
1812:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1813:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
1814:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1815:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1816:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1817:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1818:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	else
1819:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1820:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
  89              		.loc 1 1820 0
  90 0038 C068     		ldr	r0, [r0, #12]
  91              	.LVL9:
  92 003a 9847     		blx	r3
  93              	.LVL10:
1821:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
  94              		.loc 1 1821 0
  95 003c 236C     		ldr	r3, [r4, #64]
  96 003e E268     		ldr	r2, [r4, #12]
  97 0040 5B42     		negs	r3, r3
1822:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
  98              		.loc 1 1822 0
  99 0042 2168     		ldr	r1, [r4]
1821:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 100              		.loc 1 1821 0
 101 0044 1A44     		add	r2, r2, r3
 102              		.loc 1 1822 0
 103 0046 8A42     		cmp	r2, r1
1821:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 104              		.loc 1 1821 0
 105 0048 E260     		str	r2, [r4, #12]
1823:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1824:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 106              		.loc 1 1824 0
 107 004a 3EBF     		ittt	cc
 108 004c 6268     		ldrcc	r2, [r4, #4]
 109 004e 9B18     		addcc	r3, r3, r2
 110 0050 E360     		strcc	r3, [r4, #12]
1825:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1826:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
1827:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1828:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1829:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1830:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1831:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
 111              		.loc 1 1831 0
 112 0052 022D     		cmp	r5, #2
 113 0054 04D1     		bne	.L11
1832:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1833:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 114              		.loc 1 1833 0
 115 0056 A36B     		ldr	r3, [r4, #56]
 116 0058 13B1     		cbz	r3, .L11
1834:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1835:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
1836:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				one from the recorded number of items in the queue so when
1837:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				one is added again below the number of recorded items remains
1838:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				correct. */
1839:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
 117              		.loc 1 1839 0
 118 005a A36B     		ldr	r3, [r4, #56]
 119 005c 013B     		subs	r3, r3, #1
 120 005e A363     		str	r3, [r4, #56]
 121              	.LVL11:
 122              	.L11:
1786:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 123              		.loc 1 1786 0
 124 0060 0020     		movs	r0, #0
 125              	.LVL12:
 126              	.L4:
1840:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1841:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
1842:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1843:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1844:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1845:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1846:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
1847:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1848:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1849:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1850:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1851:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1852:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	++( pxQueue->uxMessagesWaiting );
 127              		.loc 1 1852 0
 128 0062 A36B     		ldr	r3, [r4, #56]
 129 0064 0133     		adds	r3, r3, #1
 130 0066 A363     		str	r3, [r4, #56]
1853:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1854:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return xReturn;
1855:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
 131              		.loc 1 1855 0
 132 0068 38BD     		pop	{r3, r4, r5, pc}
 133              	.LVL13:
 134              	.L14:
 135 006a 00BF     		.align	2
 136              	.L13:
 137 006c 00000000 		.word	xTaskPriorityDisinherit
 138 0070 00000000 		.word	memcpy
 139              		.cfi_endproc
 140              	.LFE20:
 142              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 143              		.align	1
 144              		.thumb
 145              		.thumb_func
 147              	prvCopyDataFromQueue:
 148              	.LFB21:
1856:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1857:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1858:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1859:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
 149              		.loc 1 1859 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              	.LVL14:
1860:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 154              		.loc 1 1860 0
 155 0000 026C     		ldr	r2, [r0, #64]
1859:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 156              		.loc 1 1859 0
 157 0002 0346     		mov	r3, r0
 158 0004 10B5     		push	{r4, lr}
 159              	.LCFI1:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 163              		.loc 1 1860 0
 164 0006 5AB1     		cbz	r2, .L15
1861:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1862:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
 165              		.loc 1 1862 0
 166 0008 C468     		ldr	r4, [r0, #12]
 167 000a 1444     		add	r4, r4, r2
 168 000c C460     		str	r4, [r0, #12]
1863:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 169              		.loc 1 1863 0
 170 000e 4068     		ldr	r0, [r0, #4]
 171              	.LVL15:
 172 0010 8442     		cmp	r4, r0
1864:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1865:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
 173              		.loc 1 1865 0
 174 0012 24BF     		itt	cs
 175 0014 1868     		ldrcs	r0, [r3]
 176 0016 D860     		strcs	r0, [r3, #12]
1866:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1867:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
1868:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1869:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1870:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1871:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
 177              		.loc 1 1871 0
 178 0018 0846     		mov	r0, r1
 179 001a D968     		ldr	r1, [r3, #12]
 180              	.LVL16:
 181 001c 014B     		ldr	r3, .L21
 182              	.LVL17:
 183 001e 9847     		blx	r3
 184              	.LVL18:
 185              	.L15:
 186 0020 10BD     		pop	{r4, pc}
 187              	.L22:
 188 0022 00BF     		.align	2
 189              	.L21:
 190 0024 00000000 		.word	memcpy
 191              		.cfi_endproc
 192              	.LFE21:
 194              		.section	.text.prvUnlockQueue,"ax",%progbits
 195              		.align	1
 196              		.thumb
 197              		.thumb_func
 199              	prvUnlockQueue:
 200              	.LFB22:
1872:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1873:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
1874:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1875:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1876:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1877:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
 201              		.loc 1 1877 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL19:
 206 0000 70B5     		push	{r4, r5, r6, lr}
 207              	.LCFI2:
 208              		.cfi_def_cfa_offset 16
 209              		.cfi_offset 4, -16
 210              		.cfi_offset 5, -12
 211              		.cfi_offset 6, -8
 212              		.cfi_offset 14, -4
1878:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1879:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1880:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1881:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1882:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1883:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	updated. */
1884:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskENTER_CRITICAL();
 213              		.loc 1 1884 0
 214 0002 174D     		ldr	r5, .L44
1877:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 215              		.loc 1 1877 0
 216 0004 0446     		mov	r4, r0
 217              		.loc 1 1884 0
 218 0006 A847     		blx	r5
 219              	.LVL20:
 220 0008 2E46     		mov	r6, r5
 221              	.L24:
1885:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1886:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
1887:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 222              		.loc 1 1887 0
 223 000a A36C     		ldr	r3, [r4, #72]
 224 000c 002B     		cmp	r3, #0
 225 000e 0CDD     		ble	.L25
1888:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1889:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1890:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			blocked waiting for data to become available? */
1891:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1892:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1893:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1894:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1895:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
1896:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1897:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
1898:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
1899:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						A context switch is required. */
1900:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						vTaskMissedYield();
1901:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1902:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1903:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1904:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1905:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1906:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1907:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
1908:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1909:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* Tasks that are removed from the event list will get added to
1910:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					the pending ready list as the scheduler is still suspended. */
1911:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1912:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1913:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1914:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1915:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1916:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							context	switch is required. */
1917:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							vTaskMissedYield();
1918:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1919:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						else
1920:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
1921:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1922:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
1923:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1924:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1925:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1926:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						break;
1927:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1928:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1929:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1930:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1931:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1932:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
1933:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1934:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 226              		.loc 1 1934 0
 227 0010 636A     		ldr	r3, [r4, #36]
 228 0012 53B1     		cbz	r3, .L25
1935:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1936:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 229              		.loc 1 1936 0
 230 0014 04F12400 		add	r0, r4, #36
 231 0018 124B     		ldr	r3, .L44+4
 232 001a 9847     		blx	r3
 233              	.LVL21:
 234 001c 08B1     		cbz	r0, .L26
1937:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1938:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						/* The task waiting has a higher priority so record that a
1939:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						context	switch is required. */
1940:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						vTaskMissedYield();
 235              		.loc 1 1940 0
 236 001e 124B     		ldr	r3, .L44+8
 237 0020 9847     		blx	r3
 238              	.LVL22:
 239              	.L26:
1941:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1942:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
1943:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
1944:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1945:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
1946:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1947:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
1948:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1949:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					break;
1950:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1951:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1952:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1953:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1954:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			--( pxQueue->xTxLock );
 240              		.loc 1 1954 0
 241 0022 A36C     		ldr	r3, [r4, #72]
 242 0024 013B     		subs	r3, r3, #1
 243 0026 A364     		str	r3, [r4, #72]
 244 0028 EFE7     		b	.L24
 245              	.L25:
1955:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1956:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1957:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 246              		.loc 1 1957 0
 247 002a 4FF0FF33 		mov	r3, #-1
1958:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1959:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskEXIT_CRITICAL();
 248              		.loc 1 1959 0
 249 002e 0F4D     		ldr	r5, .L44+12
1957:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 250              		.loc 1 1957 0
 251 0030 A364     		str	r3, [r4, #72]
 252              		.loc 1 1959 0
 253 0032 A847     		blx	r5
 254              	.LVL23:
1960:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1961:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	/* Do the same for the Rx lock. */
1962:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskENTER_CRITICAL();
 255              		.loc 1 1962 0
 256 0034 B047     		blx	r6
 257              	.LVL24:
 258              	.L28:
1963:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1964:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 259              		.loc 1 1964 0
 260 0036 636C     		ldr	r3, [r4, #68]
 261 0038 002B     		cmp	r3, #0
 262 003a 0CDD     		ble	.L29
1965:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1966:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 263              		.loc 1 1966 0
 264 003c 2369     		ldr	r3, [r4, #16]
 265 003e 53B1     		cbz	r3, .L29
1967:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1968:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 266              		.loc 1 1968 0
 267 0040 04F11000 		add	r0, r4, #16
 268 0044 074B     		ldr	r3, .L44+4
 269 0046 9847     		blx	r3
 270              	.LVL25:
 271 0048 08B1     		cbz	r0, .L30
1969:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1970:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					vTaskMissedYield();
 272              		.loc 1 1970 0
 273 004a 074B     		ldr	r3, .L44+8
 274 004c 9847     		blx	r3
 275              	.LVL26:
 276              	.L30:
1971:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1972:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
1973:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
1974:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1975:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
1976:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1977:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				--( pxQueue->xRxLock );
 277              		.loc 1 1977 0
 278 004e 636C     		ldr	r3, [r4, #68]
 279 0050 013B     		subs	r3, r3, #1
 280 0052 6364     		str	r3, [r4, #68]
 281 0054 EFE7     		b	.L28
 282              	.L29:
1978:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1979:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
1980:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
1981:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				break;
1982:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
1983:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
1984:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1985:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 283              		.loc 1 1985 0
 284 0056 4FF0FF33 		mov	r3, #-1
 285 005a 6364     		str	r3, [r4, #68]
1986:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
1987:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskEXIT_CRITICAL();
 286              		.loc 1 1987 0
 287 005c A847     		blx	r5
 288              	.LVL27:
 289 005e 70BD     		pop	{r4, r5, r6, pc}
 290              	.LVL28:
 291              	.L45:
 292              		.align	2
 293              	.L44:
 294 0060 00000000 		.word	vPortEnterCritical
 295 0064 00000000 		.word	xTaskRemoveFromEventList
 296 0068 00000000 		.word	vTaskMissedYield
 297 006c 00000000 		.word	vPortExitCritical
 298              		.cfi_endproc
 299              	.LFE22:
 301              		.section	.text.xQueueGenericReset,"ax",%progbits
 302              		.align	1
 303              		.global	xQueueGenericReset
 304              		.thumb
 305              		.thumb_func
 307              	xQueueGenericReset:
 308              	.LFB1:
 261:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 309              		.loc 1 261 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              	.LVL29:
 314 0000 38B5     		push	{r3, r4, r5, lr}
 315              	.LCFI3:
 316              		.cfi_def_cfa_offset 16
 317              		.cfi_offset 3, -16
 318              		.cfi_offset 4, -12
 319              		.cfi_offset 5, -8
 320              		.cfi_offset 14, -4
 261:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 321              		.loc 1 261 0
 322 0002 0D46     		mov	r5, r1
 264:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 323              		.loc 1 264 0
 324 0004 0446     		mov	r4, r0
 325 0006 58B9     		cbnz	r0, .L47
 326              	.LVL30:
 327              	.LBB12:
 328              	.LBB13:
 329              	@ 264 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 330 0008 72B6     		CPSID i   
 331 000a BFF34F8F 	DSB       
 332 000e BFF36F8F 	ISB         
 333              	@ 0 "" 2
 334              		.thumb
 335 0012 1848     		ldr	r0, .L53
 336              	.LVL31:
 337 0014 4FF48472 		mov	r2, #264
 338 0018 1749     		ldr	r1, .L53+4
 339              	.LVL32:
 340 001a 184B     		ldr	r3, .L53+8
 341 001c 9847     		blx	r3
 342              	.LVL33:
 343              	.L48:
 344 001e FEE7     		b	.L48
 345              	.LVL34:
 346              	.L47:
 347              	.LBE13:
 348              	.LBE12:
 266:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 349              		.loc 1 266 0
 350 0020 174B     		ldr	r3, .L53+12
 351 0022 9847     		blx	r3
 352              	.LVL35:
 268:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 353              		.loc 1 268 0
 354 0024 206C     		ldr	r0, [r4, #64]
 355 0026 E36B     		ldr	r3, [r4, #60]
 356 0028 2268     		ldr	r2, [r4]
 270:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 357              		.loc 1 270 0
 358 002a A260     		str	r2, [r4, #8]
 268:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 359              		.loc 1 268 0
 360 002c 4343     		muls	r3, r0, r3
 361 002e D118     		adds	r1, r2, r3
 271:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 362              		.loc 1 271 0
 363 0030 1B1A     		subs	r3, r3, r0
 364 0032 1344     		add	r3, r3, r2
 268:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 365              		.loc 1 268 0
 366 0034 6160     		str	r1, [r4, #4]
 269:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 367              		.loc 1 269 0
 368 0036 0021     		movs	r1, #0
 271:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 369              		.loc 1 271 0
 370 0038 E360     		str	r3, [r4, #12]
 272:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 371              		.loc 1 272 0
 372 003a 4FF0FF33 		mov	r3, #-1
 269:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 373              		.loc 1 269 0
 374 003e A163     		str	r1, [r4, #56]
 272:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 375              		.loc 1 272 0
 376 0040 6364     		str	r3, [r4, #68]
 273:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 377              		.loc 1 273 0
 378 0042 A364     		str	r3, [r4, #72]
 275:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 379              		.loc 1 275 0
 380 0044 5DB9     		cbnz	r5, .L49
 282:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 381              		.loc 1 282 0
 382 0046 2369     		ldr	r3, [r4, #16]
 383 0048 83B1     		cbz	r3, .L51
 284:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 384              		.loc 1 284 0
 385 004a 04F11000 		add	r0, r4, #16
 386 004e 0D4B     		ldr	r3, .L53+16
 387 0050 9847     		blx	r3
 388              	.LVL36:
 389 0052 0128     		cmp	r0, #1
 390 0054 0AD1     		bne	.L51
 286:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 391              		.loc 1 286 0
 392              	@ 286 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 393 0056 00DF     		SWI 0     
 394 0058 BFF36F8F 	ISB         
 395              	@ 0 "" 2
 396              		.thumb
 397 005c 06E0     		b	.L51
 398              	.L49:
 301:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 399              		.loc 1 301 0
 400 005e 04F11000 		add	r0, r4, #16
 401 0062 094D     		ldr	r5, .L53+20
 402              	.LVL37:
 403 0064 A847     		blx	r5
 404              	.LVL38:
 302:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 405              		.loc 1 302 0
 406 0066 04F12400 		add	r0, r4, #36
 407 006a A847     		blx	r5
 408              	.LVL39:
 409              	.L51:
 305:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 410              		.loc 1 305 0
 411 006c 074B     		ldr	r3, .L53+24
 412 006e 9847     		blx	r3
 413              	.LVL40:
 310:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 414              		.loc 1 310 0
 415 0070 0120     		movs	r0, #1
 416 0072 38BD     		pop	{r3, r4, r5, pc}
 417              	.LVL41:
 418              	.L54:
 419              		.align	2
 420              	.L53:
 421 0074 00000000 		.word	.LC0
 422 0078 00000000 		.word	.LANCHOR0
 423 007c 00000000 		.word	printf
 424 0080 00000000 		.word	vPortEnterCritical
 425 0084 00000000 		.word	xTaskRemoveFromEventList
 426 0088 00000000 		.word	vListInitialise
 427 008c 00000000 		.word	vPortExitCritical
 428              		.cfi_endproc
 429              	.LFE1:
 431              		.section	.text.xQueueGenericCreate,"ax",%progbits
 432              		.align	1
 433              		.global	xQueueGenericCreate
 434              		.thumb
 435              		.thumb_func
 437              	xQueueGenericCreate:
 438              	.LFB2:
 314:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t *pxNewQueue;
 439              		.loc 1 314 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              	.LVL42:
 444 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 445              	.LCFI4:
 446              		.cfi_def_cfa_offset 24
 447              		.cfi_offset 3, -24
 448              		.cfi_offset 4, -20
 449              		.cfi_offset 5, -16
 450              		.cfi_offset 6, -12
 451              		.cfi_offset 7, -8
 452              		.cfi_offset 14, -4
 314:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t *pxNewQueue;
 453              		.loc 1 314 0
 454 0002 0D46     		mov	r5, r1
 455              	.LVL43:
 456 0004 1746     		mov	r7, r2
 323:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 457              		.loc 1 323 0
 458 0006 0646     		mov	r6, r0
 459 0008 58B9     		cbnz	r0, .L56
 323:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 460              		.loc 1 323 0 is_stmt 0 discriminator 1
 461              	@ 323 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 462 000a 72B6     		CPSID i   
 463 000c BFF34F8F 	DSB       
 464 0010 BFF36F8F 	ISB         
 465              	@ 0 "" 2
 466              		.thumb
 467 0014 1848     		ldr	r0, .L65
 468              	.LVL44:
 469 0016 40F24312 		movw	r2, #323
 470              	.LVL45:
 471 001a 1849     		ldr	r1, .L65+4
 472              	.LVL46:
 473 001c 184B     		ldr	r3, .L65+8
 474 001e 9847     		blx	r3
 475              	.LVL47:
 476              	.L57:
 477 0020 FEE7     		b	.L57
 478              	.LVL48:
 479              	.L56:
 325:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 480              		.loc 1 325 0 is_stmt 1
 481 0022 11B1     		cbz	r1, .L63
 334:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 482              		.loc 1 334 0
 483 0024 4843     		muls	r0, r1, r0
 484              	.LVL49:
 485 0026 0130     		adds	r0, r0, #1
 486              	.LVL50:
 487 0028 00E0     		b	.L58
 488              	.LVL51:
 489              	.L63:
 328:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 490              		.loc 1 328 0
 491 002a 0846     		mov	r0, r1
 492              	.LVL52:
 493              	.L58:
 338:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 494              		.loc 1 338 0
 495 002c 5430     		adds	r0, r0, #84
 496              	.LVL53:
 497 002e 1349     		ldr	r1, .L65+4
 498              	.LVL54:
 499 0030 4FF4A972 		mov	r2, #338
 500              	.LVL55:
 501 0034 134B     		ldr	r3, .L65+12
 502 0036 9847     		blx	r3
 503              	.LVL56:
 340:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 504              		.loc 1 340 0
 505 0038 0446     		mov	r4, r0
 506 003a 30B1     		cbz	r0, .L59
 342:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 507              		.loc 1 342 0
 508 003c 0DB9     		cbnz	r5, .L60
 348:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 509              		.loc 1 348 0
 510 003e 2060     		str	r0, [r4]
 511 0040 0FE0     		b	.L61
 512              	.L60:
 354:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 513              		.loc 1 354 0
 514 0042 00F15403 		add	r3, r0, #84
 515 0046 0360     		str	r3, [r0]
 516 0048 0BE0     		b	.L61
 517              	.L59:
 518              	.LVL57:
 519              	.LBB16:
 520              	.LBB17:
 383:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 521              		.loc 1 383 0
 522              	@ 383 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 523 004a 72B6     		CPSID i   
 524 004c BFF34F8F 	DSB       
 525 0050 BFF36F8F 	ISB         
 526              	@ 0 "" 2
 527              		.thumb
 528 0054 0848     		ldr	r0, .L65
 529              	.LVL58:
 530 0056 40F27F12 		movw	r2, #383
 531 005a 0849     		ldr	r1, .L65+4
 532 005c 084B     		ldr	r3, .L65+8
 533 005e 9847     		blx	r3
 534              	.LVL59:
 535              	.L62:
 536 0060 FEE7     		b	.L62
 537              	.LVL60:
 538              	.L61:
 539              	.LBE17:
 540              	.LBE16:
 359:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		pxNewQueue->uxItemSize = uxItemSize;
 541              		.loc 1 359 0
 542 0062 E663     		str	r6, [r4, #60]
 361:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 543              		.loc 1 361 0
 544 0064 2046     		mov	r0, r4
 545              	.LVL61:
 360:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 546              		.loc 1 360 0
 547 0066 2564     		str	r5, [r4, #64]
 361:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 548              		.loc 1 361 0
 549 0068 0121     		movs	r1, #1
 550 006a 074B     		ldr	r3, .L65+16
 551 006c 9847     		blx	r3
 552              	.LVL62:
 365:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 553              		.loc 1 365 0
 554 006e 84F85070 		strb	r7, [r4, #80]
 555              	.LVL63:
 386:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 556              		.loc 1 386 0
 557 0072 2046     		mov	r0, r4
 558 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 559              	.LVL64:
 560              	.L66:
 561 0076 00BF     		.align	2
 562              	.L65:
 563 0078 00000000 		.word	.LC0
 564 007c 00000000 		.word	.LANCHOR1
 565 0080 00000000 		.word	printf
 566 0084 00000000 		.word	pvPortMalloc1
 567 0088 00000000 		.word	xQueueGenericReset
 568              		.cfi_endproc
 569              	.LFE2:
 571              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 572              		.align	1
 573              		.global	xQueueCreateCountingSemaphore
 574              		.thumb
 575              		.thumb_func
 577              	xQueueCreateCountingSemaphore:
 578              	.LFB6:
 583:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	QueueHandle_t xHandle;
 579              		.loc 1 583 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              	.LVL65:
 584 0000 10B5     		push	{r4, lr}
 585              	.LCFI5:
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 4, -8
 588              		.cfi_offset 14, -4
 583:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	QueueHandle_t xHandle;
 589              		.loc 1 583 0
 590 0002 0C46     		mov	r4, r1
 586:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 591              		.loc 1 586 0
 592 0004 58B9     		cbnz	r0, .L68
 586:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 593              		.loc 1 586 0 is_stmt 0 discriminator 1
 594              	@ 586 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 595 0006 72B6     		CPSID i   
 596 0008 BFF34F8F 	DSB       
 597 000c BFF36F8F 	ISB         
 598              	@ 0 "" 2
 599              		.thumb
 600 0010 1348     		ldr	r0, .L75
 601              	.LVL66:
 602 0012 40F24A22 		movw	r2, #586
 603 0016 1349     		ldr	r1, .L75+4
 604              	.LVL67:
 605 0018 134B     		ldr	r3, .L75+8
 606 001a 9847     		blx	r3
 607              	.LVL68:
 608              	.L69:
 609 001c FEE7     		b	.L69
 610              	.LVL69:
 611              	.L68:
 587:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 612              		.loc 1 587 0 is_stmt 1
 613 001e 8142     		cmp	r1, r0
 614 0020 0BD9     		bls	.L70
 587:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 615              		.loc 1 587 0 is_stmt 0 discriminator 1
 616              	@ 587 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 617 0022 72B6     		CPSID i   
 618 0024 BFF34F8F 	DSB       
 619 0028 BFF36F8F 	ISB         
 620              	@ 0 "" 2
 621              		.thumb
 622 002c 0C48     		ldr	r0, .L75
 623              	.LVL70:
 624 002e 40F24B22 		movw	r2, #587
 625 0032 0C49     		ldr	r1, .L75+4
 626              	.LVL71:
 627 0034 0C4B     		ldr	r3, .L75+8
 628 0036 9847     		blx	r3
 629              	.LVL72:
 630              	.L71:
 587:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 631              		.loc 1 587 0 discriminator 2
 632 0038 FEE7     		b	.L71
 633              	.LVL73:
 634              	.L70:
 589:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 635              		.loc 1 589 0 is_stmt 1
 636 003a 0021     		movs	r1, #0
 637              	.LVL74:
 638 003c 0222     		movs	r2, #2
 639 003e 0B4B     		ldr	r3, .L75+12
 640 0040 9847     		blx	r3
 641              	.LVL75:
 591:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 642              		.loc 1 591 0
 643 0042 08B1     		cbz	r0, .L72
 593:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 644              		.loc 1 593 0
 645 0044 8463     		str	r4, [r0, #56]
 646 0046 10BD     		pop	{r4, pc}
 647              	.LVL76:
 648              	.L72:
 602:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return xHandle;
 649              		.loc 1 602 0
 650              	@ 602 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 651 0048 72B6     		CPSID i   
 652 004a BFF34F8F 	DSB       
 653 004e BFF36F8F 	ISB         
 654              	@ 0 "" 2
 655              		.thumb
 656 0052 0348     		ldr	r0, .L75
 657              	.LVL77:
 658 0054 40F25A22 		movw	r2, #602
 659 0058 0249     		ldr	r1, .L75+4
 660 005a 034B     		ldr	r3, .L75+8
 661 005c 9847     		blx	r3
 662              	.LVL78:
 663              	.L73:
 602:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return xHandle;
 664              		.loc 1 602 0 is_stmt 0 discriminator 3
 665 005e FEE7     		b	.L73
 666              	.L76:
 667              		.align	2
 668              	.L75:
 669 0060 00000000 		.word	.LC0
 670 0064 00000000 		.word	.LANCHOR2
 671 0068 00000000 		.word	printf
 672 006c 00000000 		.word	xQueueGenericCreate
 673              		.cfi_endproc
 674              	.LFE6:
 676              		.section	.text.xQueueGenericSend,"ax",%progbits
 677              		.align	1
 678              		.global	xQueueGenericSend
 679              		.thumb
 680              		.thumb_func
 682              	xQueueGenericSend:
 683              	.LFB7:
 610:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 684              		.loc 1 610 0 is_stmt 1
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 16
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              	.LVL79:
 689 0000 2DE9FF47 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 690              	.LCFI6:
 691              		.cfi_def_cfa_offset 48
 692              		.cfi_offset 4, -32
 693              		.cfi_offset 5, -28
 694              		.cfi_offset 6, -24
 695              		.cfi_offset 7, -20
 696              		.cfi_offset 8, -16
 697              		.cfi_offset 9, -12
 698              		.cfi_offset 10, -8
 699              		.cfi_offset 14, -4
 610:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 700              		.loc 1 610 0
 701 0004 8A46     		mov	r10, r1
 702 0006 9946     		mov	r9, r3
 703 0008 0192     		str	r2, [sp, #4]
 615:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 704              		.loc 1 615 0
 705 000a 0446     		mov	r4, r0
 706 000c 58B9     		cbnz	r0, .L78
 615:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 707              		.loc 1 615 0 is_stmt 0 discriminator 1
 708              	@ 615 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 709 000e 72B6     		CPSID i   
 710 0010 BFF34F8F 	DSB       
 711 0014 BFF36F8F 	ISB         
 712              	@ 0 "" 2
 713              		.thumb
 714 0018 4E48     		ldr	r0, .L127
 715              	.LVL80:
 716 001a 40F26722 		movw	r2, #615
 717              	.LVL81:
 718 001e 4E49     		ldr	r1, .L127+4
 719              	.LVL82:
 720 0020 4E4B     		ldr	r3, .L127+8
 721              	.LVL83:
 722 0022 9847     		blx	r3
 723              	.LVL84:
 724              	.L79:
 725 0024 FEE7     		b	.L79
 726              	.LVL85:
 727              	.L78:
 616:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 728              		.loc 1 616 0 is_stmt 1
 729 0026 69B9     		cbnz	r1, .L80
 616:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 730              		.loc 1 616 0 is_stmt 0 discriminator 2
 731 0028 036C     		ldr	r3, [r0, #64]
 732              	.LVL86:
 733 002a 5BB1     		cbz	r3, .L80
 616:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 734              		.loc 1 616 0
 735              	@ 616 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 736 002c 72B6     		CPSID i   
 737 002e BFF34F8F 	DSB       
 738 0032 BFF36F8F 	ISB         
 739              	@ 0 "" 2
 740              		.thumb
 741 0036 4748     		ldr	r0, .L127
 742              	.LVL87:
 743 0038 4FF41A72 		mov	r2, #616
 744              	.LVL88:
 745 003c 4649     		ldr	r1, .L127+4
 746              	.LVL89:
 747 003e 474B     		ldr	r3, .L127+8
 748 0040 9847     		blx	r3
 749              	.LVL90:
 750              	.L82:
 616:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 751              		.loc 1 616 0 discriminator 2
 752 0042 FEE7     		b	.L82
 753              	.LVL91:
 754              	.L80:
 617:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 755              		.loc 1 617 0 is_stmt 1
 756 0044 B9F1020F 		cmp	r9, #2
 757 0048 0ED1     		bne	.L83
 617:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 758              		.loc 1 617 0 is_stmt 0 discriminator 2
 759 004a E36B     		ldr	r3, [r4, #60]
 760 004c 012B     		cmp	r3, #1
 761 004e 0BD0     		beq	.L83
 617:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 762              		.loc 1 617 0
 763              	@ 617 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 764 0050 72B6     		CPSID i   
 765 0052 BFF34F8F 	DSB       
 766 0056 BFF36F8F 	ISB         
 767              	@ 0 "" 2
 768              		.thumb
 769 005a 3E48     		ldr	r0, .L127
 770              	.LVL92:
 771 005c 40F26922 		movw	r2, #617
 772              	.LVL93:
 773 0060 3D49     		ldr	r1, .L127+4
 774              	.LVL94:
 775 0062 3E4B     		ldr	r3, .L127+8
 776 0064 9847     		blx	r3
 777              	.LVL95:
 778              	.L85:
 617:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 779              		.loc 1 617 0 discriminator 3
 780 0066 FEE7     		b	.L85
 781              	.LVL96:
 782              	.L83:
 620:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 783              		.loc 1 620 0 is_stmt 1
 784 0068 3D4B     		ldr	r3, .L127+12
 785 006a 9847     		blx	r3
 786              	.LVL97:
 787 006c 10B9     		cbnz	r0, .L106
 620:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 788              		.loc 1 620 0 is_stmt 0 discriminator 2
 789 006e 019E     		ldr	r6, [sp, #4]
 790 0070 0EB1     		cbz	r6, .L119
 791 0072 5FE0     		b	.L125
 792              	.L106:
 793 0074 0026     		movs	r6, #0
 794              	.LVL98:
 795              	.L119:
 630:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 796              		.loc 1 630 0 is_stmt 1
 797 0076 3B4F     		ldr	r7, .L127+16
 798 0078 B847     		blx	r7
 799              	.LVL99:
 636:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 800              		.loc 1 636 0
 801 007a A26B     		ldr	r2, [r4, #56]
 802 007c E36B     		ldr	r3, [r4, #60]
 803 007e DFF80481 		ldr	r8, .L127+48
 804 0082 9A42     		cmp	r2, r3
 805 0084 02D3     		bcc	.L89
 636:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 806              		.loc 1 636 0 is_stmt 0 discriminator 1
 807 0086 B9F1020F 		cmp	r9, #2
 808 008a 14D1     		bne	.L90
 809              	.L89:
 639:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 810              		.loc 1 639 0 is_stmt 1
 811 008c 364B     		ldr	r3, .L127+20
 812 008e 2046     		mov	r0, r4
 813 0090 5146     		mov	r1, r10
 814 0092 4A46     		mov	r2, r9
 815 0094 9847     		blx	r3
 816              	.LVL100:
 694:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 817              		.loc 1 694 0
 818 0096 636A     		ldr	r3, [r4, #36]
 819 0098 33B1     		cbz	r3, .L91
 696:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 820              		.loc 1 696 0
 821 009a 04F12400 		add	r0, r4, #36
 822              	.LVL101:
 823 009e 334B     		ldr	r3, .L127+24
 824 00a0 9847     		blx	r3
 825              	.LVL102:
 826 00a2 0128     		cmp	r0, #1
 827 00a4 04D1     		bne	.L93
 828 00a6 00E0     		b	.L123
 829              	.LVL103:
 830              	.L91:
 709:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 831              		.loc 1 709 0
 832 00a8 10B1     		cbz	r0, .L93
 833              	.LVL104:
 834              	.L123:
 715:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 835              		.loc 1 715 0
 836              	@ 715 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 837 00aa 00DF     		SWI 0     
 838 00ac BFF36F8F 	ISB         
 839              	@ 0 "" 2
 840              		.thumb
 841              	.L93:
 724:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				return pdPASS;
 842              		.loc 1 724 0
 843 00b0 C047     		blx	r8
 844              	.LVL105:
 725:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 845              		.loc 1 725 0
 846 00b2 0120     		movs	r0, #1
 847 00b4 4AE0     		b	.L120
 848              	.L90:
 729:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 849              		.loc 1 729 0
 850 00b6 019D     		ldr	r5, [sp, #4]
 851 00b8 0DB9     		cbnz	r5, .L96
 733:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 852              		.loc 1 733 0
 853 00ba C047     		blx	r8
 854              	.LVL106:
 855 00bc 38E0     		b	.L124
 856              	.L96:
 740:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 857              		.loc 1 740 0
 858 00be 16B9     		cbnz	r6, .L97
 744:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 859              		.loc 1 744 0
 860 00c0 02A8     		add	r0, sp, #8
 861 00c2 2B4B     		ldr	r3, .L127+28
 862 00c4 9847     		blx	r3
 863              	.LVL107:
 864              	.L97:
 754:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 865              		.loc 1 754 0
 866 00c6 C047     		blx	r8
 867              	.LVL108:
 759:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		prvLockQueue( pxQueue );
 868              		.loc 1 759 0
 869 00c8 2A4B     		ldr	r3, .L127+32
 870 00ca 9847     		blx	r3
 871              	.LVL109:
 760:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 872              		.loc 1 760 0
 873 00cc B847     		blx	r7
 874              	.LVL110:
 875 00ce 636C     		ldr	r3, [r4, #68]
 876 00d0 294E     		ldr	r6, .L127+36
 877 00d2 0133     		adds	r3, r3, #1
 878 00d4 08BF     		it	eq
 879 00d6 0023     		moveq	r3, #0
 880 00d8 284D     		ldr	r5, .L127+40
 881 00da 08BF     		it	eq
 882 00dc 6364     		streq	r3, [r4, #68]
 883 00de A36C     		ldr	r3, [r4, #72]
 884 00e0 0133     		adds	r3, r3, #1
 885 00e2 04BF     		itt	eq
 886 00e4 0023     		moveq	r3, #0
 887 00e6 A364     		streq	r3, [r4, #72]
 888 00e8 C047     		blx	r8
 889              	.LVL111:
 763:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 890              		.loc 1 763 0
 891 00ea 02A8     		add	r0, sp, #8
 892 00ec 01A9     		add	r1, sp, #4
 893              	.LVL112:
 894 00ee 244B     		ldr	r3, .L127+44
 895 00f0 9847     		blx	r3
 896              	.LVL113:
 897 00f2 D0B9     		cbnz	r0, .L100
 898              	.LVL114:
 899              	.LBB20:
 900              	.LBB21:
1988:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
1989:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
1990:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1991:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
1992:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
1993:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
1994:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
1995:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskENTER_CRITICAL();
1996:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
1997:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
1998:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
1999:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdTRUE;
2000:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2001:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
2002:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2003:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdFALSE;
2004:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2005:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2006:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskEXIT_CRITICAL();
2007:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2008:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return xReturn;
2009:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
2010:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
2011:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2012:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2013:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
2014:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
2015:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2016:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( xQueue );
2017:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2018:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
2019:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		xReturn = pdTRUE;
2020:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2021:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	else
2022:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
2023:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		xReturn = pdFALSE;
2024:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2025:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2026:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return xReturn;
2027:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2028:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
2029:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2030:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2031:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
2032:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
2033:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2034:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskENTER_CRITICAL();
 901              		.loc 1 2034 0
 902 00f4 B847     		blx	r7
 903              	.LVL115:
2035:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
2036:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 904              		.loc 1 2036 0
 905 00f6 D4F83880 		ldr	r8, [r4, #56]
 906 00fa E76B     		ldr	r7, [r4, #60]
 907              	.LVL116:
2037:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2038:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdTRUE;
2039:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2040:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
2041:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2042:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdFALSE;
2043:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2044:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2045:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	taskEXIT_CRITICAL();
 908              		.loc 1 2045 0
 909 00fc 214B     		ldr	r3, .L127+48
 910 00fe 9847     		blx	r3
 911              	.LVL117:
 912              	.LBE21:
 913              	.LBE20:
 765:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 914              		.loc 1 765 0
 915 0100 B845     		cmp	r8, r7
 916 0102 0ED1     		bne	.L101
 768:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 917              		.loc 1 768 0
 918 0104 04F11000 		add	r0, r4, #16
 919 0108 0199     		ldr	r1, [sp, #4]
 920 010a 1F4B     		ldr	r3, .L127+52
 921 010c 9847     		blx	r3
 922              	.LVL118:
 775:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 923              		.loc 1 775 0
 924 010e 2046     		mov	r0, r4
 925 0110 B047     		blx	r6
 926              	.LVL119:
 782:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 927              		.loc 1 782 0
 928 0112 A847     		blx	r5
 929              	.LVL120:
 930 0114 08B1     		cbz	r0, .L126
 931              	.LVL121:
 932              	.L102:
 933 0116 0126     		movs	r6, #1
 934 0118 ADE7     		b	.L119
 935              	.LVL122:
 936              	.L126:
 784:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 937              		.loc 1 784 0
 938              	@ 784 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 939 011a 00DF     		SWI 0     
 940 011c BFF36F8F 	ISB         
 941              	@ 0 "" 2
 942              		.thumb
 943 0120 F9E7     		b	.L102
 944              	.L101:
 945              	.LVL123:
 790:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				( void ) xTaskResumeAll();
 946              		.loc 1 790 0
 947 0122 2046     		mov	r0, r4
 948 0124 B047     		blx	r6
 949              	.LVL124:
 791:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 950              		.loc 1 791 0
 951 0126 A847     		blx	r5
 952              	.LVL125:
 953 0128 F5E7     		b	.L102
 954              	.LVL126:
 955              	.L100:
 797:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( void ) xTaskResumeAll();
 956              		.loc 1 797 0
 957 012a 2046     		mov	r0, r4
 958 012c B047     		blx	r6
 959              	.LVL127:
 798:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 960              		.loc 1 798 0
 961 012e A847     		blx	r5
 962              	.LVL128:
 963              	.L124:
 803:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 964              		.loc 1 803 0
 965 0130 0020     		movs	r0, #0
 966 0132 0BE0     		b	.L120
 967              	.LVL129:
 968              	.L125:
 620:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 969              		.loc 1 620 0
 970              	@ 620 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 971 0134 72B6     		CPSID i   
 972 0136 BFF34F8F 	DSB       
 973 013a BFF36F8F 	ISB         
 974              	@ 0 "" 2
 975              		.thumb
 976 013e 0548     		ldr	r0, .L127
 977 0140 4FF41B72 		mov	r2, #620
 978 0144 0449     		ldr	r1, .L127+4
 979 0146 054B     		ldr	r3, .L127+8
 980 0148 9847     		blx	r3
 981              	.LVL130:
 982              	.L88:
 620:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 983              		.loc 1 620 0 is_stmt 0 discriminator 4
 984 014a FEE7     		b	.L88
 985              	.LVL131:
 986              	.L120:
 806:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 987              		.loc 1 806 0 is_stmt 1
 988 014c 04B0     		add	sp, sp, #16
 989              	.LCFI7:
 990              		.cfi_def_cfa_offset 32
 991              		@ sp needed
 992 014e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 993              	.LVL132:
 994              	.L128:
 995 0152 00BF     		.align	2
 996              	.L127:
 997 0154 00000000 		.word	.LC0
 998 0158 00000000 		.word	.LANCHOR3
 999 015c 00000000 		.word	printf
 1000 0160 00000000 		.word	xTaskGetSchedulerState
 1001 0164 00000000 		.word	vPortEnterCritical
 1002 0168 00000000 		.word	prvCopyDataToQueue
 1003 016c 00000000 		.word	xTaskRemoveFromEventList
 1004 0170 00000000 		.word	vTaskSetTimeOutState
 1005 0174 00000000 		.word	vTaskSuspendAll
 1006 0178 00000000 		.word	prvUnlockQueue
 1007 017c 00000000 		.word	xTaskResumeAll
 1008 0180 00000000 		.word	xTaskCheckForTimeOut
 1009 0184 00000000 		.word	vPortExitCritical
 1010 0188 00000000 		.word	vTaskPlaceOnEventList
 1011              		.cfi_endproc
 1012              	.LFE7:
 1014              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1015              		.align	1
 1016              		.global	xQueueCreateMutex
 1017              		.thumb
 1018              		.thumb_func
 1020              	xQueueCreateMutex:
 1021              	.LFB3:
 392:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t *pxNewQueue;
 1022              		.loc 1 392 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026              	.LVL133:
 1027 0000 70B5     		push	{r4, r5, r6, lr}
 1028              	.LCFI8:
 1029              		.cfi_def_cfa_offset 16
 1030              		.cfi_offset 4, -16
 1031              		.cfi_offset 5, -12
 1032              		.cfi_offset 6, -8
 1033              		.cfi_offset 14, -4
 400:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxNewQueue != NULL )
 1034              		.loc 1 400 0
 1035 0002 1549     		ldr	r1, .L134
 392:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t *pxNewQueue;
 1036              		.loc 1 392 0
 1037 0004 0646     		mov	r6, r0
 400:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxNewQueue != NULL )
 1038              		.loc 1 400 0
 1039 0006 4FF4C872 		mov	r2, #400
 1040 000a 5420     		movs	r0, #84
 1041              	.LVL134:
 1042 000c 134B     		ldr	r3, .L134+4
 1043 000e 9847     		blx	r3
 1044              	.LVL135:
 401:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 1045              		.loc 1 401 0
 1046 0010 0446     		mov	r4, r0
 1047 0012 F0B1     		cbz	r0, .L130
 416:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->uxItemSize = ( UBaseType_t ) 0U;
 1048              		.loc 1 416 0
 1049 0014 0123     		movs	r3, #1
 404:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1050              		.loc 1 404 0
 1051 0016 0025     		movs	r5, #0
 416:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->uxItemSize = ( UBaseType_t ) 0U;
 1052              		.loc 1 416 0
 1053 0018 C363     		str	r3, [r0, #60]
 418:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 1054              		.loc 1 418 0
 1055 001a 4FF0FF33 		mov	r3, #-1
 415:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->uxLength = ( UBaseType_t ) 1U;
 1056              		.loc 1 415 0
 1057 001e 8563     		str	r5, [r0, #56]
 434:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 1058              		.loc 1 434 0
 1059 0020 1030     		adds	r0, r0, #16
 1060              	.LVL136:
 418:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 1061              		.loc 1 418 0
 1062 0022 4363     		str	r3, [r0, #52]
 404:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1063              		.loc 1 404 0
 1064 0024 40F80C5C 		str	r5, [r0, #-12]
 419:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1065              		.loc 1 419 0
 1066 0028 8363     		str	r3, [r0, #56]
 405:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1067              		.loc 1 405 0
 1068 002a 40F8105C 		str	r5, [r0, #-16]
 409:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->u.pcReadFrom = NULL;
 1069              		.loc 1 409 0
 1070 002e 40F8085C 		str	r5, [r0, #-8]
 410:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1071              		.loc 1 410 0
 1072 0032 40F8045C 		str	r5, [r0, #-4]
 417:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
 1073              		.loc 1 417 0
 1074 0036 0563     		str	r5, [r0, #48]
 423:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 1075              		.loc 1 423 0
 1076 0038 80F84060 		strb	r6, [r0, #64]
 434:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 1077              		.loc 1 434 0
 1078 003c 084E     		ldr	r6, .L134+8
 1079 003e B047     		blx	r6
 1080              	.LVL137:
 435:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1081              		.loc 1 435 0
 1082 0040 04F12400 		add	r0, r4, #36
 1083 0044 B047     		blx	r6
 1084              	.LVL138:
 440:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 1085              		.loc 1 440 0
 1086 0046 2946     		mov	r1, r5
 1087 0048 2A46     		mov	r2, r5
 1088 004a 2B46     		mov	r3, r5
 1089 004c 2046     		mov	r0, r4
 1090 004e 054D     		ldr	r5, .L134+12
 1091 0050 A847     		blx	r5
 1092              	.LVL139:
 1093              	.L130:
 448:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1094              		.loc 1 448 0
 1095 0052 2046     		mov	r0, r4
 1096 0054 70BD     		pop	{r4, r5, r6, pc}
 1097              	.LVL140:
 1098              	.L135:
 1099 0056 00BF     		.align	2
 1100              	.L134:
 1101 0058 00000000 		.word	.LANCHOR4
 1102 005c 00000000 		.word	pvPortMalloc1
 1103 0060 00000000 		.word	vListInitialise
 1104 0064 00000000 		.word	xQueueGenericSend
 1105              		.cfi_endproc
 1106              	.LFE3:
 1108              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1109              		.align	1
 1110              		.global	xQueueGiveMutexRecursive
 1111              		.thumb
 1112              		.thumb_func
 1114              	xQueueGiveMutexRecursive:
 1115              	.LFB4:
 486:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xReturn;
 1116              		.loc 1 486 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              	.LVL141:
 1121 0000 38B5     		push	{r3, r4, r5, lr}
 1122              	.LCFI9:
 1123              		.cfi_def_cfa_offset 16
 1124              		.cfi_offset 3, -16
 1125              		.cfi_offset 4, -12
 1126              		.cfi_offset 5, -8
 1127              		.cfi_offset 14, -4
 490:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1128              		.loc 1 490 0
 1129 0002 0446     		mov	r4, r0
 1130 0004 58B9     		cbnz	r0, .L137
 490:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1131              		.loc 1 490 0 is_stmt 0 discriminator 1
 1132              	@ 490 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1133 0006 72B6     		CPSID i   
 1134 0008 BFF34F8F 	DSB       
 1135 000c BFF36F8F 	ISB         
 1136              	@ 0 "" 2
 1137              		.thumb
 1138 0010 0C48     		ldr	r0, .L142
 1139              	.LVL142:
 1140 0012 4FF4F572 		mov	r2, #490
 1141 0016 0C49     		ldr	r1, .L142+4
 1142 0018 0C4B     		ldr	r3, .L142+8
 1143 001a 9847     		blx	r3
 1144              	.LVL143:
 1145              	.L138:
 1146 001c FEE7     		b	.L138
 1147              	.LVL144:
 1148              	.L137:
 498:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 1149              		.loc 1 498 0 is_stmt 1
 1150 001e 0C4B     		ldr	r3, .L142+12
 1151 0020 4568     		ldr	r5, [r0, #4]
 1152 0022 9847     		blx	r3
 1153              	.LVL145:
 1154 0024 8542     		cmp	r5, r0
 1155 0026 09D1     		bne	.L140
 507:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1156              		.loc 1 507 0
 1157 0028 E168     		ldr	r1, [r4, #12]
 1158 002a 0139     		subs	r1, r1, #1
 1159 002c E160     		str	r1, [r4, #12]
 510:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 1160              		.loc 1 510 0
 1161 002e 39B9     		cbnz	r1, .L141
 514:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 1162              		.loc 1 514 0
 1163 0030 2046     		mov	r0, r4
 1164 0032 0A46     		mov	r2, r1
 1165 0034 0B46     		mov	r3, r1
 1166 0036 074C     		ldr	r4, .L142+16
 1167              	.LVL146:
 1168 0038 A047     		blx	r4
 1169              	.LVL147:
 1170 003a 01E0     		b	.L141
 1171              	.LVL148:
 1172              	.L140:
 527:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1173              		.loc 1 527 0
 1174 003c 0020     		movs	r0, #0
 1175 003e 38BD     		pop	{r3, r4, r5, pc}
 1176              	.LVL149:
 1177              	.L141:
 521:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 1178              		.loc 1 521 0
 1179 0040 0120     		movs	r0, #1
 1180              	.LVL150:
 533:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1181              		.loc 1 533 0
 1182 0042 38BD     		pop	{r3, r4, r5, pc}
 1183              	.L143:
 1184              		.align	2
 1185              	.L142:
 1186 0044 00000000 		.word	.LC0
 1187 0048 00000000 		.word	.LANCHOR5
 1188 004c 00000000 		.word	printf
 1189 0050 00000000 		.word	xTaskGetCurrentTaskHandle
 1190 0054 00000000 		.word	xQueueGenericSend
 1191              		.cfi_endproc
 1192              	.LFE4:
 1194              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1195              		.align	1
 1196              		.global	xQueueGenericSendFromISR
 1197              		.thumb
 1198              		.thumb_func
 1200              	xQueueGenericSendFromISR:
 1201              	.LFB8:
1055:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
 1202              		.loc 1 1055 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 8
 1205              		@ frame_needed = 0, uses_anonymous_args = 0
 1206              	.LVL151:
 1207 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1208              	.LCFI10:
 1209              		.cfi_def_cfa_offset 24
 1210              		.cfi_offset 4, -16
 1211              		.cfi_offset 5, -12
 1212              		.cfi_offset 6, -8
 1213              		.cfi_offset 14, -4
1055:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
 1214              		.loc 1 1055 0
 1215 0002 1646     		mov	r6, r2
1060:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1216              		.loc 1 1060 0
 1217 0004 0446     		mov	r4, r0
 1218 0006 58B9     		cbnz	r0, .L145
1060:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1219              		.loc 1 1060 0 is_stmt 0 discriminator 1
 1220              	@ 1060 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1221 0008 72B6     		CPSID i   
 1222 000a BFF34F8F 	DSB       
 1223 000e BFF36F8F 	ISB         
 1224              	@ 0 "" 2
 1225              		.thumb
 1226 0012 2A48     		ldr	r0, .L180
 1227              	.LVL152:
 1228 0014 40F22442 		movw	r2, #1060
 1229              	.LVL153:
 1230 0018 2949     		ldr	r1, .L180+4
 1231              	.LVL154:
 1232 001a 2A4B     		ldr	r3, .L180+8
 1233              	.LVL155:
 1234 001c 9847     		blx	r3
 1235              	.LVL156:
 1236              	.L146:
 1237 001e FEE7     		b	.L146
 1238              	.LVL157:
 1239              	.L145:
1061:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1240              		.loc 1 1061 0 is_stmt 1
 1241 0020 69B9     		cbnz	r1, .L147
1061:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1242              		.loc 1 1061 0 is_stmt 0 discriminator 2
 1243 0022 026C     		ldr	r2, [r0, #64]
 1244              	.LVL158:
 1245 0024 5AB1     		cbz	r2, .L147
1061:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1246              		.loc 1 1061 0
 1247              	@ 1061 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1248 0026 72B6     		CPSID i   
 1249 0028 BFF34F8F 	DSB       
 1250 002c BFF36F8F 	ISB         
 1251              	@ 0 "" 2
 1252              		.thumb
 1253 0030 2248     		ldr	r0, .L180
 1254              	.LVL159:
 1255 0032 40F22542 		movw	r2, #1061
 1256 0036 2249     		ldr	r1, .L180+4
 1257              	.LVL160:
 1258 0038 224B     		ldr	r3, .L180+8
 1259              	.LVL161:
 1260 003a 9847     		blx	r3
 1261              	.LVL162:
 1262              	.L149:
1061:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1263              		.loc 1 1061 0 discriminator 2
 1264 003c FEE7     		b	.L149
 1265              	.LVL163:
 1266              	.L147:
1062:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1267              		.loc 1 1062 0 is_stmt 1
 1268 003e 022B     		cmp	r3, #2
 1269 0040 E06B     		ldr	r0, [r4, #60]
 1270              	.LVL164:
 1271 0042 0DD1     		bne	.L150
1062:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1272              		.loc 1 1062 0 is_stmt 0 discriminator 2
 1273 0044 0128     		cmp	r0, #1
 1274 0046 0BD0     		beq	.L150
1062:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1275              		.loc 1 1062 0
 1276              	@ 1062 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1277 0048 72B6     		CPSID i   
 1278 004a BFF34F8F 	DSB       
 1279 004e BFF36F8F 	ISB         
 1280              	@ 0 "" 2
 1281              		.thumb
 1282 0052 1A48     		ldr	r0, .L180
 1283 0054 40F22642 		movw	r2, #1062
 1284 0058 1949     		ldr	r1, .L180+4
 1285              	.LVL165:
 1286 005a 1A4B     		ldr	r3, .L180+8
 1287              	.LVL166:
 1288 005c 9847     		blx	r3
 1289              	.LVL167:
 1290              	.L152:
1062:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1291              		.loc 1 1062 0 discriminator 3
 1292 005e FEE7     		b	.L152
 1293              	.LVL168:
 1294              	.L150:
 1295              	.LBB22:
 1296              	.LBB23:
 1297              		.file 2 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro
   1:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /*
   2:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     FreeRTOS V8.2.3 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     All rights reserved
   4:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
   5:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
   7:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
   9:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  13:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     ***************************************************************************
  14:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     ***************************************************************************
  19:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  20:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  25:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     ***************************************************************************
  26:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *                                                                       *
  27:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *                                                                       *
  32:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****      *                                                                       *
  37:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     ***************************************************************************
  38:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  39:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     defined configASSERT()?
  42:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  43:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     embedded software for free we request you assist our global community by
  45:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     participating in the support forum.
  46:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  47:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  52:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  56:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  59:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  63:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     mission critical applications that require provable dependability.
  66:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  67:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     1 tab == 4 spaces!
  68:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** */
  69:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  70:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #ifndef PORTMACRO_H
  71:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define PORTMACRO_H
  72:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  73:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #ifdef __cplusplus
  74:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     extern "C" {
  75:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #endif
  76:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  77:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /*-----------------------------------------------------------
  78:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****  * Port specific definitions.
  79:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****  *
  80:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the given hardware
  81:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****  * and compiler.
  82:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****  *
  83:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****  * These settings should not be altered.
  84:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****  *-----------------------------------------------------------
  85:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****  */
  86:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  87:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /* Type definitions. */
  88:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portCHAR        char
  89:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portFLOAT       float
  90:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portDOUBLE      double
  91:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portLONG        long
  92:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portSHORT       short
  93:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portSTACK_TYPE  uint32_t
  94:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portBASE_TYPE   long
  95:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
  96:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  97:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** typedef long BaseType_t;
  98:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** typedef unsigned long UBaseType_t;
  99:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 100:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** typedef uint32_t TickType_t;
 101:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 102:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 103:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 104:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** not need to be guarded with a critical section. */
 105:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portTICK_TYPE_IS_ATOMIC 1
 106:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 107:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /*-----------------------------------------------------------*/
 108:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 109:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /* Hardware specifics. */
 110:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portSTACK_GROWTH            ( -1 )
 111:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portTICK_PERIOD_MS          ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 112:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portBYTE_ALIGNMENT          8
 113:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 114:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /*-----------------------------------------------------------*/
 115:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 116:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /* Task utilities. */
 117:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 118:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /* Called at the end of an ISR that can cause a context switch. */
 119:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired )\
 120:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** {                                               \
 121:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** extern volatile uint32_t ulPortYieldRequired;   \
 122:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****                                                 \
 123:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     if( xSwitchRequired != pdFALSE )            \
 124:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     {                                           \
 125:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****         ulPortYieldRequired = pdTRUE;           \
 126:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     }                                           \
 127:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** }
 128:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 129:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 130:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portYIELD() __asm volatile ( "SWI 0     \n"             \
 131:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****                                      "ISB         " );
 132:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 133:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 134:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /*-----------------------------------------------------------
 135:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****  * Critical section control
 136:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****  *----------------------------------------------------------*/
 137:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 138:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** extern void vPortEnterCritical( void );
 139:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** extern void vPortExitCritical( void );
 140:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** extern uint32_t ulPortSetInterruptMask( void );
 141:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** extern void vPortClearInterruptMask( uint32_t ulNewMaskValue );
 142:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** extern void vPortInstallFreeRTOSVectorTable( void );
 143:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 144:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /* The I bit within the CPSR. */
 145:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portINTERRUPT_ENABLE_BIT    ( 1 << 7 )
 146:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 147:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** /* In the absence of a priority mask register, these functions and macros
 148:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** globally enable and disable interrupts. */
 149:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portENTER_CRITICAL()        vPortEnterCritical();
 150:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portEXIT_CRITICAL()         vPortExitCritical();
 151:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portENABLE_INTERRUPTS()     __asm volatile ( "CPSIE i   \n" );
 152:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define portDISABLE_INTERRUPTS()    __asm volatile ( "CPSID i   \n"     \
 153:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****                                                      "DSB       \n"     \
 154:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****                                                      "ISB         " );
 155:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 156:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define __disable_irq()             portDISABLE_INTERRUPTS()
 157:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** #define __enable_irq()              portENABLE_INTERRUPTS()
 158:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 159:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** __attribute__( ( always_inline ) ) static __inline uint32_t portINLINE_SET_INTERRUPT_MASK_FROM_ISR(
 160:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** {
 161:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** volatile uint32_t ulCPSR;
 162:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h **** 
 163:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     __asm volatile ( "MRS %0, CPSR" : "=r" (ulCPSR) );
 1298              		.loc 2 163 0 is_stmt 1
 1299              	@ 163 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h"
 1300 0060 EFF30082 		MRS r2, CPSR
 1301              	@ 0 "" 2
 1302              		.thumb
 1303 0064 0192     		str	r2, [sp, #4]
 164:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     ulCPSR &= portINTERRUPT_ENABLE_BIT;
 1304              		.loc 2 164 0
 1305 0066 019A     		ldr	r2, [sp, #4]
 1306 0068 02F08002 		and	r2, r2, #128
 1307 006c 0192     		str	r2, [sp, #4]
 165:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     portDISABLE_INTERRUPTS();
 1308              		.loc 2 165 0
 1309              	@ 165 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h"
 1310 006e 72B6     		CPSID i   
 1311 0070 BFF34F8F 	DSB       
 1312 0074 BFF36F8F 	ISB         
 1313              	@ 0 "" 2
 166:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     return ulCPSR;
 1314              		.loc 2 166 0
 1315              		.thumb
 1316 0078 019D     		ldr	r5, [sp, #4]
 1317              	.LBE23:
 1318              	.LBE22:
1087:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 1319              		.loc 1 1087 0
 1320 007a A26B     		ldr	r2, [r4, #56]
 1321 007c 8242     		cmp	r2, r0
 1322 007e 01D3     		bcc	.L159
1087:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 1323              		.loc 1 1087 0 is_stmt 0 discriminator 1
 1324 0080 022B     		cmp	r3, #2
 1325 0082 16D1     		bne	.L161
 1326              	.L159:
1096:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1327              		.loc 1 1096 0 is_stmt 1
 1328 0084 1A46     		mov	r2, r3
 1329 0086 2046     		mov	r0, r4
 1330 0088 0F4B     		ldr	r3, .L180+12
 1331              	.LVL169:
 1332 008a 9847     		blx	r3
 1333              	.LVL170:
1100:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 1334              		.loc 1 1100 0
 1335 008c A36C     		ldr	r3, [r4, #72]
 1336 008e 0133     		adds	r3, r3, #1
 1337 0090 0AD1     		bne	.L154
1155:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 1338              		.loc 1 1155 0
 1339 0092 636A     		ldr	r3, [r4, #36]
 1340 0094 5BB1     		cbz	r3, .L179
1157:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 1341              		.loc 1 1157 0
 1342 0096 04F12400 		add	r0, r4, #36
 1343 009a 0C4B     		ldr	r3, .L180+16
 1344 009c 9847     		blx	r3
 1345              	.LVL171:
 1346 009e 30B1     		cbz	r0, .L179
1161:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
 1347              		.loc 1 1161 0
 1348 00a0 2EB1     		cbz	r6, .L179
1163:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
 1349              		.loc 1 1163 0
 1350 00a2 0120     		movs	r0, #1
 1351 00a4 3060     		str	r0, [r6]
 1352 00a6 05E0     		b	.L153
 1353              	.L154:
1186:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 1354              		.loc 1 1186 0
 1355 00a8 A36C     		ldr	r3, [r4, #72]
 1356 00aa 0133     		adds	r3, r3, #1
 1357 00ac A364     		str	r3, [r4, #72]
 1358              	.L179:
1189:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 1359              		.loc 1 1189 0
 1360 00ae 0120     		movs	r0, #1
 1361 00b0 00E0     		b	.L153
 1362              	.LVL172:
 1363              	.L161:
1194:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 1364              		.loc 1 1194 0
 1365 00b2 0020     		movs	r0, #0
 1366              	.LVL173:
 1367              	.L153:
1197:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1368              		.loc 1 1197 0
 1369 00b4 05B9     		cbnz	r5, .L166
1197:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1370              		.loc 1 1197 0 is_stmt 0 discriminator 1
 1371              	@ 1197 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1372 00b6 62B6     		CPSIE i   
 1373              	
 1374              	@ 0 "" 2
 1375              		.thumb
 1376              	.L166:
1200:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 1377              		.loc 1 1200 0 is_stmt 1
 1378 00b8 02B0     		add	sp, sp, #8
 1379              	.LCFI11:
 1380              		.cfi_def_cfa_offset 16
 1381              		@ sp needed
 1382 00ba 70BD     		pop	{r4, r5, r6, pc}
 1383              	.LVL174:
 1384              	.L181:
 1385              		.align	2
 1386              	.L180:
 1387 00bc 00000000 		.word	.LC0
 1388 00c0 00000000 		.word	.LANCHOR6
 1389 00c4 00000000 		.word	printf
 1390 00c8 00000000 		.word	prvCopyDataToQueue
 1391 00cc 00000000 		.word	xTaskRemoveFromEventList
 1392              		.cfi_endproc
 1393              	.LFE8:
 1395              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1396              		.align	1
 1397              		.global	xQueueGiveFromISR
 1398              		.thumb
 1399              		.thumb_func
 1401              	xQueueGiveFromISR:
 1402              	.LFB9:
1204:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
 1403              		.loc 1 1204 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 8
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              	.LVL175:
 1408 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1409              	.LCFI12:
 1410              		.cfi_def_cfa_offset 24
 1411              		.cfi_offset 4, -12
 1412              		.cfi_offset 5, -8
 1413              		.cfi_offset 14, -4
1204:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
 1414              		.loc 1 1204 0
 1415 0002 0C46     		mov	r4, r1
1215:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1416              		.loc 1 1215 0
 1417 0004 58B9     		cbnz	r0, .L183
1215:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1418              		.loc 1 1215 0 is_stmt 0 discriminator 1
 1419              	@ 1215 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1420 0006 72B6     		CPSID i   
 1421 0008 BFF34F8F 	DSB       
 1422 000c BFF36F8F 	ISB         
 1423              	@ 0 "" 2
 1424              		.thumb
 1425 0010 2848     		ldr	r0, .L209
 1426              	.LVL176:
 1427 0012 40F2BF42 		movw	r2, #1215
 1428 0016 2849     		ldr	r1, .L209+4
 1429              	.LVL177:
 1430 0018 284B     		ldr	r3, .L209+8
 1431 001a 9847     		blx	r3
 1432              	.LVL178:
 1433              	.L184:
 1434 001c FEE7     		b	.L184
 1435              	.LVL179:
 1436              	.L183:
1219:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1437              		.loc 1 1219 0 is_stmt 1
 1438 001e 036C     		ldr	r3, [r0, #64]
 1439 0020 5BB1     		cbz	r3, .L185
1219:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1440              		.loc 1 1219 0 is_stmt 0 discriminator 1
 1441              	@ 1219 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1442 0022 72B6     		CPSID i   
 1443 0024 BFF34F8F 	DSB       
 1444 0028 BFF36F8F 	ISB         
 1445              	@ 0 "" 2
 1446              		.thumb
 1447 002c 2148     		ldr	r0, .L209
 1448              	.LVL180:
 1449 002e 40F2C342 		movw	r2, #1219
 1450 0032 2149     		ldr	r1, .L209+4
 1451              	.LVL181:
 1452 0034 214B     		ldr	r3, .L209+8
 1453 0036 9847     		blx	r3
 1454              	.LVL182:
 1455              	.L186:
1219:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1456              		.loc 1 1219 0 discriminator 2
 1457 0038 FEE7     		b	.L186
 1458              	.LVL183:
 1459              	.L185:
1224:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1460              		.loc 1 1224 0 is_stmt 1
 1461 003a 0368     		ldr	r3, [r0]
 1462 003c 0BB9     		cbnz	r3, .L187
1224:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1463              		.loc 1 1224 0 is_stmt 0 discriminator 2
 1464 003e 4368     		ldr	r3, [r0, #4]
 1465 0040 4BBB     		cbnz	r3, .L206
 1466              	.L187:
 1467              	.LBB24:
 1468              	.LBB25:
 163:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     ulCPSR &= portINTERRUPT_ENABLE_BIT;
 1469              		.loc 2 163 0 is_stmt 1
 1470              	@ 163 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h"
 1471 0042 EFF30083 		MRS r3, CPSR
 1472              	@ 0 "" 2
 1473              		.thumb
 1474 0046 0193     		str	r3, [sp, #4]
 164:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     portDISABLE_INTERRUPTS();
 1475              		.loc 2 164 0
 1476 0048 019B     		ldr	r3, [sp, #4]
 1477 004a 03F08003 		and	r3, r3, #128
 1478 004e 0193     		str	r3, [sp, #4]
 165:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     return ulCPSR;
 1479              		.loc 2 165 0
 1480              	@ 165 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h"
 1481 0050 72B6     		CPSID i   
 1482 0052 BFF34F8F 	DSB       
 1483 0056 BFF36F8F 	ISB         
 1484              	@ 0 "" 2
 1485              		.loc 2 166 0
 1486              		.thumb
 1487 005a 019D     		ldr	r5, [sp, #4]
 1488              	.LBE25:
 1489              	.LBE24:
1247:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 1490              		.loc 1 1247 0
 1491 005c C36B     		ldr	r3, [r0, #60]
 1492 005e 826B     		ldr	r2, [r0, #56]
 1493 0060 9A42     		cmp	r2, r3
 1494 0062 16D2     		bcs	.L208
1257:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1495              		.loc 1 1257 0
 1496 0064 836B     		ldr	r3, [r0, #56]
 1497 0066 0133     		adds	r3, r3, #1
 1498 0068 8363     		str	r3, [r0, #56]
1261:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 1499              		.loc 1 1261 0
 1500 006a 836C     		ldr	r3, [r0, #72]
 1501 006c 0133     		adds	r3, r3, #1
 1502 006e 09D1     		bne	.L190
1316:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 1503              		.loc 1 1316 0
 1504 0070 436A     		ldr	r3, [r0, #36]
 1505 0072 53B1     		cbz	r3, .L207
1318:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 1506              		.loc 1 1318 0
 1507 0074 2430     		adds	r0, r0, #36
 1508              	.LVL184:
 1509 0076 124B     		ldr	r3, .L209+12
 1510 0078 9847     		blx	r3
 1511              	.LVL185:
 1512 007a 30B1     		cbz	r0, .L207
1322:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							{
 1513              		.loc 1 1322 0
 1514 007c 2CB1     		cbz	r4, .L207
1324:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 							}
 1515              		.loc 1 1324 0
 1516 007e 0120     		movs	r0, #1
 1517 0080 2060     		str	r0, [r4]
 1518 0082 03E0     		b	.L192
 1519              	.LVL186:
 1520              	.L190:
1347:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 1521              		.loc 1 1347 0
 1522 0084 836C     		ldr	r3, [r0, #72]
 1523 0086 0133     		adds	r3, r3, #1
 1524 0088 8364     		str	r3, [r0, #72]
 1525              	.LVL187:
 1526              	.L207:
1350:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 1527              		.loc 1 1350 0
 1528 008a 0120     		movs	r0, #1
 1529              	.L192:
 1530              	.LVL188:
1358:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1531              		.loc 1 1358 0
 1532 008c 7DB9     		cbnz	r5, .L199
1358:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1533              		.loc 1 1358 0 is_stmt 0 discriminator 1
 1534              	@ 1358 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1535 008e 62B6     		CPSIE i   
 1536              	
 1537              	@ 0 "" 2
 1538              		.thumb
 1539 0090 0DE0     		b	.L199
 1540              	.LVL189:
 1541              	.L208:
1355:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 1542              		.loc 1 1355 0 is_stmt 1
 1543 0092 0020     		movs	r0, #0
 1544              	.LVL190:
 1545 0094 FAE7     		b	.L192
 1546              	.LVL191:
 1547              	.L206:
1224:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1548              		.loc 1 1224 0
 1549              	@ 1224 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1550 0096 72B6     		CPSID i   
 1551 0098 BFF34F8F 	DSB       
 1552 009c BFF36F8F 	ISB         
 1553              	@ 0 "" 2
 1554              		.thumb
 1555 00a0 0448     		ldr	r0, .L209
 1556              	.LVL192:
 1557 00a2 4FF49962 		mov	r2, #1224
 1558 00a6 0449     		ldr	r1, .L209+4
 1559              	.LVL193:
 1560 00a8 044B     		ldr	r3, .L209+8
 1561 00aa 9847     		blx	r3
 1562              	.LVL194:
 1563              	.L189:
1224:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1564              		.loc 1 1224 0 is_stmt 0 discriminator 3
 1565 00ac FEE7     		b	.L189
 1566              	.LVL195:
 1567              	.L199:
1361:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 1568              		.loc 1 1361 0 is_stmt 1
 1569 00ae 03B0     		add	sp, sp, #12
 1570              	.LCFI13:
 1571              		.cfi_def_cfa_offset 12
 1572              		@ sp needed
 1573 00b0 30BD     		pop	{r4, r5, pc}
 1574              	.LVL196:
 1575              	.L210:
 1576 00b2 00BF     		.align	2
 1577              	.L209:
 1578 00b4 00000000 		.word	.LC0
 1579 00b8 00000000 		.word	.LANCHOR7
 1580 00bc 00000000 		.word	printf
 1581 00c0 00000000 		.word	xTaskRemoveFromEventList
 1582              		.cfi_endproc
 1583              	.LFE9:
 1585              		.section	.text.xQueueGenericReceive,"ax",%progbits
 1586              		.align	1
 1587              		.global	xQueueGenericReceive
 1588              		.thumb
 1589              		.thumb_func
 1591              	xQueueGenericReceive:
 1592              	.LFB10:
1365:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1593              		.loc 1 1365 0
 1594              		.cfi_startproc
 1595              		@ args = 0, pretend = 0, frame = 16
 1596              		@ frame_needed = 0, uses_anonymous_args = 0
 1597              	.LVL197:
 1598 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1599              	.LCFI14:
 1600              		.cfi_def_cfa_offset 36
 1601              		.cfi_offset 4, -36
 1602              		.cfi_offset 5, -32
 1603              		.cfi_offset 6, -28
 1604              		.cfi_offset 7, -24
 1605              		.cfi_offset 8, -20
 1606              		.cfi_offset 9, -16
 1607              		.cfi_offset 10, -12
 1608              		.cfi_offset 11, -8
 1609              		.cfi_offset 14, -4
 1610 0004 85B0     		sub	sp, sp, #20
 1611              	.LCFI15:
 1612              		.cfi_def_cfa_offset 56
1365:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1613              		.loc 1 1365 0
 1614 0006 8946     		mov	r9, r1
 1615 0008 9A46     		mov	r10, r3
 1616 000a 0192     		str	r2, [sp, #4]
1371:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1617              		.loc 1 1371 0
 1618 000c 0446     		mov	r4, r0
 1619 000e 58B9     		cbnz	r0, .L212
1371:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1620              		.loc 1 1371 0 is_stmt 0 discriminator 1
 1621              	@ 1371 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1622 0010 72B6     		CPSID i   
 1623 0012 BFF34F8F 	DSB       
 1624 0016 BFF36F8F 	ISB         
 1625              	@ 0 "" 2
 1626              		.thumb
 1627 001a 4F48     		ldr	r0, .L256
 1628              	.LVL198:
 1629 001c 40F25B52 		movw	r2, #1371
 1630              	.LVL199:
 1631 0020 4E49     		ldr	r1, .L256+4
 1632              	.LVL200:
 1633 0022 4F4B     		ldr	r3, .L256+8
 1634              	.LVL201:
 1635 0024 9847     		blx	r3
 1636              	.LVL202:
 1637              	.L213:
 1638 0026 FEE7     		b	.L213
 1639              	.LVL203:
 1640              	.L212:
1372:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1641              		.loc 1 1372 0 is_stmt 1
 1642 0028 69B9     		cbnz	r1, .L214
1372:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1643              		.loc 1 1372 0 is_stmt 0 discriminator 2
 1644 002a 036C     		ldr	r3, [r0, #64]
 1645              	.LVL204:
 1646 002c 5BB1     		cbz	r3, .L214
1372:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1647              		.loc 1 1372 0
 1648              	@ 1372 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1649 002e 72B6     		CPSID i   
 1650 0030 BFF34F8F 	DSB       
 1651 0034 BFF36F8F 	ISB         
 1652              	@ 0 "" 2
 1653              		.thumb
 1654 0038 4748     		ldr	r0, .L256
 1655              	.LVL205:
 1656 003a 40F25C52 		movw	r2, #1372
 1657              	.LVL206:
 1658 003e 4749     		ldr	r1, .L256+4
 1659              	.LVL207:
 1660 0040 474B     		ldr	r3, .L256+8
 1661 0042 9847     		blx	r3
 1662              	.LVL208:
 1663              	.L216:
1372:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1664              		.loc 1 1372 0 discriminator 2
 1665 0044 FEE7     		b	.L216
 1666              	.LVL209:
 1667              	.L214:
1375:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 1668              		.loc 1 1375 0 is_stmt 1
 1669 0046 474B     		ldr	r3, .L256+12
 1670 0048 9847     		blx	r3
 1671              	.LVL210:
 1672 004a 10B9     		cbnz	r0, .L237
1375:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 1673              		.loc 1 1375 0 is_stmt 0 discriminator 2
 1674 004c 019E     		ldr	r6, [sp, #4]
 1675 004e 0EB1     		cbz	r6, .L249
 1676 0050 72E0     		b	.L254
 1677              	.L237:
 1678 0052 0026     		movs	r6, #0
 1679              	.LVL211:
 1680              	.L249:
1385:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 1681              		.loc 1 1385 0 is_stmt 1
 1682 0054 444F     		ldr	r7, .L256+16
 1683 0056 B847     		blx	r7
 1684              	.LVL212:
1389:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 1685              		.loc 1 1389 0
 1686 0058 A36B     		ldr	r3, [r4, #56]
 1687 005a DFF83881 		ldr	r8, .L256+60
 1688 005e 33B3     		cbz	r3, .L220
1395:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1689              		.loc 1 1395 0
 1690 0060 2046     		mov	r0, r4
 1691 0062 4946     		mov	r1, r9
 1692 0064 414B     		ldr	r3, .L256+20
1393:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1693              		.loc 1 1393 0
 1694 0066 E568     		ldr	r5, [r4, #12]
 1695              	.LVL213:
1395:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1696              		.loc 1 1395 0
 1697 0068 9847     		blx	r3
 1698              	.LVL214:
1397:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 1699              		.loc 1 1397 0
 1700 006a BAF1000F 		cmp	r10, #0
 1701 006e 10D1     		bne	.L221
1402:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1702              		.loc 1 1402 0
 1703 0070 A36B     		ldr	r3, [r4, #56]
 1704 0072 013B     		subs	r3, r3, #1
 1705 0074 A363     		str	r3, [r4, #56]
1406:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 1706              		.loc 1 1406 0
 1707 0076 2368     		ldr	r3, [r4]
 1708 0078 13B9     		cbnz	r3, .L222
1410:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 1709              		.loc 1 1410 0
 1710 007a 3D4B     		ldr	r3, .L256+24
 1711 007c 9847     		blx	r3
 1712              	.LVL215:
 1713 007e 6060     		str	r0, [r4, #4]
 1714              	.L222:
1419:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 1715              		.loc 1 1419 0
 1716 0080 2369     		ldr	r3, [r4, #16]
 1717 0082 8BB1     		cbz	r3, .L224
1421:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 1718              		.loc 1 1421 0
 1719 0084 04F11000 		add	r0, r4, #16
 1720 0088 3A4B     		ldr	r3, .L256+28
 1721 008a 9847     		blx	r3
 1722              	.LVL216:
 1723 008c 0128     		cmp	r0, #1
 1724 008e 0BD1     		bne	.L224
 1725 0090 07E0     		b	.L252
 1726              	.L221:
1445:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 1727              		.loc 1 1445 0
 1728 0092 636A     		ldr	r3, [r4, #36]
1441:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1729              		.loc 1 1441 0
 1730 0094 E560     		str	r5, [r4, #12]
1445:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 1731              		.loc 1 1445 0
 1732 0096 3BB1     		cbz	r3, .L224
1447:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 1733              		.loc 1 1447 0
 1734 0098 04F12400 		add	r0, r4, #36
 1735 009c 354B     		ldr	r3, .L256+28
 1736 009e 9847     		blx	r3
 1737              	.LVL217:
 1738 00a0 10B1     		cbz	r0, .L224
 1739              	.L252:
1450:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 1740              		.loc 1 1450 0
 1741              	@ 1450 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1742 00a2 00DF     		SWI 0     
 1743 00a4 BFF36F8F 	ISB         
 1744              	@ 0 "" 2
 1745              		.thumb
 1746              	.L224:
1463:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				return pdPASS;
 1747              		.loc 1 1463 0
 1748 00a8 C047     		blx	r8
 1749              	.LVL218:
1464:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 1750              		.loc 1 1464 0
 1751 00aa 0120     		movs	r0, #1
 1752 00ac 50E0     		b	.L250
 1753              	.LVL219:
 1754              	.L220:
1468:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 1755              		.loc 1 1468 0
 1756 00ae 019D     		ldr	r5, [sp, #4]
 1757 00b0 0DB9     		cbnz	r5, .L227
1472:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1758              		.loc 1 1472 0
 1759 00b2 C047     		blx	r8
 1760              	.LVL220:
 1761 00b4 3EE0     		b	.L253
 1762              	.L227:
1476:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 1763              		.loc 1 1476 0
 1764 00b6 16B9     		cbnz	r6, .L228
1480:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1765              		.loc 1 1480 0
 1766 00b8 02A8     		add	r0, sp, #8
 1767 00ba 2F4B     		ldr	r3, .L256+32
 1768 00bc 9847     		blx	r3
 1769              	.LVL221:
 1770              	.L228:
1490:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1771              		.loc 1 1490 0
 1772 00be C047     		blx	r8
 1773              	.LVL222:
1495:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		prvLockQueue( pxQueue );
 1774              		.loc 1 1495 0
 1775 00c0 2E4B     		ldr	r3, .L256+36
 1776 00c2 9847     		blx	r3
 1777              	.LVL223:
1496:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1778              		.loc 1 1496 0
 1779 00c4 B847     		blx	r7
 1780              	.LVL224:
 1781 00c6 636C     		ldr	r3, [r4, #68]
 1782 00c8 DFF8C8B0 		ldr	fp, .L256+60
 1783 00cc 0133     		adds	r3, r3, #1
 1784 00ce 08BF     		it	eq
 1785 00d0 0023     		moveq	r3, #0
 1786 00d2 2B4E     		ldr	r6, .L256+40
 1787 00d4 08BF     		it	eq
 1788 00d6 6364     		streq	r3, [r4, #68]
 1789 00d8 A36C     		ldr	r3, [r4, #72]
 1790 00da 2A4D     		ldr	r5, .L256+44
 1791 00dc 0133     		adds	r3, r3, #1
 1792 00de 04BF     		itt	eq
 1793 00e0 0023     		moveq	r3, #0
 1794 00e2 A364     		streq	r3, [r4, #72]
 1795 00e4 C047     		blx	r8
 1796              	.LVL225:
1499:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 1797              		.loc 1 1499 0
 1798 00e6 02A8     		add	r0, sp, #8
 1799 00e8 01A9     		add	r1, sp, #4
 1800              	.LVL226:
 1801 00ea 274B     		ldr	r3, .L256+48
 1802 00ec 9847     		blx	r3
 1803              	.LVL227:
 1804 00ee F0B9     		cbnz	r0, .L231
 1805              	.LVL228:
 1806              	.LBB28:
 1807              	.LBB29:
1995:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 1808              		.loc 1 1995 0
 1809 00f0 B847     		blx	r7
 1810              	.LVL229:
1997:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 1811              		.loc 1 1997 0
 1812 00f2 A76B     		ldr	r7, [r4, #56]
 1813              	.LVL230:
2006:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1814              		.loc 1 2006 0
 1815 00f4 D847     		blx	fp
 1816              	.LVL231:
 1817              	.LBE29:
 1818              	.LBE28:
1501:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 1819              		.loc 1 1501 0
 1820 00f6 B7B9     		cbnz	r7, .L232
1507:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 1821              		.loc 1 1507 0
 1822 00f8 2368     		ldr	r3, [r4]
 1823 00fa 2BB9     		cbnz	r3, .L233
1509:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 1824              		.loc 1 1509 0
 1825 00fc 1A4B     		ldr	r3, .L256+16
 1826 00fe 9847     		blx	r3
 1827              	.LVL232:
1511:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 1828              		.loc 1 1511 0
 1829 0100 6068     		ldr	r0, [r4, #4]
 1830 0102 224B     		ldr	r3, .L256+52
 1831 0104 9847     		blx	r3
 1832              	.LVL233:
1513:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
 1833              		.loc 1 1513 0
 1834 0106 D847     		blx	fp
 1835              	.LVL234:
 1836              	.L233:
1522:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1837              		.loc 1 1522 0
 1838 0108 04F12400 		add	r0, r4, #36
 1839 010c 0199     		ldr	r1, [sp, #4]
 1840 010e 204B     		ldr	r3, .L256+56
 1841 0110 9847     		blx	r3
 1842              	.LVL235:
1523:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1843              		.loc 1 1523 0
 1844 0112 2046     		mov	r0, r4
 1845 0114 B047     		blx	r6
 1846              	.LVL236:
1524:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 1847              		.loc 1 1524 0
 1848 0116 A847     		blx	r5
 1849              	.LVL237:
 1850 0118 08B1     		cbz	r0, .L255
 1851              	.LVL238:
 1852              	.L234:
 1853 011a 0126     		movs	r6, #1
 1854 011c 9AE7     		b	.L249
 1855              	.LVL239:
 1856              	.L255:
1526:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
 1857              		.loc 1 1526 0
 1858              	@ 1526 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1859 011e 00DF     		SWI 0     
 1860 0120 BFF36F8F 	ISB         
 1861              	@ 0 "" 2
 1862              		.thumb
 1863 0124 F9E7     		b	.L234
 1864              	.L232:
 1865              	.LVL240:
1536:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				( void ) xTaskResumeAll();
 1866              		.loc 1 1536 0
 1867 0126 2046     		mov	r0, r4
 1868 0128 B047     		blx	r6
 1869              	.LVL241:
1537:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 1870              		.loc 1 1537 0
 1871 012a A847     		blx	r5
 1872              	.LVL242:
 1873 012c F5E7     		b	.L234
 1874              	.LVL243:
 1875              	.L231:
1542:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( void ) xTaskResumeAll();
 1876              		.loc 1 1542 0
 1877 012e 2046     		mov	r0, r4
 1878 0130 B047     		blx	r6
 1879              	.LVL244:
1543:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
 1880              		.loc 1 1543 0
 1881 0132 A847     		blx	r5
 1882              	.LVL245:
 1883              	.L253:
1545:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 1884              		.loc 1 1545 0
 1885 0134 0020     		movs	r0, #0
 1886 0136 0BE0     		b	.L250
 1887              	.LVL246:
 1888              	.L254:
1375:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 1889              		.loc 1 1375 0
 1890              	@ 1375 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1891 0138 72B6     		CPSID i   
 1892 013a BFF34F8F 	DSB       
 1893 013e BFF36F8F 	ISB         
 1894              	@ 0 "" 2
 1895              		.thumb
 1896 0142 0548     		ldr	r0, .L256
 1897 0144 40F25F52 		movw	r2, #1375
 1898 0148 0449     		ldr	r1, .L256+4
 1899 014a 054B     		ldr	r3, .L256+8
 1900 014c 9847     		blx	r3
 1901              	.LVL247:
 1902              	.L219:
1375:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 1903              		.loc 1 1375 0 is_stmt 0 discriminator 3
 1904 014e FEE7     		b	.L219
 1905              	.LVL248:
 1906              	.L250:
1548:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 1907              		.loc 1 1548 0 is_stmt 1
 1908 0150 05B0     		add	sp, sp, #20
 1909              	.LCFI16:
 1910              		.cfi_def_cfa_offset 36
 1911              		@ sp needed
 1912 0152 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1913              	.LVL249:
 1914              	.L257:
 1915 0156 00BF     		.align	2
 1916              	.L256:
 1917 0158 00000000 		.word	.LC0
 1918 015c 00000000 		.word	.LANCHOR8
 1919 0160 00000000 		.word	printf
 1920 0164 00000000 		.word	xTaskGetSchedulerState
 1921 0168 00000000 		.word	vPortEnterCritical
 1922 016c 00000000 		.word	prvCopyDataFromQueue
 1923 0170 00000000 		.word	pvTaskIncrementMutexHeldCount
 1924 0174 00000000 		.word	xTaskRemoveFromEventList
 1925 0178 00000000 		.word	vTaskSetTimeOutState
 1926 017c 00000000 		.word	vTaskSuspendAll
 1927 0180 00000000 		.word	prvUnlockQueue
 1928 0184 00000000 		.word	xTaskResumeAll
 1929 0188 00000000 		.word	xTaskCheckForTimeOut
 1930 018c 00000000 		.word	vTaskPriorityInherit
 1931 0190 00000000 		.word	vTaskPlaceOnEventList
 1932 0194 00000000 		.word	vPortExitCritical
 1933              		.cfi_endproc
 1934              	.LFE10:
 1936              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 1937              		.align	1
 1938              		.global	xQueueTakeMutexRecursive
 1939              		.thumb
 1940              		.thumb_func
 1942              	xQueueTakeMutexRecursive:
 1943              	.LFB5:
 541:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xReturn;
 1944              		.loc 1 541 0
 1945              		.cfi_startproc
 1946              		@ args = 0, pretend = 0, frame = 0
 1947              		@ frame_needed = 0, uses_anonymous_args = 0
 1948              	.LVL250:
 1949 0000 70B5     		push	{r4, r5, r6, lr}
 1950              	.LCFI17:
 1951              		.cfi_def_cfa_offset 16
 1952              		.cfi_offset 4, -16
 1953              		.cfi_offset 5, -12
 1954              		.cfi_offset 6, -8
 1955              		.cfi_offset 14, -4
 541:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xReturn;
 1956              		.loc 1 541 0
 1957 0002 0D46     		mov	r5, r1
 545:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1958              		.loc 1 545 0
 1959 0004 0446     		mov	r4, r0
 1960 0006 58B9     		cbnz	r0, .L259
 545:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1961              		.loc 1 545 0 is_stmt 0 discriminator 1
 1962              	@ 545 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 1963 0008 72B6     		CPSID i   
 1964 000a BFF34F8F 	DSB       
 1965 000e BFF36F8F 	ISB         
 1966              	@ 0 "" 2
 1967              		.thumb
 1968 0012 0E48     		ldr	r0, .L263
 1969              	.LVL251:
 1970 0014 40F22122 		movw	r2, #545
 1971 0018 0D49     		ldr	r1, .L263+4
 1972              	.LVL252:
 1973 001a 0E4B     		ldr	r3, .L263+8
 1974 001c 9847     		blx	r3
 1975              	.LVL253:
 1976              	.L260:
 1977 001e FEE7     		b	.L260
 1978              	.LVL254:
 1979              	.L259:
 552:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 1980              		.loc 1 552 0 is_stmt 1
 1981 0020 0D4B     		ldr	r3, .L263+12
 1982 0022 4668     		ldr	r6, [r0, #4]
 1983 0024 9847     		blx	r3
 1984              	.LVL255:
 1985 0026 8642     		cmp	r6, r0
 1986 0028 04D1     		bne	.L261
 554:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdPASS;
 1987              		.loc 1 554 0
 1988 002a E368     		ldr	r3, [r4, #12]
 555:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 1989              		.loc 1 555 0
 1990 002c 0120     		movs	r0, #1
 554:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdPASS;
 1991              		.loc 1 554 0
 1992 002e 0133     		adds	r3, r3, #1
 1993 0030 E360     		str	r3, [r4, #12]
 1994              	.LVL256:
 1995 0032 70BD     		pop	{r4, r5, r6, pc}
 1996              	.LVL257:
 1997              	.L261:
 559:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 1998              		.loc 1 559 0
 1999 0034 0021     		movs	r1, #0
 2000 0036 0B46     		mov	r3, r1
 2001 0038 2A46     		mov	r2, r5
 2002 003a 2046     		mov	r0, r4
 2003 003c 074D     		ldr	r5, .L263+16
 2004              	.LVL258:
 2005 003e A847     		blx	r5
 2006              	.LVL259:
 564:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 2007              		.loc 1 564 0
 2008 0040 0128     		cmp	r0, #1
 566:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 2009              		.loc 1 566 0
 2010 0042 02BF     		ittt	eq
 2011 0044 E368     		ldreq	r3, [r4, #12]
 2012 0046 0133     		addeq	r3, r3, #1
 2013 0048 E360     		streq	r3, [r4, #12]
 575:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2014              		.loc 1 575 0
 2015 004a 70BD     		pop	{r4, r5, r6, pc}
 2016              	.LVL260:
 2017              	.L264:
 2018              		.align	2
 2019              	.L263:
 2020 004c 00000000 		.word	.LC0
 2021 0050 00000000 		.word	.LANCHOR9
 2022 0054 00000000 		.word	printf
 2023 0058 00000000 		.word	xTaskGetCurrentTaskHandle
 2024 005c 00000000 		.word	xQueueGenericReceive
 2025              		.cfi_endproc
 2026              	.LFE5:
 2028              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2029              		.align	1
 2030              		.global	xQueueReceiveFromISR
 2031              		.thumb
 2032              		.thumb_func
 2034              	xQueueReceiveFromISR:
 2035              	.LFB11:
1552:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
 2036              		.loc 1 1552 0
 2037              		.cfi_startproc
 2038              		@ args = 0, pretend = 0, frame = 8
 2039              		@ frame_needed = 0, uses_anonymous_args = 0
 2040              	.LVL261:
 2041 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 2042              	.LCFI18:
 2043              		.cfi_def_cfa_offset 24
 2044              		.cfi_offset 4, -16
 2045              		.cfi_offset 5, -12
 2046              		.cfi_offset 6, -8
 2047              		.cfi_offset 14, -4
1552:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
 2048              		.loc 1 1552 0
 2049 0002 1646     		mov	r6, r2
1557:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2050              		.loc 1 1557 0
 2051 0004 0446     		mov	r4, r0
 2052 0006 58B9     		cbnz	r0, .L266
1557:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2053              		.loc 1 1557 0 is_stmt 0 discriminator 1
 2054              	@ 1557 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2055 0008 72B6     		CPSID i   
 2056 000a BFF34F8F 	DSB       
 2057 000e BFF36F8F 	ISB         
 2058              	@ 0 "" 2
 2059              		.thumb
 2060 0012 2048     		ldr	r0, .L289
 2061              	.LVL262:
 2062 0014 40F21562 		movw	r2, #1557
 2063              	.LVL263:
 2064 0018 1F49     		ldr	r1, .L289+4
 2065              	.LVL264:
 2066 001a 204B     		ldr	r3, .L289+8
 2067 001c 9847     		blx	r3
 2068              	.LVL265:
 2069              	.L267:
 2070 001e FEE7     		b	.L267
 2071              	.LVL266:
 2072              	.L266:
1558:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2073              		.loc 1 1558 0 is_stmt 1
 2074 0020 69B9     		cbnz	r1, .L268
1558:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2075              		.loc 1 1558 0 is_stmt 0 discriminator 2
 2076 0022 036C     		ldr	r3, [r0, #64]
 2077 0024 5BB1     		cbz	r3, .L268
1558:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2078              		.loc 1 1558 0
 2079              	@ 1558 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2080 0026 72B6     		CPSID i   
 2081 0028 BFF34F8F 	DSB       
 2082 002c BFF36F8F 	ISB         
 2083              	@ 0 "" 2
 2084              		.thumb
 2085 0030 1848     		ldr	r0, .L289
 2086              	.LVL267:
 2087 0032 40F21662 		movw	r2, #1558
 2088              	.LVL268:
 2089 0036 1849     		ldr	r1, .L289+4
 2090              	.LVL269:
 2091 0038 184B     		ldr	r3, .L289+8
 2092 003a 9847     		blx	r3
 2093              	.LVL270:
 2094              	.L270:
1558:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2095              		.loc 1 1558 0 discriminator 2
 2096 003c FEE7     		b	.L270
 2097              	.LVL271:
 2098              	.L268:
 2099              	.LBB30:
 2100              	.LBB31:
 163:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     ulCPSR &= portINTERRUPT_ENABLE_BIT;
 2101              		.loc 2 163 0 is_stmt 1
 2102              	@ 163 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h"
 2103 003e EFF30083 		MRS r3, CPSR
 2104              	@ 0 "" 2
 2105              		.thumb
 2106 0042 0193     		str	r3, [sp, #4]
 164:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     portDISABLE_INTERRUPTS();
 2107              		.loc 2 164 0
 2108 0044 019B     		ldr	r3, [sp, #4]
 2109 0046 03F08003 		and	r3, r3, #128
 2110 004a 0193     		str	r3, [sp, #4]
 165:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     return ulCPSR;
 2111              		.loc 2 165 0
 2112              	@ 165 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h"
 2113 004c 72B6     		CPSID i   
 2114 004e BFF34F8F 	DSB       
 2115 0052 BFF36F8F 	ISB         
 2116              	@ 0 "" 2
 2117              		.loc 2 166 0
 2118              		.thumb
 2119 0056 019D     		ldr	r5, [sp, #4]
 2120              	.LBE31:
 2121              	.LBE30:
1579:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 2122              		.loc 1 1579 0
 2123 0058 A06B     		ldr	r0, [r4, #56]
 2124              	.LVL272:
 2125 005a B8B1     		cbz	r0, .L273
1583:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
 2126              		.loc 1 1583 0
 2127 005c 104B     		ldr	r3, .L289+12
 2128 005e 2046     		mov	r0, r4
 2129 0060 9847     		blx	r3
 2130              	.LVL273:
1584:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2131              		.loc 1 1584 0
 2132 0062 A36B     		ldr	r3, [r4, #56]
 2133 0064 013B     		subs	r3, r3, #1
 2134 0066 A363     		str	r3, [r4, #56]
1590:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
 2135              		.loc 1 1590 0
 2136 0068 636C     		ldr	r3, [r4, #68]
 2137 006a 0133     		adds	r3, r3, #1
 2138 006c 0AD1     		bne	.L271
1592:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
 2139              		.loc 1 1592 0
 2140 006e 2369     		ldr	r3, [r4, #16]
 2141 0070 5BB1     		cbz	r3, .L288
1594:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
 2142              		.loc 1 1594 0
 2143 0072 04F11000 		add	r0, r4, #16
 2144 0076 0B4B     		ldr	r3, .L289+16
 2145 0078 9847     		blx	r3
 2146              	.LVL274:
 2147 007a 30B1     		cbz	r0, .L288
1598:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						{
 2148              		.loc 1 1598 0
 2149 007c 2EB1     		cbz	r6, .L288
1600:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						}
 2150              		.loc 1 1600 0
 2151 007e 0120     		movs	r0, #1
 2152 0080 3060     		str	r0, [r6]
 2153 0082 03E0     		b	.L273
 2154              	.L271:
1621:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
 2155              		.loc 1 1621 0
 2156 0084 636C     		ldr	r3, [r4, #68]
 2157 0086 0133     		adds	r3, r3, #1
 2158 0088 6364     		str	r3, [r4, #68]
 2159              	.L288:
1624:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 2160              		.loc 1 1624 0
 2161 008a 0120     		movs	r0, #1
 2162              	.L273:
 2163              	.LVL275:
1632:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2164              		.loc 1 1632 0
 2165 008c 05B9     		cbnz	r5, .L280
1632:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2166              		.loc 1 1632 0 is_stmt 0 discriminator 1
 2167              	@ 1632 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2168 008e 62B6     		CPSIE i   
 2169              	
 2170              	@ 0 "" 2
 2171              		.thumb
 2172              	.L280:
1635:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 2173              		.loc 1 1635 0 is_stmt 1
 2174 0090 02B0     		add	sp, sp, #8
 2175              	.LCFI19:
 2176              		.cfi_def_cfa_offset 16
 2177              		@ sp needed
 2178 0092 70BD     		pop	{r4, r5, r6, pc}
 2179              	.LVL276:
 2180              	.L290:
 2181              		.align	2
 2182              	.L289:
 2183 0094 00000000 		.word	.LC0
 2184 0098 00000000 		.word	.LANCHOR10
 2185 009c 00000000 		.word	printf
 2186 00a0 00000000 		.word	prvCopyDataFromQueue
 2187 00a4 00000000 		.word	xTaskRemoveFromEventList
 2188              		.cfi_endproc
 2189              	.LFE11:
 2191              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2192              		.align	1
 2193              		.global	xQueuePeekFromISR
 2194              		.thumb
 2195              		.thumb_func
 2197              	xQueuePeekFromISR:
 2198              	.LFB12:
1639:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
 2199              		.loc 1 1639 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 8
 2202              		@ frame_needed = 0, uses_anonymous_args = 0
 2203              	.LVL277:
 2204 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 2205              	.LCFI20:
 2206              		.cfi_def_cfa_offset 24
 2207              		.cfi_offset 4, -16
 2208              		.cfi_offset 5, -12
 2209              		.cfi_offset 6, -8
 2210              		.cfi_offset 14, -4
1645:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2211              		.loc 1 1645 0
 2212 0002 0446     		mov	r4, r0
 2213 0004 58B9     		cbnz	r0, .L292
1645:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2214              		.loc 1 1645 0 is_stmt 0 discriminator 1
 2215              	@ 1645 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2216 0006 72B6     		CPSID i   
 2217 0008 BFF34F8F 	DSB       
 2218 000c BFF36F8F 	ISB         
 2219              	@ 0 "" 2
 2220              		.thumb
 2221 0010 1E48     		ldr	r0, .L311
 2222              	.LVL278:
 2223 0012 40F26D62 		movw	r2, #1645
 2224 0016 1E49     		ldr	r1, .L311+4
 2225              	.LVL279:
 2226 0018 1E4B     		ldr	r3, .L311+8
 2227 001a 9847     		blx	r3
 2228              	.LVL280:
 2229              	.L293:
 2230 001c FEE7     		b	.L293
 2231              	.LVL281:
 2232              	.L292:
 2233 001e 036C     		ldr	r3, [r0, #64]
1646:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2234              		.loc 1 1646 0 is_stmt 1
 2235 0020 09B9     		cbnz	r1, .L294
1646:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2236              		.loc 1 1646 0 is_stmt 0 discriminator 2
 2237 0022 0BB1     		cbz	r3, .L300
 2238 0024 0CE0     		b	.L310
 2239              	.L294:
1647:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2240              		.loc 1 1647 0 is_stmt 1
 2241 0026 BBB9     		cbnz	r3, .L309
 2242              	.L300:
1647:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2243              		.loc 1 1647 0 is_stmt 0 discriminator 1
 2244              	@ 1647 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2245 0028 72B6     		CPSID i   
 2246 002a BFF34F8F 	DSB       
 2247 002e BFF36F8F 	ISB         
 2248              	@ 0 "" 2
 2249              		.thumb
 2250 0032 1648     		ldr	r0, .L311
 2251              	.LVL282:
 2252 0034 40F26F62 		movw	r2, #1647
 2253 0038 1549     		ldr	r1, .L311+4
 2254              	.LVL283:
 2255 003a 164B     		ldr	r3, .L311+8
 2256 003c 9847     		blx	r3
 2257              	.LVL284:
 2258              	.L297:
1647:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2259              		.loc 1 1647 0 discriminator 3
 2260 003e FEE7     		b	.L297
 2261              	.LVL285:
 2262              	.L310:
1646:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2263              		.loc 1 1646 0 is_stmt 1
 2264              	@ 1646 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2265 0040 72B6     		CPSID i   
 2266 0042 BFF34F8F 	DSB       
 2267 0046 BFF36F8F 	ISB         
 2268              	@ 0 "" 2
 2269              		.thumb
 2270 004a 1048     		ldr	r0, .L311
 2271              	.LVL286:
 2272 004c 40F26E62 		movw	r2, #1646
 2273 0050 0F49     		ldr	r1, .L311+4
 2274              	.LVL287:
 2275 0052 104B     		ldr	r3, .L311+8
 2276 0054 9847     		blx	r3
 2277              	.LVL288:
 2278              	.L296:
1646:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2279              		.loc 1 1646 0 is_stmt 0 discriminator 2
 2280 0056 FEE7     		b	.L296
 2281              	.LVL289:
 2282              	.L309:
 2283              	.LBB32:
 2284              	.LBB33:
 163:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     ulCPSR &= portINTERRUPT_ENABLE_BIT;
 2285              		.loc 2 163 0 is_stmt 1
 2286              	@ 163 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h"
 2287 0058 EFF30083 		MRS r3, CPSR
 2288              	@ 0 "" 2
 2289              		.thumb
 2290 005c 0193     		str	r3, [sp, #4]
 164:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     portDISABLE_INTERRUPTS();
 2291              		.loc 2 164 0
 2292 005e 019B     		ldr	r3, [sp, #4]
 2293 0060 03F08003 		and	r3, r3, #128
 2294 0064 0193     		str	r3, [sp, #4]
 165:/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h ****     return ulCPSR;
 2295              		.loc 2 165 0
 2296              	@ 165 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacro.h"
 2297 0066 72B6     		CPSID i   
 2298 0068 BFF34F8F 	DSB       
 2299 006c BFF36F8F 	ISB         
 2300              	@ 0 "" 2
 2301              		.loc 2 166 0
 2302              		.thumb
 2303 0070 019D     		ldr	r5, [sp, #4]
 2304              	.LBE33:
 2305              	.LBE32:
1668:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 2306              		.loc 1 1668 0
 2307 0072 A36B     		ldr	r3, [r4, #56]
 2308 0074 2BB1     		cbz	r3, .L302
1674:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2309              		.loc 1 1674 0
 2310 0076 E668     		ldr	r6, [r4, #12]
 2311              	.LVL290:
1675:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2312              		.loc 1 1675 0
 2313 0078 074B     		ldr	r3, .L311+12
 2314 007a 9847     		blx	r3
 2315              	.LVL291:
1676:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2316              		.loc 1 1676 0
 2317 007c E660     		str	r6, [r4, #12]
 2318              	.LVL292:
1678:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
 2319              		.loc 1 1678 0
 2320 007e 0120     		movs	r0, #1
 2321 0080 00E0     		b	.L298
 2322              	.LVL293:
 2323              	.L302:
1682:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2324              		.loc 1 1682 0
 2325 0082 1846     		mov	r0, r3
 2326              	.LVL294:
 2327              	.L298:
1686:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2328              		.loc 1 1686 0
 2329 0084 05B9     		cbnz	r5, .L304
1686:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2330              		.loc 1 1686 0 is_stmt 0 discriminator 1
 2331              	@ 1686 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2332 0086 62B6     		CPSIE i   
 2333              	
 2334              	@ 0 "" 2
 2335              		.thumb
 2336              	.L304:
1689:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 2337              		.loc 1 1689 0 is_stmt 1
 2338 0088 02B0     		add	sp, sp, #8
 2339              	.LCFI21:
 2340              		.cfi_def_cfa_offset 16
 2341              		@ sp needed
 2342 008a 70BD     		pop	{r4, r5, r6, pc}
 2343              	.LVL295:
 2344              	.L312:
 2345              		.align	2
 2346              	.L311:
 2347 008c 00000000 		.word	.LC0
 2348 0090 00000000 		.word	.LANCHOR11
 2349 0094 00000000 		.word	printf
 2350 0098 00000000 		.word	prvCopyDataFromQueue
 2351              		.cfi_endproc
 2352              	.LFE12:
 2354              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2355              		.align	1
 2356              		.global	uxQueueMessagesWaiting
 2357              		.thumb
 2358              		.thumb_func
 2360              	uxQueueMessagesWaiting:
 2361              	.LFB13:
1693:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxReturn;
 2362              		.loc 1 1693 0
 2363              		.cfi_startproc
 2364              		@ args = 0, pretend = 0, frame = 0
 2365              		@ frame_needed = 0, uses_anonymous_args = 0
 2366              	.LVL296:
 2367 0000 10B5     		push	{r4, lr}
 2368              	.LCFI22:
 2369              		.cfi_def_cfa_offset 8
 2370              		.cfi_offset 4, -8
 2371              		.cfi_offset 14, -4
1696:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2372              		.loc 1 1696 0
 2373 0002 0446     		mov	r4, r0
 2374 0004 58B9     		cbnz	r0, .L314
1696:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2375              		.loc 1 1696 0 is_stmt 0 discriminator 1
 2376              	@ 1696 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2377 0006 72B6     		CPSID i   
 2378 0008 BFF34F8F 	DSB       
 2379 000c BFF36F8F 	ISB         
 2380              	@ 0 "" 2
 2381              		.thumb
 2382 0010 0648     		ldr	r0, .L316
 2383              	.LVL297:
 2384 0012 4FF4D462 		mov	r2, #1696
 2385 0016 0649     		ldr	r1, .L316+4
 2386 0018 064B     		ldr	r3, .L316+8
 2387 001a 9847     		blx	r3
 2388              	.LVL298:
 2389              	.L315:
 2390 001c FEE7     		b	.L315
 2391              	.LVL299:
 2392              	.L314:
1698:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 2393              		.loc 1 1698 0 is_stmt 1
 2394 001e 064B     		ldr	r3, .L316+12
 2395 0020 9847     		blx	r3
 2396              	.LVL300:
1700:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 2397              		.loc 1 1700 0
 2398 0022 A46B     		ldr	r4, [r4, #56]
 2399              	.LVL301:
1702:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2400              		.loc 1 1702 0
 2401 0024 054B     		ldr	r3, .L316+16
 2402 0026 9847     		blx	r3
 2403              	.LVL302:
1705:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 2404              		.loc 1 1705 0
 2405 0028 2046     		mov	r0, r4
 2406 002a 10BD     		pop	{r4, pc}
 2407              	.LVL303:
 2408              	.L317:
 2409              		.align	2
 2410              	.L316:
 2411 002c 00000000 		.word	.LC0
 2412 0030 00000000 		.word	.LANCHOR12
 2413 0034 00000000 		.word	printf
 2414 0038 00000000 		.word	vPortEnterCritical
 2415 003c 00000000 		.word	vPortExitCritical
 2416              		.cfi_endproc
 2417              	.LFE13:
 2419              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2420              		.align	1
 2421              		.global	uxQueueSpacesAvailable
 2422              		.thumb
 2423              		.thumb_func
 2425              	uxQueueSpacesAvailable:
 2426              	.LFB14:
1709:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxReturn;
 2427              		.loc 1 1709 0
 2428              		.cfi_startproc
 2429              		@ args = 0, pretend = 0, frame = 0
 2430              		@ frame_needed = 0, uses_anonymous_args = 0
 2431              	.LVL304:
 2432 0000 38B5     		push	{r3, r4, r5, lr}
 2433              	.LCFI23:
 2434              		.cfi_def_cfa_offset 16
 2435              		.cfi_offset 3, -16
 2436              		.cfi_offset 4, -12
 2437              		.cfi_offset 5, -8
 2438              		.cfi_offset 14, -4
1714:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2439              		.loc 1 1714 0
 2440 0002 0546     		mov	r5, r0
 2441 0004 58B9     		cbnz	r0, .L319
1714:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2442              		.loc 1 1714 0 is_stmt 0 discriminator 1
 2443              	@ 1714 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2444 0006 72B6     		CPSID i   
 2445 0008 BFF34F8F 	DSB       
 2446 000c BFF36F8F 	ISB         
 2447              	@ 0 "" 2
 2448              		.thumb
 2449 0010 0748     		ldr	r0, .L321
 2450              	.LVL305:
 2451 0012 40F2B262 		movw	r2, #1714
 2452 0016 0749     		ldr	r1, .L321+4
 2453 0018 074B     		ldr	r3, .L321+8
 2454 001a 9847     		blx	r3
 2455              	.LVL306:
 2456              	.L320:
 2457 001c FEE7     		b	.L320
 2458              	.LVL307:
 2459              	.L319:
1716:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 2460              		.loc 1 1716 0 is_stmt 1
 2461 001e 074B     		ldr	r3, .L321+12
 2462 0020 9847     		blx	r3
 2463              	.LVL308:
1718:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 2464              		.loc 1 1718 0
 2465 0022 EB6B     		ldr	r3, [r5, #60]
 2466 0024 AC6B     		ldr	r4, [r5, #56]
 2467 0026 1C1B     		subs	r4, r3, r4
 2468              	.LVL309:
1720:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2469              		.loc 1 1720 0
 2470 0028 054B     		ldr	r3, .L321+16
 2471 002a 9847     		blx	r3
 2472              	.LVL310:
1723:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 2473              		.loc 1 1723 0
 2474 002c 2046     		mov	r0, r4
 2475 002e 38BD     		pop	{r3, r4, r5, pc}
 2476              	.LVL311:
 2477              	.L322:
 2478              		.align	2
 2479              	.L321:
 2480 0030 00000000 		.word	.LC0
 2481 0034 00000000 		.word	.LANCHOR13
 2482 0038 00000000 		.word	printf
 2483 003c 00000000 		.word	vPortEnterCritical
 2484 0040 00000000 		.word	vPortExitCritical
 2485              		.cfi_endproc
 2486              	.LFE14:
 2488              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2489              		.align	1
 2490              		.global	uxQueueMessagesWaitingFromISR
 2491              		.thumb
 2492              		.thumb_func
 2494              	uxQueueMessagesWaitingFromISR:
 2495              	.LFB15:
1727:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** UBaseType_t uxReturn;
 2496              		.loc 1 1727 0
 2497              		.cfi_startproc
 2498              		@ args = 0, pretend = 0, frame = 0
 2499              		@ frame_needed = 0, uses_anonymous_args = 0
 2500              	.LVL312:
 2501 0000 08B5     		push	{r3, lr}
 2502              	.LCFI24:
 2503              		.cfi_def_cfa_offset 8
 2504              		.cfi_offset 3, -8
 2505              		.cfi_offset 14, -4
1730:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2506              		.loc 1 1730 0
 2507 0002 58B9     		cbnz	r0, .L324
1730:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2508              		.loc 1 1730 0 is_stmt 0 discriminator 1
 2509              	@ 1730 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2510 0004 72B6     		CPSID i   
 2511 0006 BFF34F8F 	DSB       
 2512 000a BFF36F8F 	ISB         
 2513              	@ 0 "" 2
 2514              		.thumb
 2515 000e 0448     		ldr	r0, .L326
 2516              	.LVL313:
 2517 0010 40F2C262 		movw	r2, #1730
 2518 0014 0349     		ldr	r1, .L326+4
 2519 0016 044B     		ldr	r3, .L326+8
 2520 0018 9847     		blx	r3
 2521              	.LVL314:
 2522              	.L325:
 2523 001a FEE7     		b	.L325
 2524              	.LVL315:
 2525              	.L324:
1732:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2526              		.loc 1 1732 0 is_stmt 1
 2527 001c 806B     		ldr	r0, [r0, #56]
 2528              	.LVL316:
1735:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 2529              		.loc 1 1735 0
 2530 001e 08BD     		pop	{r3, pc}
 2531              	.L327:
 2532              		.align	2
 2533              	.L326:
 2534 0020 00000000 		.word	.LC0
 2535 0024 00000000 		.word	.LANCHOR14
 2536 0028 00000000 		.word	printf
 2537              		.cfi_endproc
 2538              	.LFE15:
 2540              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 2541              		.align	1
 2542              		.global	uxQueueGetQueueNumber
 2543              		.thumb
 2544              		.thumb_func
 2546              	uxQueueGetQueueNumber:
 2547              	.LFB17:
1757:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 2548              		.loc 1 1757 0
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 0
 2551              		@ frame_needed = 0, uses_anonymous_args = 0
 2552              		@ link register save eliminated.
 2553              	.LVL317:
1759:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2554              		.loc 1 1759 0
 2555 0000 C06C     		ldr	r0, [r0, #76]
 2556              	.LVL318:
 2557 0002 7047     		bx	lr
 2558              		.cfi_endproc
 2559              	.LFE17:
 2561              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 2562              		.align	1
 2563              		.global	vQueueSetQueueNumber
 2564              		.thumb
 2565              		.thumb_func
 2567              	vQueueSetQueueNumber:
 2568              	.LFB18:
1767:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 2569              		.loc 1 1767 0
 2570              		.cfi_startproc
 2571              		@ args = 0, pretend = 0, frame = 0
 2572              		@ frame_needed = 0, uses_anonymous_args = 0
 2573              		@ link register save eliminated.
 2574              	.LVL319:
1768:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 2575              		.loc 1 1768 0
 2576 0000 C164     		str	r1, [r0, #76]
 2577 0002 7047     		bx	lr
 2578              		.cfi_endproc
 2579              	.LFE18:
 2581              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 2582              		.align	1
 2583              		.global	ucQueueGetQueueType
 2584              		.thumb
 2585              		.thumb_func
 2587              	ucQueueGetQueueType:
 2588              	.LFB19:
1777:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 2589              		.loc 1 1777 0
 2590              		.cfi_startproc
 2591              		@ args = 0, pretend = 0, frame = 0
 2592              		@ frame_needed = 0, uses_anonymous_args = 0
 2593              		@ link register save eliminated.
 2594              	.LVL320:
1779:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2595              		.loc 1 1779 0
 2596 0000 90F85000 		ldrb	r0, [r0, #80]	@ zero_extendqisi2
 2597              	.LVL321:
 2598 0004 7047     		bx	lr
 2599              		.cfi_endproc
 2600              	.LFE19:
 2602              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2603              		.align	1
 2604              		.global	xQueueIsQueueEmptyFromISR
 2605              		.thumb
 2606              		.thumb_func
 2608              	xQueueIsQueueEmptyFromISR:
 2609              	.LFB24:
2013:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
 2610              		.loc 1 2013 0
 2611              		.cfi_startproc
 2612              		@ args = 0, pretend = 0, frame = 0
 2613              		@ frame_needed = 0, uses_anonymous_args = 0
 2614              	.LVL322:
 2615 0000 08B5     		push	{r3, lr}
 2616              	.LCFI25:
 2617              		.cfi_def_cfa_offset 8
 2618              		.cfi_offset 3, -8
 2619              		.cfi_offset 14, -4
2016:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 2620              		.loc 1 2016 0
 2621 0002 58B9     		cbnz	r0, .L332
2016:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 2622              		.loc 1 2016 0 is_stmt 0 discriminator 1
 2623              	@ 2016 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2624 0004 72B6     		CPSID i   
 2625 0006 BFF34F8F 	DSB       
 2626 000a BFF36F8F 	ISB         
 2627              	@ 0 "" 2
 2628              		.thumb
 2629 000e 0648     		ldr	r0, .L334
 2630              	.LVL323:
 2631 0010 4FF4FC62 		mov	r2, #2016
 2632 0014 0549     		ldr	r1, .L334+4
 2633 0016 064B     		ldr	r3, .L334+8
 2634 0018 9847     		blx	r3
 2635              	.LVL324:
 2636              	.L333:
 2637 001a FEE7     		b	.L333
 2638              	.LVL325:
 2639              	.L332:
2017:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 2640              		.loc 1 2017 0 is_stmt 1
 2641 001c 806B     		ldr	r0, [r0, #56]
 2642              	.LVL326:
2027:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
 2643              		.loc 1 2027 0
 2644 001e B0FA80F0 		clz	r0, r0
 2645              	.LVL327:
 2646 0022 4009     		lsrs	r0, r0, #5
 2647 0024 08BD     		pop	{r3, pc}
 2648              	.L335:
 2649 0026 00BF     		.align	2
 2650              	.L334:
 2651 0028 00000000 		.word	.LC0
 2652 002c 00000000 		.word	.LANCHOR15
 2653 0030 00000000 		.word	printf
 2654              		.cfi_endproc
 2655              	.LFE24:
 2657              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2658              		.align	1
 2659              		.global	xQueueIsQueueFullFromISR
 2660              		.thumb
 2661              		.thumb_func
 2663              	xQueueIsQueueFullFromISR:
 2664              	.LFB26:
2046:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2047:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return xReturn;
2048:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
2049:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
2050:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2051:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2052:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** {
 2665              		.loc 1 2052 0
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              	.LVL328:
 2670 0000 08B5     		push	{r3, lr}
 2671              	.LCFI26:
 2672              		.cfi_def_cfa_offset 8
 2673              		.cfi_offset 3, -8
 2674              		.cfi_offset 14, -4
2053:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** BaseType_t xReturn;
2054:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2055:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	configASSERT( xQueue );
 2675              		.loc 1 2055 0
 2676 0002 58B9     		cbnz	r0, .L337
 2677              		.loc 1 2055 0 is_stmt 0 discriminator 1
 2678              	@ 2055 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2679 0004 72B6     		CPSID i   
 2680 0006 BFF34F8F 	DSB       
 2681 000a BFF36F8F 	ISB         
 2682              	@ 0 "" 2
 2683              		.thumb
 2684 000e 0648     		ldr	r0, .L339
 2685              	.LVL329:
 2686 0010 40F60702 		movw	r2, #2055
 2687 0014 0549     		ldr	r1, .L339+4
 2688 0016 064B     		ldr	r3, .L339+8
 2689 0018 9847     		blx	r3
 2690              	.LVL330:
 2691              	.L338:
 2692 001a FEE7     		b	.L338
 2693              	.LVL331:
 2694              	.L337:
2056:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2695              		.loc 1 2056 0 is_stmt 1
 2696 001c 826B     		ldr	r2, [r0, #56]
 2697              	.LVL332:
 2698 001e C06B     		ldr	r0, [r0, #60]
 2699              	.LVL333:
2057:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
2058:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		xReturn = pdTRUE;
2059:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2060:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	else
2061:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
2062:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		xReturn = pdFALSE;
2063:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2064:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2065:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	return xReturn;
2066:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2700              		.loc 1 2066 0
 2701 0020 131A     		subs	r3, r2, r0
 2702 0022 5842     		rsbs	r0, r3, #0
 2703              	.LVL334:
 2704 0024 5841     		adcs	r0, r0, r3
 2705 0026 08BD     		pop	{r3, pc}
 2706              	.L340:
 2707              		.align	2
 2708              	.L339:
 2709 0028 00000000 		.word	.LC0
 2710 002c 00000000 		.word	.LANCHOR16
 2711 0030 00000000 		.word	printf
 2712              		.cfi_endproc
 2713              	.LFE26:
 2715              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2716              		.align	1
 2717              		.global	vQueueAddToRegistry
 2718              		.thumb
 2719              		.thumb_func
 2721              	vQueueAddToRegistry:
 2722              	.LFB27:
2067:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
2068:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2069:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2070:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2071:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2072:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
2073:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xReturn;
2074:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2075:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2076:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2077:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2078:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2079:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2080:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2081:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2082:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2083:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2084:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				posting? */
2085:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2086:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2087:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2088:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return indicating that we need to block. */
2089:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2090:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					portENABLE_INTERRUPTS();
2091:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return errQUEUE_BLOCKED;
2092:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2093:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
2094:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2095:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					portENABLE_INTERRUPTS();
2096:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return errQUEUE_FULL;
2097:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2098:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2099:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2100:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		portENABLE_INTERRUPTS();
2101:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2102:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2103:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2104:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2105:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2106:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2107:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2108:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				xReturn = pdPASS;
2109:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2110:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2111:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2112:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2113:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2114:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					into the ready list as we are within a critical section.
2115:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2116:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					the event were caused from within an interrupt. */
2117:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2118:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
2119:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2120:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						that a yield might be appropriate. */
2121:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2122:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
2123:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
2124:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
2125:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2126:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
2127:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2128:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
2129:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2130:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2131:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2132:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2133:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
2134:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2135:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2136:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2137:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2138:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		portENABLE_INTERRUPTS();
2139:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2140:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return xReturn;
2141:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2142:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2143:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2144:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
2145:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2146:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2147:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2148:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2149:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
2150:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xReturn;
2151:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2152:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2153:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2154:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2155:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2156:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2157:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2158:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2159:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2160:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2161:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				leave with nothing? */
2162:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2163:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2164:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2165:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					indicating that we need to block. */
2166:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2167:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					portENABLE_INTERRUPTS();
2168:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return errQUEUE_BLOCKED;
2169:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2170:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
2171:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2172:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					portENABLE_INTERRUPTS();
2173:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					return errQUEUE_FULL;
2174:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2175:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2176:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
2177:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2178:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2179:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2180:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2181:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		portENABLE_INTERRUPTS();
2182:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2183:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2184:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2185:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2186:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2187:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Data is available from the queue. */
2188:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2189:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2190:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2191:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2192:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2193:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
2194:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2195:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2196:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2197:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2198:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2199:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2200:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				xReturn = pdPASS;
2201:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2202:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2203:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2204:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2205:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2206:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					into the ready list as we are within a critical section.
2207:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2208:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					the event were caused from within an interrupt. */
2209:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2210:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
2211:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2212:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
2213:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
2214:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
2215:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2216:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
2217:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2218:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
2219:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2220:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2221:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2222:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2223:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
2224:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2225:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				xReturn = pdFAIL;
2226:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2227:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2228:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		portENABLE_INTERRUPTS();
2229:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2230:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return xReturn;
2231:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2232:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2233:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2234:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
2235:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2236:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2237:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2238:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2239:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
2240:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2241:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2242:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2243:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		exit without doing anything. */
2244:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2245:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2246:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2247:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2248:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2249:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			co-routine has not already been woken. */
2250:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2251:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2252:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2253:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2254:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2255:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
2256:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						return pdTRUE;
2257:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
2258:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
2259:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
2260:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2261:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
2262:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2263:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
2264:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2265:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2266:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2267:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2268:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
2269:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2270:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2271:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2272:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2273:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
2274:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2275:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2276:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2277:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2278:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2279:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2280:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2281:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2282:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
2283:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2284:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2285:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2286:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2287:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
2288:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	BaseType_t xReturn;
2289:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2290:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2291:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2292:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		not then just leave without doing anything. */
2293:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2294:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2295:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* Copy the data from the queue. */
2296:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2297:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2298:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2299:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2300:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2301:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
2302:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2303:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2304:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2305:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2306:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2307:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2308:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2309:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2310:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2311:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2312:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2313:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
2314:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2315:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
2316:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					else
2317:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					{
2318:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2319:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					}
2320:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2321:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				else
2322:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				{
2323:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2324:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				}
2325:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2326:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
2327:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2328:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2329:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2330:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2331:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdPASS;
2332:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2333:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
2334:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2335:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			xReturn = pdFAIL;
2336:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2337:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2338:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		return xReturn;
2339:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2340:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2341:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2342:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
2343:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2344:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2345:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2346:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2347:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 2723              		.loc 1 2347 0
 2724              		.cfi_startproc
 2725              		@ args = 0, pretend = 0, frame = 0
 2726              		@ frame_needed = 0, uses_anonymous_args = 0
 2727              	.LVL335:
2348:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	UBaseType_t ux;
2349:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2350:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2351:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		a free slot. */
2352:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2728              		.loc 1 2352 0
 2729 0000 0023     		movs	r3, #0
2347:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	UBaseType_t ux;
 2730              		.loc 1 2347 0
 2731 0002 30B5     		push	{r4, r5, lr}
 2732              	.LCFI27:
 2733              		.cfi_def_cfa_offset 12
 2734              		.cfi_offset 4, -12
 2735              		.cfi_offset 5, -8
 2736              		.cfi_offset 14, -4
 2737              	.LVL336:
 2738              	.L344:
2353:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2354:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2739              		.loc 1 2354 0
 2740 0004 064C     		ldr	r4, .L346
 2741 0006 DA00     		lsls	r2, r3, #3
 2742 0008 54F83350 		ldr	r5, [r4, r3, lsl #3]
 2743 000c 25B9     		cbnz	r5, .L342
2355:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2356:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Store the information on this queue. */
2357:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2744              		.loc 1 2357 0
 2745 000e 44F83310 		str	r1, [r4, r3, lsl #3]
2358:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2746              		.loc 1 2358 0
 2747 0012 A318     		adds	r3, r4, r2
 2748              	.LVL337:
 2749 0014 5860     		str	r0, [r3, #4]
2359:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2360:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2361:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				break;
 2750              		.loc 1 2361 0
 2751 0016 30BD     		pop	{r4, r5, pc}
 2752              	.LVL338:
 2753              	.L342:
2352:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 2754              		.loc 1 2352 0 discriminator 2
 2755 0018 0133     		adds	r3, r3, #1
 2756              	.LVL339:
 2757 001a 082B     		cmp	r3, #8
 2758 001c F2D1     		bne	.L344
 2759 001e 30BD     		pop	{r4, r5, pc}
 2760              	.L347:
 2761              		.align	2
 2762              	.L346:
 2763 0020 00000000 		.word	.LANCHOR17
 2764              		.cfi_endproc
 2765              	.LFE27:
 2767              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2768              		.align	1
 2769              		.global	vQueueUnregisterQueue
 2770              		.thumb
 2771              		.thumb_func
 2773              	vQueueUnregisterQueue:
 2774              	.LFB28:
2362:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2363:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
2364:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2365:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2366:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2367:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2368:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
2369:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2370:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2371:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
2372:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2373:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2374:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2375:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2376:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 2775              		.loc 1 2376 0
 2776              		.cfi_startproc
 2777              		@ args = 0, pretend = 0, frame = 0
 2778              		@ frame_needed = 0, uses_anonymous_args = 0
 2779              		@ link register save eliminated.
 2780              	.LVL340:
2377:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	UBaseType_t ux;
2378:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2379:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2380:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		registry. */
2381:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2781              		.loc 1 2381 0
 2782 0000 0023     		movs	r3, #0
 2783              	.LVL341:
 2784              	.L351:
 2785 0002 074A     		ldr	r2, .L353
 2786 0004 02EBC301 		add	r1, r2, r3, lsl #3
2382:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2383:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2787              		.loc 1 2383 0
 2788 0008 4968     		ldr	r1, [r1, #4]
 2789 000a 8142     		cmp	r1, r0
 2790 000c 03D1     		bne	.L349
2384:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2385:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2386:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2791              		.loc 1 2386 0
 2792 000e 0021     		movs	r1, #0
 2793 0010 42F83310 		str	r1, [r2, r3, lsl #3]
2387:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				break;
 2794              		.loc 1 2387 0
 2795 0014 7047     		bx	lr
 2796              	.L349:
2381:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
 2797              		.loc 1 2381 0 discriminator 2
 2798 0016 0133     		adds	r3, r3, #1
 2799              	.LVL342:
 2800 0018 082B     		cmp	r3, #8
 2801 001a F2D1     		bne	.L351
 2802 001c 7047     		bx	lr
 2803              	.L354:
 2804 001e 00BF     		.align	2
 2805              	.L353:
 2806 0020 00000000 		.word	.LANCHOR17
 2807              		.cfi_endproc
 2808              	.LFE28:
 2810              		.section	.text.vQueueDelete,"ax",%progbits
 2811              		.align	1
 2812              		.global	vQueueDelete
 2813              		.thumb
 2814              		.thumb_func
 2816              	vQueueDelete:
 2817              	.LFB16:
1739:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2818              		.loc 1 1739 0
 2819              		.cfi_startproc
 2820              		@ args = 0, pretend = 0, frame = 0
 2821              		@ frame_needed = 0, uses_anonymous_args = 0
 2822              	.LVL343:
 2823 0000 10B5     		push	{r4, lr}
 2824              	.LCFI28:
 2825              		.cfi_def_cfa_offset 8
 2826              		.cfi_offset 4, -8
 2827              		.cfi_offset 14, -4
1742:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2828              		.loc 1 1742 0
 2829 0002 0446     		mov	r4, r0
 2830 0004 58B9     		cbnz	r0, .L356
1742:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
 2831              		.loc 1 1742 0 is_stmt 0 discriminator 1
 2832              	@ 1742 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c" 1
 2833 0006 72B6     		CPSID i   
 2834 0008 BFF34F8F 	DSB       
 2835 000c BFF36F8F 	ISB         
 2836              	@ 0 "" 2
 2837              		.thumb
 2838 0010 0748     		ldr	r0, .L358
 2839              	.LVL344:
 2840 0012 40F2CE62 		movw	r2, #1742
 2841 0016 0749     		ldr	r1, .L358+4
 2842 0018 074B     		ldr	r3, .L358+8
 2843 001a 9847     		blx	r3
 2844              	.LVL345:
 2845              	.L357:
 2846 001c FEE7     		b	.L357
 2847              	.LVL346:
 2848              	.L356:
1747:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	}
 2849              		.loc 1 1747 0 is_stmt 1
 2850 001e 074B     		ldr	r3, .L358+12
 2851 0020 9847     		blx	r3
 2852              	.LVL347:
1750:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** }
 2853              		.loc 1 1750 0
 2854 0022 2046     		mov	r0, r4
 2855 0024 0349     		ldr	r1, .L358+4
 2856 0026 40F2D662 		movw	r2, #1750
 2857 002a 054B     		ldr	r3, .L358+16
 2858 002c 9847     		blx	r3
 2859              	.LVL348:
 2860 002e 10BD     		pop	{r4, pc}
 2861              	.LVL349:
 2862              	.L359:
 2863              		.align	2
 2864              	.L358:
 2865 0030 00000000 		.word	.LC0
 2866 0034 00000000 		.word	.LANCHOR18
 2867 0038 00000000 		.word	printf
 2868 003c 00000000 		.word	vQueueUnregisterQueue
 2869 0040 00000000 		.word	vPortFree1
 2870              		.cfi_endproc
 2871              	.LFE16:
 2873              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 2874              		.align	1
 2875              		.global	vQueueWaitForMessageRestricted
 2876              		.thumb
 2877              		.thumb_func
 2879              	vQueueWaitForMessageRestricted:
 2880              	.LFB29:
2388:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2389:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			else
2390:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			{
2391:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2392:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			}
2393:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2394:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2395:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2396:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2397:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2398:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** /*-----------------------------------------------------------*/
2399:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2400:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** #if ( configUSE_TIMERS == 1 )
2401:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2402:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2403:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	{
 2881              		.loc 1 2403 0
 2882              		.cfi_startproc
 2883              		@ args = 0, pretend = 0, frame = 0
 2884              		@ frame_needed = 0, uses_anonymous_args = 0
 2885              	.LVL350:
 2886 0000 70B5     		push	{r4, r5, r6, lr}
 2887              	.LCFI29:
 2888              		.cfi_def_cfa_offset 16
 2889              		.cfi_offset 4, -16
 2890              		.cfi_offset 5, -12
 2891              		.cfi_offset 6, -8
 2892              		.cfi_offset 14, -4
 2893              		.loc 1 2403 0
 2894 0002 0446     		mov	r4, r0
 2895              	.LVL351:
 2896 0004 0E46     		mov	r6, r1
2404:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2405:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2406:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* This function should not be called by application code hence the
2407:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2408:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2409:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		It can result in vListInsert() being called on a list that can only
2410:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2411:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2412:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		section. */
2413:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 
2414:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2415:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2416:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2417:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2418:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
2419:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2420:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		prvLockQueue( pxQueue );
 2897              		.loc 1 2420 0
 2898 0006 0D4B     		ldr	r3, .L364
2403:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2899              		.loc 1 2403 0
 2900 0008 1546     		mov	r5, r2
 2901              		.loc 1 2420 0
 2902 000a 9847     		blx	r3
 2903              	.LVL352:
 2904 000c 636C     		ldr	r3, [r4, #68]
 2905 000e 0133     		adds	r3, r3, #1
 2906 0010 04BF     		itt	eq
 2907 0012 0023     		moveq	r3, #0
 2908 0014 6364     		streq	r3, [r4, #68]
 2909 0016 A36C     		ldr	r3, [r4, #72]
 2910 0018 0133     		adds	r3, r3, #1
 2911 001a 04BF     		itt	eq
 2912 001c 0023     		moveq	r3, #0
 2913 001e A364     		streq	r3, [r4, #72]
 2914 0020 074B     		ldr	r3, .L364+4
 2915 0022 9847     		blx	r3
 2916              	.LVL353:
2421:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 2917              		.loc 1 2421 0
 2918 0024 A36B     		ldr	r3, [r4, #56]
 2919 0026 2BB9     		cbnz	r3, .L363
2422:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2423:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2424:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
 2920              		.loc 1 2424 0
 2921 0028 04F12400 		add	r0, r4, #36
 2922 002c 3146     		mov	r1, r6
 2923 002e 2A46     		mov	r2, r5
 2924 0030 044B     		ldr	r3, .L364+8
 2925 0032 9847     		blx	r3
 2926              	.LVL354:
 2927              	.L363:
2425:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2426:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		else
2427:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		{
2428:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2429:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		}
2430:/home/tienluong/workspace/atlantis_fw/platform/os/Source/queue.c **** 		prvUnlockQueue( pxQueue );
 2928              		.loc 1 2430 0
 2929 0034 2046     		mov	r0, r4
 2930 0036 044B     		ldr	r3, .L364+12
 2931 0038 9847     		blx	r3
 2932              	.LVL355:
 2933 003a 70BD     		pop	{r4, r5, r6, pc}
 2934              	.LVL356:
 2935              	.L365:
 2936              		.align	2
 2937              	.L364:
 2938 003c 00000000 		.word	vPortEnterCritical
 2939 0040 00000000 		.word	vPortExitCritical
 2940 0044 00000000 		.word	vTaskPlaceOnEventListRestricted
 2941 0048 00000000 		.word	prvUnlockQueue
 2942              		.cfi_endproc
 2943              	.LFE29:
 2945              		.global	xQueueRegistry
 2946              		.section	.rodata.__FUNCTION__.6074,"a",%progbits
 2947              		.set	.LANCHOR1,. + 0
 2950              	__FUNCTION__.6074:
 2951 0000 78517565 		.ascii	"xQueueGenericCreate\000"
 2951      75654765 
 2951      6E657269 
 2951      63437265 
 2951      61746500 
 2952              		.section	.rodata.__FUNCTION__.6081,"a",%progbits
 2953              		.set	.LANCHOR4,. + 0
 2956              	__FUNCTION__.6081:
 2957 0000 78517565 		.ascii	"xQueueCreateMutex\000"
 2957      75654372 
 2957      65617465 
 2957      4D757465 
 2957      7800
 2958              		.section	.rodata.__FUNCTION__.6188,"a",%progbits
 2959              		.set	.LANCHOR12,. + 0
 2962              	__FUNCTION__.6188:
 2963 0000 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 2963      6575654D 
 2963      65737361 
 2963      67657357 
 2963      61697469 
 2964              		.section	.bss.xQueueRegistry,"aw",%nobits
 2965              		.align	2
 2966              		.set	.LANCHOR17,. + 0
 2969              	xQueueRegistry:
 2970 0000 00000000 		.space	64
 2970      00000000 
 2970      00000000 
 2970      00000000 
 2970      00000000 
 2971              		.section	.rodata.__FUNCTION__.6195,"a",%progbits
 2972              		.set	.LANCHOR13,. + 0
 2975              	__FUNCTION__.6195:
 2976 0000 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 2976      65756553 
 2976      70616365 
 2976      73417661 
 2976      696C6162 
 2977              		.section	.rodata.__FUNCTION__.6246,"a",%progbits
 2978              		.set	.LANCHOR15,. + 0
 2981              	__FUNCTION__.6246:
 2982 0000 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 2982      75654973 
 2982      51756575 
 2982      65456D70 
 2982      74794672 
 2983              		.section	.rodata.__FUNCTION__.6087,"a",%progbits
 2984              		.set	.LANCHOR5,. + 0
 2987              	__FUNCTION__.6087:
 2988 0000 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 2988      75654769 
 2988      76654D75 
 2988      74657852 
 2988      65637572 
 2989              		.section	.rodata.__FUNCTION__.6095,"a",%progbits
 2990              		.set	.LANCHOR9,. + 0
 2993              	__FUNCTION__.6095:
 2994 0000 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 2994      75655461 
 2994      6B654D75 
 2994      74657852 
 2994      65637572 
 2995              		.section	.rodata.__FUNCTION__.6201,"a",%progbits
 2996              		.set	.LANCHOR14,. + 0
 2999              	__FUNCTION__.6201:
 3000 0000 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 3000      6575654D 
 3000      65737361 
 3000      67657357 
 3000      61697469 
 3001              		.section	.rodata.str1.1,"aMS",%progbits,1
 3002              	.LC0:
 3003 0000 0D0A5B25 		.ascii	"\015\012[%s: %d]: Invalid argument!\015\012\000"
 3003      733A2025 
 3003      645D3A20 
 3003      496E7661 
 3003      6C696420 
 3004              		.section	.rodata.__FUNCTION__.6256,"a",%progbits
 3005              		.set	.LANCHOR16,. + 0
 3008              	__FUNCTION__.6256:
 3009 0000 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 3009      75654973 
 3009      51756575 
 3009      6546756C 
 3009      6C46726F 
 3010              		.section	.rodata.__FUNCTION__.6131,"a",%progbits
 3011              		.set	.LANCHOR6,. + 0
 3014              	__FUNCTION__.6131:
 3015 0000 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 3015      75654765 
 3015      6E657269 
 3015      6353656E 
 3015      6446726F 
 3016              		.section	.rodata.__FUNCTION__.6156,"a",%progbits
 3017              		.set	.LANCHOR8,. + 0
 3020              	__FUNCTION__.6156:
 3021 0000 78517565 		.ascii	"xQueueGenericReceive\000"
 3021      75654765 
 3021      6E657269 
 3021      63526563 
 3021      65697665 
 3022              		.section	.rodata.__FUNCTION__.6207,"a",%progbits
 3023              		.set	.LANCHOR18,. + 0
 3026              	__FUNCTION__.6207:
 3027 0000 76517565 		.ascii	"vQueueDelete\000"
 3027      75654465 
 3027      6C657465 
 3027      00
 3028              		.section	.rodata.__FUNCTION__.6102,"a",%progbits
 3029              		.set	.LANCHOR2,. + 0
 3032              	__FUNCTION__.6102:
 3033 0000 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 3033      75654372 
 3033      65617465 
 3033      436F756E 
 3033      74696E67 
 3034              		.section	.rodata.__FUNCTION__.6180,"a",%progbits
 3035              		.set	.LANCHOR11,. + 0
 3038              	__FUNCTION__.6180:
 3039 0000 78517565 		.ascii	"xQueuePeekFromISR\000"
 3039      75655065 
 3039      656B4672 
 3039      6F6D4953 
 3039      5200
 3040              		.section	.rodata.__FUNCTION__.6142,"a",%progbits
 3041              		.set	.LANCHOR7,. + 0
 3044              	__FUNCTION__.6142:
 3045 0000 78517565 		.ascii	"xQueueGiveFromISR\000"
 3045      75654769 
 3045      76654672 
 3045      6F6D4953 
 3045      5200
 3046              		.section	.rodata.__FUNCTION__.6169,"a",%progbits
 3047              		.set	.LANCHOR10,. + 0
 3050              	__FUNCTION__.6169:
 3051 0000 78517565 		.ascii	"xQueueReceiveFromISR\000"
 3051      75655265 
 3051      63656976 
 3051      6546726F 
 3051      6D495352 
 3052              		.section	.rodata.__FUNCTION__.6064,"a",%progbits
 3053              		.set	.LANCHOR0,. + 0
 3056              	__FUNCTION__.6064:
 3057 0000 78517565 		.ascii	"xQueueGenericReset\000"
 3057      75654765 
 3057      6E657269 
 3057      63526573 
 3057      657400
 3058              		.section	.rodata.__FUNCTION__.6116,"a",%progbits
 3059              		.set	.LANCHOR3,. + 0
 3062              	__FUNCTION__.6116:
 3063 0000 78517565 		.ascii	"xQueueGenericSend\000"
 3063      75654765 
 3063      6E657269 
 3063      6353656E 
 3063      6400
 3064              		.text
 3065              	.Letext0:
 3066              		.file 3 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h
 3067              		.file 4 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/machine/_default_types
 3068              		.file 5 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/stdint.h"
 3069              		.file 6 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/include/list.h"
 3070              		.file 7 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/include/task.h"
 3071              		.file 8 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/include/queue.h"
DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
     /tmp/ccsFtCOD.s:19     .text.prvCopyDataToQueue:00000000 $t
     /tmp/ccsFtCOD.s:23     .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
     /tmp/ccsFtCOD.s:137    .text.prvCopyDataToQueue:0000006c $d
     /tmp/ccsFtCOD.s:143    .text.prvCopyDataFromQueue:00000000 $t
     /tmp/ccsFtCOD.s:147    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
     /tmp/ccsFtCOD.s:190    .text.prvCopyDataFromQueue:00000024 $d
     /tmp/ccsFtCOD.s:195    .text.prvUnlockQueue:00000000 $t
     /tmp/ccsFtCOD.s:199    .text.prvUnlockQueue:00000000 prvUnlockQueue
     /tmp/ccsFtCOD.s:294    .text.prvUnlockQueue:00000060 $d
     /tmp/ccsFtCOD.s:302    .text.xQueueGenericReset:00000000 $t
     /tmp/ccsFtCOD.s:307    .text.xQueueGenericReset:00000000 xQueueGenericReset
     /tmp/ccsFtCOD.s:421    .text.xQueueGenericReset:00000074 $d
     /tmp/ccsFtCOD.s:432    .text.xQueueGenericCreate:00000000 $t
     /tmp/ccsFtCOD.s:437    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
     /tmp/ccsFtCOD.s:563    .text.xQueueGenericCreate:00000078 $d
     /tmp/ccsFtCOD.s:572    .text.xQueueCreateCountingSemaphore:00000000 $t
     /tmp/ccsFtCOD.s:577    .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
     /tmp/ccsFtCOD.s:669    .text.xQueueCreateCountingSemaphore:00000060 $d
     /tmp/ccsFtCOD.s:677    .text.xQueueGenericSend:00000000 $t
     /tmp/ccsFtCOD.s:682    .text.xQueueGenericSend:00000000 xQueueGenericSend
     /tmp/ccsFtCOD.s:997    .text.xQueueGenericSend:00000154 $d
     /tmp/ccsFtCOD.s:1015   .text.xQueueCreateMutex:00000000 $t
     /tmp/ccsFtCOD.s:1020   .text.xQueueCreateMutex:00000000 xQueueCreateMutex
     /tmp/ccsFtCOD.s:1101   .text.xQueueCreateMutex:00000058 $d
     /tmp/ccsFtCOD.s:1109   .text.xQueueGiveMutexRecursive:00000000 $t
     /tmp/ccsFtCOD.s:1114   .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
     /tmp/ccsFtCOD.s:1186   .text.xQueueGiveMutexRecursive:00000044 $d
     /tmp/ccsFtCOD.s:1195   .text.xQueueGenericSendFromISR:00000000 $t
     /tmp/ccsFtCOD.s:1200   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
     /tmp/ccsFtCOD.s:1387   .text.xQueueGenericSendFromISR:000000bc $d
     /tmp/ccsFtCOD.s:1396   .text.xQueueGiveFromISR:00000000 $t
     /tmp/ccsFtCOD.s:1401   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
     /tmp/ccsFtCOD.s:1578   .text.xQueueGiveFromISR:000000b4 $d
     /tmp/ccsFtCOD.s:1586   .text.xQueueGenericReceive:00000000 $t
     /tmp/ccsFtCOD.s:1591   .text.xQueueGenericReceive:00000000 xQueueGenericReceive
     /tmp/ccsFtCOD.s:1917   .text.xQueueGenericReceive:00000158 $d
     /tmp/ccsFtCOD.s:1937   .text.xQueueTakeMutexRecursive:00000000 $t
     /tmp/ccsFtCOD.s:1942   .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
     /tmp/ccsFtCOD.s:2020   .text.xQueueTakeMutexRecursive:0000004c $d
     /tmp/ccsFtCOD.s:2029   .text.xQueueReceiveFromISR:00000000 $t
     /tmp/ccsFtCOD.s:2034   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
     /tmp/ccsFtCOD.s:2183   .text.xQueueReceiveFromISR:00000094 $d
     /tmp/ccsFtCOD.s:2192   .text.xQueuePeekFromISR:00000000 $t
     /tmp/ccsFtCOD.s:2197   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
     /tmp/ccsFtCOD.s:2347   .text.xQueuePeekFromISR:0000008c $d
     /tmp/ccsFtCOD.s:2355   .text.uxQueueMessagesWaiting:00000000 $t
     /tmp/ccsFtCOD.s:2360   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
     /tmp/ccsFtCOD.s:2411   .text.uxQueueMessagesWaiting:0000002c $d
     /tmp/ccsFtCOD.s:2420   .text.uxQueueSpacesAvailable:00000000 $t
     /tmp/ccsFtCOD.s:2425   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
     /tmp/ccsFtCOD.s:2480   .text.uxQueueSpacesAvailable:00000030 $d
     /tmp/ccsFtCOD.s:2489   .text.uxQueueMessagesWaitingFromISR:00000000 $t
     /tmp/ccsFtCOD.s:2494   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
     /tmp/ccsFtCOD.s:2534   .text.uxQueueMessagesWaitingFromISR:00000020 $d
     /tmp/ccsFtCOD.s:2541   .text.uxQueueGetQueueNumber:00000000 $t
     /tmp/ccsFtCOD.s:2546   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
     /tmp/ccsFtCOD.s:2562   .text.vQueueSetQueueNumber:00000000 $t
     /tmp/ccsFtCOD.s:2567   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
     /tmp/ccsFtCOD.s:2582   .text.ucQueueGetQueueType:00000000 $t
     /tmp/ccsFtCOD.s:2587   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
     /tmp/ccsFtCOD.s:2603   .text.xQueueIsQueueEmptyFromISR:00000000 $t
     /tmp/ccsFtCOD.s:2608   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
     /tmp/ccsFtCOD.s:2651   .text.xQueueIsQueueEmptyFromISR:00000028 $d
     /tmp/ccsFtCOD.s:2658   .text.xQueueIsQueueFullFromISR:00000000 $t
     /tmp/ccsFtCOD.s:2663   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
     /tmp/ccsFtCOD.s:2709   .text.xQueueIsQueueFullFromISR:00000028 $d
     /tmp/ccsFtCOD.s:2716   .text.vQueueAddToRegistry:00000000 $t
     /tmp/ccsFtCOD.s:2721   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
     /tmp/ccsFtCOD.s:2763   .text.vQueueAddToRegistry:00000020 $d
     /tmp/ccsFtCOD.s:2768   .text.vQueueUnregisterQueue:00000000 $t
     /tmp/ccsFtCOD.s:2773   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
     /tmp/ccsFtCOD.s:2806   .text.vQueueUnregisterQueue:00000020 $d
     /tmp/ccsFtCOD.s:2811   .text.vQueueDelete:00000000 $t
     /tmp/ccsFtCOD.s:2816   .text.vQueueDelete:00000000 vQueueDelete
     /tmp/ccsFtCOD.s:2865   .text.vQueueDelete:00000030 $d
     /tmp/ccsFtCOD.s:2874   .text.vQueueWaitForMessageRestricted:00000000 $t
     /tmp/ccsFtCOD.s:2879   .text.vQueueWaitForMessageRestricted:00000000 vQueueWaitForMessageRestricted
     /tmp/ccsFtCOD.s:2938   .text.vQueueWaitForMessageRestricted:0000003c $d
     /tmp/ccsFtCOD.s:2969   .bss.xQueueRegistry:00000000 xQueueRegistry
     /tmp/ccsFtCOD.s:2950   .rodata.__FUNCTION__.6074:00000000 __FUNCTION__.6074
     /tmp/ccsFtCOD.s:2956   .rodata.__FUNCTION__.6081:00000000 __FUNCTION__.6081
     /tmp/ccsFtCOD.s:2962   .rodata.__FUNCTION__.6188:00000000 __FUNCTION__.6188
     /tmp/ccsFtCOD.s:2965   .bss.xQueueRegistry:00000000 $d
     /tmp/ccsFtCOD.s:2975   .rodata.__FUNCTION__.6195:00000000 __FUNCTION__.6195
     /tmp/ccsFtCOD.s:2981   .rodata.__FUNCTION__.6246:00000000 __FUNCTION__.6246
     /tmp/ccsFtCOD.s:2987   .rodata.__FUNCTION__.6087:00000000 __FUNCTION__.6087
     /tmp/ccsFtCOD.s:2993   .rodata.__FUNCTION__.6095:00000000 __FUNCTION__.6095
     /tmp/ccsFtCOD.s:2999   .rodata.__FUNCTION__.6201:00000000 __FUNCTION__.6201
     /tmp/ccsFtCOD.s:3008   .rodata.__FUNCTION__.6256:00000000 __FUNCTION__.6256
     /tmp/ccsFtCOD.s:3014   .rodata.__FUNCTION__.6131:00000000 __FUNCTION__.6131
     /tmp/ccsFtCOD.s:3020   .rodata.__FUNCTION__.6156:00000000 __FUNCTION__.6156
     /tmp/ccsFtCOD.s:3026   .rodata.__FUNCTION__.6207:00000000 __FUNCTION__.6207
     /tmp/ccsFtCOD.s:3032   .rodata.__FUNCTION__.6102:00000000 __FUNCTION__.6102
     /tmp/ccsFtCOD.s:3038   .rodata.__FUNCTION__.6180:00000000 __FUNCTION__.6180
     /tmp/ccsFtCOD.s:3044   .rodata.__FUNCTION__.6142:00000000 __FUNCTION__.6142
     /tmp/ccsFtCOD.s:3050   .rodata.__FUNCTION__.6169:00000000 __FUNCTION__.6169
     /tmp/ccsFtCOD.s:3056   .rodata.__FUNCTION__.6064:00000000 __FUNCTION__.6064
     /tmp/ccsFtCOD.s:3062   .rodata.__FUNCTION__.6116:00000000 __FUNCTION__.6116
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
xTaskPriorityDisinherit
memcpy
vPortEnterCritical
xTaskRemoveFromEventList
vTaskMissedYield
vPortExitCritical
printf
vListInitialise
pvPortMalloc1
xTaskGetSchedulerState
vTaskSetTimeOutState
vTaskSuspendAll
xTaskResumeAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
pvTaskIncrementMutexHeldCount
vTaskPriorityInherit
vPortFree1
vTaskPlaceOnEventListRestricted
