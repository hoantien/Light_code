   1              		.syntax unified
   2              		.cpu cortex-r4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"contrast_sweep_manager.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZNK9rectangle10image_sizeEt,"axG",%progbits,_ZNK9rectangle10image_sizeEt,comdat
  19              		.align	1
  20              		.weak	_ZNK9rectangle10image_sizeEt
  21              		.thumb
  22              		.thumb_func
  24              	_ZNK9rectangle10image_sizeEt:
  25              	.LFB1733:
  26              		.file 1 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h"
   1:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** /*******************************************************************************
   2:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  * Copyright (c) 2016, The LightCo
   3:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  * All rights reserved.
   4:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  * Redistribution and use in source and binary forms, with or without
   5:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  * modification, are strictly prohibited without prior permission
   6:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  * of The LightCo.
   7:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  *
   8:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  * @file    roi.h
   9:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  * @author  The LightCo
  10:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  * @version V1.0.0
  11:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  * @date    August-8-2016
  12:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  * @brief   Region of interest rectangle
  13:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  *
  14:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****  ******************************************************************************/
  15:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  16:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** #ifndef __RECTANGLE_H__
  17:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** #define __RECTANGLE_H__
  18:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  19:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** #ifdef __cplusplus
  20:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  21:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** #include <cstdint>
  22:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** #include "img_sensor.h"
  23:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  24:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** class rectangle {
  25:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** public:
  26:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     rectangle(std::int16_t left_x, std::int16_t top_y, std::uint16_t width, std::uint16_t height);
  27:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  28:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     rectangle() :
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****             rectangle{0,0,0,0} {
  30:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  32:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     void set(std::int16_t left_x, std::int16_t top_y, std::uint16_t width, std::uint16_t height);
  33:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  34:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     std::int16_t left_x() const {
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return left_x_;
  36:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  37:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     std::int16_t top_y() const {
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return top_y_;
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  42:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     std::uint16_t width() const {
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return width_;
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     std::uint16_t height() const {
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return height_;
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     std::uint32_t area() const {
  51:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return static_cast<std::uint32_t>(width_) * height_;
  52:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  54:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     void translate(std::int16_t delta_x, std::int16_t delta_y);
  55:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     static std::size_t scaled_width(std::uint16_t width, std::uint16_t scale) {
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return (width + scale - 1) / scale;
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  60:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     static std::size_t scaled_height(std::uint16_t height, std::uint16_t scale) {
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return (height + scale - 1) / scale;
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  63:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     static std::size_t image_line_size(std::uint16_t width, std::uint16_t scale) {
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return (10*static_cast<std::uint32_t>(scaled_width(width, scale)) + 7) / 8;
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  67:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     static std::size_t image_line_size_padded(std::uint16_t width, std::uint16_t scale) {
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return ((image_line_size(width, scale) + 15) / 16) * 16;
  70:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  71:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  72:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     std::size_t image_line_size(std::uint16_t scale) const {
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return image_line_size(width_, scale);
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  75:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  76:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     std::size_t image_line_size_padded(std::uint16_t scale) const {
  77:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return image_line_size_padded(width_, scale);
  78:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  79:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h **** 
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     std::size_t image_size(std::uint16_t scale) const {
  27              		.loc 1 80 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32              	.LBB653:
  33              	.LBB654:
  34              	.LBB655:
  35              	.LBB656:
  36              	.LBB657:
  37              	.LBB658:
  38              	.LBB659:
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  39              		.loc 1 57 0
  40 0000 8388     		ldrh	r3, [r0, #4]
  41 0002 0B44     		add	r3, r3, r1
  42 0004 013B     		subs	r3, r3, #1
  43              	.LBE659:
  44              	.LBE658:
  45              	.LBE657:
  46              	.LBE656:
  47              	.LBE655:
  48              	.LBE654:
  49              	.LBE653:
  50              		.loc 1 80 0
  51 0006 10B5     		push	{r4, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 4, -8
  55              		.cfi_offset 14, -4
  56              	.LBB674:
  57              	.LBB675:
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  58              		.loc 1 61 0
  59 0008 C488     		ldrh	r4, [r0, #6]
  60              	.LBE675:
  61              	.LBE674:
  62              	.LBB678:
  63              	.LBB671:
  64              	.LBB668:
  65              	.LBB665:
  66              	.LBB662:
  67              	.LBB661:
  68              	.LBB660:
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  69              		.loc 1 57 0
  70 000a 93FBF1F3 		sdiv	r3, r3, r1
  71              	.LBE660:
  72              	.LBE661:
  73              	.LBE662:
  74              	.LBE665:
  75              	.LBE668:
  76              	.LBE671:
  77              	.LBE678:
  78              	.LBB679:
  79              	.LBB676:
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  80              		.loc 1 61 0
  81 000e 0C44     		add	r4, r4, r1
  82 0010 013C     		subs	r4, r4, #1
  83              	.LBE676:
  84              	.LBE679:
  85              	.LBB680:
  86              	.LBB672:
  87              	.LBB669:
  88              	.LBB666:
  89              	.LBB663:
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  90              		.loc 1 65 0
  91 0012 0A22     		movs	r2, #10
  92              	.LBE663:
  93              	.LBE666:
  94              	.LBE669:
  95              	.LBE672:
  96              	.LBE680:
  97              	.LBB681:
  98              	.LBB677:
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
  99              		.loc 1 61 0
 100 0014 94FBF1F4 		sdiv	r4, r4, r1
 101              	.LBE677:
 102              	.LBE681:
 103              	.LBB682:
 104              	.LBB673:
 105              	.LBB670:
 106              	.LBB667:
 107              	.LBB664:
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
 108              		.loc 1 65 0
 109 0018 5343     		muls	r3, r2, r3
 110 001a 0733     		adds	r3, r3, #7
 111 001c 2401     		lsls	r4, r4, #4
 112 001e DB08     		lsrs	r3, r3, #3
 113              	.LBE664:
 114              	.LBE667:
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
 115              		.loc 1 69 0
 116 0020 0F33     		adds	r3, r3, #15
 117 0022 1809     		lsrs	r0, r3, #4
 118              	.LVL1:
 119              	.LBE670:
 120              	.LBE673:
 121              	.LBE682:
  81:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****         return image_line_size_padded(scale) * scaled_height(height_, scale);
  82:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/rectangle.h ****     }
 122              		.loc 1 82 0
 123 0024 6043     		muls	r0, r4, r0
 124 0026 10BD     		pop	{r4, pc}
 125              		.cfi_endproc
 126              	.LFE1733:
 128              		.section	.text._ZN22contrast_sweep_managerC2Ev,"ax",%progbits
 129              		.align	1
 130              		.global	_ZN22contrast_sweep_managerC2Ev
 131              		.thumb
 132              		.thumb_func
 134              	_ZN22contrast_sweep_managerC2Ev:
 135              	.LFB2306:
 136              		.file 2 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp"
   1:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** /*******************************************************************************
   2:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  * Copyright (c) 2016, The LightCo
   3:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  * All rights reserved.
   4:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  * Redistribution and use in source and binary forms, with or without
   5:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  * modification, are strictly prohibited without prior permission
   6:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  * of The LightCo.
   7:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  *
   8:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  * @file    contrast_sweep_manager.cpp
   9:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  * @author  The LightCo
  10:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  * @version V1.0.0
  11:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  * @date    Sep-15-2016
  12:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  * @brief   Implements contrast optimization full sweep of several modules in parallel
  13:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  *
  14:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****  ******************************************************************************/
  15:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  16:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #include <memory>
  17:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #include "operator_new.h"
  18:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #include "log.h"
  19:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #include "cortex_r4.h"
  20:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #include "uniform_contrast_pass.h"
  21:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #include "max_search_contrast_pass.h"
  22:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #include "binary_refine_contrast_pass.h"
  23:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #include "hal_cache.h"
  24:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #include "contrast_sweep_manager.h"
  25:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  26:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  27:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #define SLOGF_ID                SLOG_ID_AF
  28:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** extern "C" uint32_t contrast_full_sweep(uint32_t cam_channel_bitmask) {
  30:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     contrast_sweep_manager csm;
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     csm.init_full_sweep(cam_channel_bitmask);
  32:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     return csm.execute_sweep();
  33:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
  34:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** contrast_sweep_manager::contrast_sweep_manager() :
 137              		.loc 2 35 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              	.LVL2:
 142              	.LBB707:
  36:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         event_group_(xEventGroupCreate()) {
 143              		.loc 2 36 0
 144 0000 0023     		movs	r3, #0
 145              	.LBE707:
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         event_group_(xEventGroupCreate()) {
 146              		.loc 2 35 0
 147 0002 10B5     		push	{r4, lr}
 148              	.LCFI1:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 4, -8
 151              		.cfi_offset 14, -4
 152 0004 00F19401 		add	r1, r0, #148
 153              	.LBB730:
 154              		.loc 2 36 0
 155 0008 0360     		str	r3, [r0]
 156              	.LBE730:
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         event_group_(xEventGroupCreate()) {
 157              		.loc 2 35 0
 158 000a 0446     		mov	r4, r0
 159              	.LBB731:
 160              		.loc 2 36 0
 161 000c 4360     		str	r3, [r0, #4]
 162              	.LVL3:
 163 000e 00F11C03 		add	r3, r0, #28
 164              	.L3:
 165              	.LVL4:
 166              	.LBB708:
 167              	.LBB709:
 168              	.LBB710:
 169              	.LBB711:
 170              	.LBB712:
 171              	.LBB713:
 172              	.LBB714:
 173              	.LBB715:
 174              	.LBB716:
 175              	.LBB717:
 176              	.LBB718:
 177              	.LBB719:
 178              	.LBB720:
 179              		.file 3 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple"
   1:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // <tuple> -*- C++ -*-
   2:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
   3:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // Copyright (C) 2007-2014 Free Software Foundation, Inc.
   4:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** //
   5:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // software; you can redistribute it and/or modify it under the
   7:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // terms of the GNU General Public License as published by the
   8:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // any later version.
  10:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  11:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // This library is distributed in the hope that it will be useful,
  12:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // GNU General Public License for more details.
  15:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  16:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // 3.1, as published by the Free Software Foundation.
  19:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  20:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // You should have received a copy of the GNU General Public License and
  21:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** // <http://www.gnu.org/licenses/>.
  24:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  25:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** /** @file include/tuple
  26:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****  *  This is a Standard C++ Library header.
  27:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****  */
  28:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  29:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** #ifndef _GLIBCXX_TUPLE
  30:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** #define _GLIBCXX_TUPLE 1
  31:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  32:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** #pragma GCC system_header
  33:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  34:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** #if __cplusplus < 201103L
  35:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** # include <bits/c++0x_warning.h>
  36:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** #else
  37:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  38:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** #include <utility>
  39:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** #include <array>
  40:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** #include <bits/uses_allocator.h>
  41:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  42:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** {
  44:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  46:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   /**
  47:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****    *  @addtogroup utilities
  48:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****    *  @{
  49:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****    */
  50:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  51:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   // Adds a const reference to a non-reference type.
  52:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   template<typename _Tp>
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     struct __add_c_ref
  54:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     { typedef const _Tp& type; };
  55:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  56:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   template<typename _Tp>
  57:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     struct __add_c_ref<_Tp&>
  58:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     { typedef _Tp& type; };
  59:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  60:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   // Adds a reference to a non-reference type.
  61:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   template<typename _Tp>
  62:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     struct __add_ref
  63:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     { typedef _Tp& type; };
  64:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  65:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   template<typename _Tp>
  66:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     struct __add_ref<_Tp&>
  67:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     { typedef _Tp& type; };
  68:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  69:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   // Adds an rvalue reference to a non-reference type.
  70:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   template<typename _Tp>
  71:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     struct __add_r_ref
  72:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     { typedef _Tp&& type; };
  73:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  74:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   template<typename _Tp>
  75:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     struct __add_r_ref<_Tp&>
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     { typedef _Tp& type; };
  77:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  78:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   template<std::size_t _Idx, typename _Head, bool _IsEmptyNotFinal>
  79:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     struct _Head_base;
  80:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   template<std::size_t _Idx, typename _Head>
  82:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     struct _Head_base<_Idx, _Head, true>
  83:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     : public _Head
  84:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     {
  85:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       constexpr _Head_base()
  86:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       : _Head() { }
  87:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  88:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       constexpr _Head_base(const _Head& __h)
  89:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       : _Head(__h) { }
  90:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  91:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       constexpr _Head_base(const _Head_base&) = default;
  92:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       constexpr _Head_base(_Head_base&&) = default;
  93:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  94:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       template<typename _UHead>
  95:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****         constexpr _Head_base(_UHead&& __h)
  96:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  97:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
  98:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
  99:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       : _Head() { }
 100:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 101:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       template<typename _Alloc>
 102:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
 103:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
 104:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 105:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       template<typename _Alloc>
 106:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
 107:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	: _Head(*__a._M_a) { }
 108:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 109:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       template<typename _UHead>
 110:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 111:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
 112:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 113:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       template<typename _Alloc, typename _UHead>
 114:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 115:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
 116:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 117:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       template<typename _Alloc, typename _UHead>
 118:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 119:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
 120:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 121:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       static constexpr _Head&
 122:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
 123:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 124:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       static constexpr const _Head&
 125:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
 126:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     };
 127:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 128:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****   template<std::size_t _Idx, typename _Head>
 129:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     struct _Head_base<_Idx, _Head, false>
 130:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****     {
 131:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       constexpr _Head_base()
 132:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       : _M_head_impl() { }
 180              		.loc 3 132 0
 181 0012 0022     		movs	r2, #0
 182 0014 1433     		adds	r3, r3, #20
 183              	.LVL5:
 184 0016 43F8282C 		str	r2, [r3, #-40]
 185              	.LVL6:
 186              	.LBE720:
 187              	.LBE719:
 188              	.LBE718:
 189              	.LBE717:
 190              	.LBE716:
 191              	.LBE715:
 192              	.LBE714:
 193              	.LBE713:
 194              	.LBE712:
 195              	.LBB721:
 196              	.LBB722:
 197              	.LBB723:
 198              	.LBB724:
 199              	.LBB725:
 200              	.LBB726:
 201              	.LBB727:
 202              	.LBB728:
 203              	.LBB729:
 204 001a 43F8242C 		str	r2, [r3, #-36]
 205              	.LBE729:
 206              	.LBE728:
 207              	.LBE727:
 208              	.LBE726:
 209              	.LBE725:
 210              	.LBE724:
 211              	.LBE723:
 212              	.LBE722:
 213              	.LBE721:
 214              		.file 4 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h"
   1:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** /*******************************************************************************
   2:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * Copyright (c) 2016, The LightCo
   3:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * All rights reserved.
   4:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * Redistribution and use in source and binary forms, with or without
   5:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * modification, are strictly prohibited without prior permission
   6:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * of The LightCo.
   7:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  *
   8:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * @file    contrast_sweep_manager.h
   9:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * @author  The LightCo
  10:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * @version V1.0.0
  11:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * @date    Sep-15-2016
  12:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * @brief   Implements contrast optimization full sweep of several modules in parallel
  13:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  *
  14:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  ******************************************************************************/
  15:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  16:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #ifndef __CONTRAST_SWEEP_MANAGER_H__
  17:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #define __CONTRAST_SWEEP_MANAGER_H__
  18:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  19:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #include "os.h"
  20:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #include "light_system.h"
  21:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #include "contrast_sweep.h"
  22:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  23:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #ifdef __cplusplus
  24:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** extern "C" {
  25:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #endif
  26:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  27:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** /**
  28:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * Runs full contrast sweep on given camera modules
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * @param cam_channel_bitmask Bitmask of camera module channels on which to run full sweep
  30:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  * @return Camera module bitmask used to update command status
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****  */
  32:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** uint32_t contrast_full_sweep(uint32_t cam_channel_bitmask);
  33:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  34:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #ifdef __cplusplus
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** }
  36:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #endif
  37:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #ifdef __cplusplus
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #include <array>
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** #include <memory>
  42:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** class contrast_sweep_manager {
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** public:
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****     contrast_sweep_manager();
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****     ~contrast_sweep_manager();
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****     void init_full_sweep(std::uint32_t cam_channel_bitmask);
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  51:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****     void init_refinement(std::uint32_t cam_channel_bitmask, std::uint32_t distance_mm);
  52:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****     std::uint32_t execute_sweep();
  54:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  55:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** private:
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****     static constexpr std::size_t MAX_NUM_CAM_CH = 6;
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****     static const EventBits_t CAPTURE_EVENT_CH0 = 1 << MAX_NUM_CAM_CH;
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****     static const EventBits_t MOVE_EVENT_CH0 = 1;
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  60:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****     EventBits_t process_move_events(EventBits_t events);
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h **** 
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep_manager.h ****     struct contrast_sweep_rec {
 215              		.loc 4 62 0
 216 001e 03F8182C 		strb	r2, [r3, #-24]
 217              	.LBE711:
 218              	.LBE710:
 219              		.file 5 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array"
   1:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // <array> -*- C++ -*-
   2:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
   3:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // Copyright (C) 2007-2014 Free Software Foundation, Inc.
   4:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** //
   5:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // software; you can redistribute it and/or modify it under the
   7:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // terms of the GNU General Public License as published by the
   8:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // any later version.
  10:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  11:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // This library is distributed in the hope that it will be useful,
  12:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // GNU General Public License for more details.
  15:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  16:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // 3.1, as published by the Free Software Foundation.
  19:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  20:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // You should have received a copy of the GNU General Public License and
  21:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // <http://www.gnu.org/licenses/>.
  24:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  25:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** /** @file include/array
  26:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****  *  This is a Standard C++ Library header.
  27:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****  */
  28:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  29:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #ifndef _GLIBCXX_ARRAY
  30:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #define _GLIBCXX_ARRAY 1
  31:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  32:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #pragma GCC system_header
  33:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  34:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #if __cplusplus < 201103L
  35:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** # include <bits/c++0x_warning.h>
  36:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #else
  37:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  38:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #include <stdexcept>
  39:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #include <bits/stl_algobase.h>
  40:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #include <bits/range_access.h>
  41:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  42:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** {
  44:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  45:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  46:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   template<typename _Tp, std::size_t _Nm>
  47:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     struct __array_traits
  48:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     {
  49:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef _Tp _Type[_Nm];
  50:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  51:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       static constexpr _Tp&
  52:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       { return const_cast<_Tp&>(__t[__n]); }
  54:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     };
  55:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  56:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****  template<typename _Tp>
  57:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    struct __array_traits<_Tp, 0>
  58:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    {
  59:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      struct _Type { };
  60:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  61:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      static constexpr _Tp&
  62:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      _S_ref(const _Type&, std::size_t) noexcept
  63:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      { return *static_cast<_Tp*>(nullptr); }
  64:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    };
  65:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  66:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   /**
  67:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  68:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  69:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @ingroup sequences
  70:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  71:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  72:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  <a href="tables.html#66">reversible container</a>, and a
  73:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  <a href="tables.html#67">sequence</a>.
  74:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  75:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  Sets support random access iterators.
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  77:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  78:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @tparam  N  Number of elements.
  79:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   */
  80:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   template<typename _Tp, std::size_t _Nm>
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     struct array
 220              		.loc 5 81 0
 221 0022 8B42     		cmp	r3, r1
 222 0024 F5D1     		bne	.L3
 223              	.LBE709:
 224              	.LBE708:
 225              		.loc 2 36 0
 226 0026 C4F88020 		str	r2, [r4, #128]
 227 002a 034B     		ldr	r3, .L6
 228              	.LVL7:
 229 002c 9847     		blx	r3
 230              	.LVL8:
 231 002e C4F88400 		str	r0, [r4, #132]
 232              	.LBE731:
  37:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
 233              		.loc 2 37 0
 234 0032 2046     		mov	r0, r4
 235 0034 10BD     		pop	{r4, pc}
 236              	.LVL9:
 237              	.L7:
 238 0036 00BF     		.align	2
 239              	.L6:
 240 0038 00000000 		.word	xEventGroupCreate
 241              		.cfi_endproc
 242              	.LFE2306:
 244              		.global	_ZN22contrast_sweep_managerC1Ev
 245              		.thumb_set _ZN22contrast_sweep_managerC1Ev,_ZN22contrast_sweep_managerC2Ev
 246              		.section	.text._ZN22contrast_sweep_manager19process_move_eventsEm,"ax",%progbits
 247              		.align	1
 248              		.global	_ZN22contrast_sweep_manager19process_move_eventsEm
 249              		.thumb
 250              		.thumb_func
 252              	_ZN22contrast_sweep_manager19process_move_eventsEm:
 253              	.LFB2311:
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** contrast_sweep_manager::~contrast_sweep_manager() {
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     vEventGroupDelete(event_group_);
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
  42:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** EventBits_t contrast_sweep_manager::process_move_events(EventBits_t events) {
 254              		.loc 2 43 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              	.LVL10:
 259 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 260              	.LCFI2:
 261              		.cfi_def_cfa_offset 24
 262              		.cfi_offset 3, -24
 263              		.cfi_offset 4, -20
 264              		.cfi_offset 5, -16
 265              		.cfi_offset 6, -12
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268              		.loc 2 43 0
 269 0002 0746     		mov	r7, r0
 270 0004 0C46     		mov	r4, r1
 271 0006 0646     		mov	r6, r0
 272              	.LBB732:
 273              	.LBB733:
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     for (std::size_t i = 0; i < MAX_NUM_CAM_CH; ++i) {
 274              		.loc 2 44 0
 275 0008 0025     		movs	r5, #0
 276              	.LVL11:
 277              	.L11:
 278              	.LBB734:
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         EventBits_t move_event = MOVE_EVENT_CH0 << i;
 279              		.loc 2 45 0
 280 000a 0123     		movs	r3, #1
 281 000c AB40     		lsls	r3, r3, r5
 282              	.LVL12:
 283              	.LBB735:
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         if ((events & move_event) != 0) {
 284              		.loc 2 46 0
 285 000e 2342     		tst	r3, r4
 286 0010 0AD0     		beq	.L9
 287              	.LBB736:
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             events &= ~move_event;
 288              		.loc 2 47 0
 289 0012 DB43     		mvns	r3, r3
 290              	.LVL13:
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep_rec& csr = csrec_arr_[i];
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             if (!csr.final_move_started)
 291              		.loc 2 49 0
 292 0014 327E     		ldrb	r2, [r6, #24]	@ zero_extendqisi2
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             events &= ~move_event;
 293              		.loc 2 47 0
 294 0016 1C40     		ands	r4, r4, r3
 295              	.LVL14:
 296              		.loc 2 49 0
 297 0018 1AB9     		cbnz	r2, .L10
 298              	.LVL15:
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csr.cs->start_capture_frame();
 299              		.loc 2 50 0
 300 001a B068     		ldr	r0, [r6, #8]
 301 001c 064B     		ldr	r3, .L16
 302              	.LVL16:
 303 001e 9847     		blx	r3
 304              	.LVL17:
 305 0020 02E0     		b	.L9
 306              	.LVL18:
 307              	.L10:
  51:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             else
  52:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cam_channel_notdone_bitmask_ &= ~(std::uint32_t(1) << i); // done for this lens
 308              		.loc 2 52 0
 309 0022 7A68     		ldr	r2, [r7, #4]
 310 0024 1340     		ands	r3, r3, r2
 311 0026 7B60     		str	r3, [r7, #4]
 312              	.LVL19:
 313              	.L9:
 314              	.LBE736:
 315              	.LBE735:
 316              	.LBE734:
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         EventBits_t move_event = MOVE_EVENT_CH0 << i;
 317              		.loc 2 44 0 discriminator 2
 318 0028 0135     		adds	r5, r5, #1
 319              	.LVL20:
 320 002a 062D     		cmp	r5, #6
 321 002c 06F11406 		add	r6, r6, #20
 322 0030 EBD1     		bne	.L11
 323              	.LBE733:
 324              	.LBE732:
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         }
  54:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     }
  55:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     return events;
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
 325              		.loc 2 56 0
 326 0032 2046     		mov	r0, r4
 327 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 328              	.LVL21:
 329              	.L17:
 330 0036 00BF     		.align	2
 331              	.L16:
 332 0038 00000000 		.word	_ZN14contrast_sweep19start_capture_frameEv
 333              		.cfi_endproc
 334              	.LFE2311:
 336              		.section	.text._ZNSt10unique_ptrIA_cSt14default_deleteIS0_EE5resetEPc,"axG",%progbits,_ZNSt10uniqu
 337              		.align	1
 338              		.weak	_ZNSt10unique_ptrIA_cSt14default_deleteIS0_EE5resetEPc
 339              		.thumb
 340              		.thumb_func
 342              	_ZNSt10unique_ptrIA_cSt14default_deleteIS0_EE5resetEPc:
 343              	.LFB2374:
 344              		.file 6 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_
   1:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // unique_ptr implementation -*- C++ -*-
   2:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
   3:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // Copyright (C) 2008-2014 Free Software Foundation, Inc.
   4:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** //
   5:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // terms of the GNU General Public License as published by the
   8:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // any later version.
  10:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  11:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // GNU General Public License for more details.
  15:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  16:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  20:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  25:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** /** @file bits/unique_ptr.h
  26:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****  */
  29:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  30:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #ifndef _UNIQUE_PTR_H
  31:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #define _UNIQUE_PTR_H 1
  32:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  33:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #include <bits/c++config.h>
  34:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #include <debug/debug.h>
  35:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #include <type_traits>
  36:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #include <utility>
  37:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #include <tuple>
  38:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  39:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** namespace std _GLIBCXX_VISIBILITY(default)
  40:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** {
  41:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  43:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   /**
  44:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****    * @addtogroup pointer_abstractions
  45:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****    * @{
  46:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****    */
  47:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  48:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #if _GLIBCXX_USE_DEPRECATED
  49:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   template<typename> class auto_ptr;
  50:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #endif
  51:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  52:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   /// Primary template of default_delete, used by unique_ptr
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   template<typename _Tp>
  54:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     struct default_delete
  55:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     {
  56:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Default constructor
  57:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       constexpr default_delete() noexcept = default;
  58:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  59:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** @brief Converting constructor.
  60:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
  61:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * Allows conversion from a deleter for arrays of another type, @p _Up,
  62:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * only if @p _Up* is convertible to @p _Tp*.
  63:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
  64:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up, typename = typename
  65:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       enable_if<is_convertible<_Up*, _Tp*>::value>::type>
  66:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****         default_delete(const default_delete<_Up>&) noexcept { }
  67:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  68:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Calls @c delete @p __ptr
  69:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       void
  70:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       operator()(_Tp* __ptr) const
  71:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
  72:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	static_assert(!is_void<_Tp>::value,
  73:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  74:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	static_assert(sizeof(_Tp)>0,
  75:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	delete __ptr;
  77:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
  78:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     };
  79:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  80:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   // DR 740 - omit specialization for array objects with a compile time length
  82:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   /// Specialization for arrays, default_delete.
  83:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   template<typename _Tp>
  84:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     struct default_delete<_Tp[]>
  85:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     {
  86:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     private:
  87:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up>
  88:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	using __remove_cv = typename remove_cv<_Up>::type;
  89:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  90:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Like is_base_of<_Tp, _Up> but false if unqualified types are the same
  91:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up>
  92:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	using __is_derived_Tp
  93:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  = __and_< is_base_of<_Tp, _Up>,
  94:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		    __not_<is_same<__remove_cv<_Tp>, __remove_cv<_Up>>> >;
  95:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
  96:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     public:
  97:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Default constructor
  98:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       constexpr default_delete() noexcept = default;
  99:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 100:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** @brief Converting constructor.
 101:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 102:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * Allows conversion from a deleter for arrays of another type, such as
 103:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * a const-qualified version of @p _Tp.
 104:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 105:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * Conversions from types derived from @c _Tp are not allowed because
 106:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * it is unsafe to @c delete[] an array of derived types through a
 107:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * pointer to the base type.
 108:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 109:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up, typename = typename
 110:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       enable_if<!__is_derived_Tp<_Up>::value>::type>
 111:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****         default_delete(const default_delete<_Up[]>&) noexcept { }
 112:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 113:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Calls @c delete[] @p __ptr
 114:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       void
 115:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       operator()(_Tp* __ptr) const
 116:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 117:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	static_assert(sizeof(_Tp)>0,
 118:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
 119:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	delete [] __ptr;
 120:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 121:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 122:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up>
 123:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	typename enable_if<__is_derived_Tp<_Up>::value>::type
 124:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	operator()(_Up*) const = delete;
 125:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     };
 126:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 127:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   /// 20.7.1.2 unique_ptr for single objects.
 128:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   template <typename _Tp, typename _Dp = default_delete<_Tp> >
 129:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     class unique_ptr
 130:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     {
 131:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // use SFINAE to determine whether _Del::pointer exists
 132:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       class _Pointer
 133:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 134:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	template<typename _Up>
 135:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  static typename _Up::pointer __test(typename _Up::pointer*);
 136:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 137:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	template<typename _Up>
 138:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  static _Tp* __test(...);
 139:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 140:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	typedef typename remove_reference<_Dp>::type _Del;
 141:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 142:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       public:
 143:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	typedef decltype(__test<_Del>(0)) type;
 144:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       };
 145:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 146:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       typedef std::tuple<typename _Pointer::type, _Dp>  __tuple_type;
 147:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       __tuple_type                                      _M_t;
 148:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 149:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     public:
 150:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       typedef typename _Pointer::type   pointer;
 151:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       typedef _Tp                       element_type;
 152:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       typedef _Dp                       deleter_type;
 153:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 154:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Constructors.
 155:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 156:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Default constructor, creates a unique_ptr that owns nothing.
 157:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       constexpr unique_ptr() noexcept
 158:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       : _M_t()
 159:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { static_assert(!is_pointer<deleter_type>::value,
 160:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		     "constructed with null function pointer deleter"); }
 161:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 162:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 163:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 164:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 165:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 166:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * The deleter will be value-initialized.
 167:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 168:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       explicit
 169:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr(pointer __p) noexcept
 170:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       : _M_t(__p, deleter_type())
 171:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { static_assert(!is_pointer<deleter_type>::value,
 172:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		     "constructed with null function pointer deleter"); }
 173:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 174:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 175:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 176:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 177:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __d  A reference to a deleter.
 178:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 179:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * The deleter will be initialized with @p __d
 180:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 181:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr(pointer __p,
 182:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  typename conditional<is_reference<deleter_type>::value,
 183:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	    deleter_type, const deleter_type&>::type __d) noexcept
 184:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       : _M_t(__p, __d) { }
 185:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 186:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 187:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 188:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 189:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __d  An rvalue reference to a deleter.
 190:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 191:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * The deleter will be initialized with @p std::move(__d)
 192:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 193:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr(pointer __p,
 194:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  typename remove_reference<deleter_type>::type&& __d) noexcept
 195:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       : _M_t(std::move(__p), std::move(__d))
 196:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { static_assert(!std::is_reference<deleter_type>::value,
 197:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		      "rvalue deleter bound to reference"); }
 198:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 199:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Creates a unique_ptr that owns nothing.
 200:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       constexpr unique_ptr(nullptr_t) noexcept : unique_ptr() { }
 201:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 202:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Move constructors.
 203:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 204:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Move constructor.
 205:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr(unique_ptr&& __u) noexcept
 206:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       : _M_t(__u.release(), std::forward<deleter_type>(__u.get_deleter())) { }
 207:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 208:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** @brief Converting constructor from another type
 209:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 210:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * Requires that the pointer owned by @p __u is convertible to the
 211:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * type of pointer owned by this object, @p __u does not own an array,
 212:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * and @p __u has a compatible deleter type.
 213:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 214:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up, typename _Ep, typename = _Require<
 215:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       is_convertible<typename unique_ptr<_Up, _Ep>::pointer, pointer>,
 216:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       __not_<is_array<_Up>>,
 217:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       typename conditional<is_reference<_Dp>::value,
 218:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 				    is_same<_Ep, _Dp>,
 219:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 				    is_convertible<_Ep, _Dp>>::type>>
 220:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	unique_ptr(unique_ptr<_Up, _Ep>&& __u) noexcept
 221:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	: _M_t(__u.release(), std::forward<_Ep>(__u.get_deleter()))
 222:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	{ }
 223:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 224:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #if _GLIBCXX_USE_DEPRECATED
 225:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Converting constructor from @c auto_ptr
 226:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up, typename = _Require<
 227:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       is_convertible<_Up*, _Tp*>, is_same<_Dp, default_delete<_Tp>>>>
 228:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	unique_ptr(auto_ptr<_Up>&& __u) noexcept;
 229:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** #endif
 230:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 231:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Destructor, invokes the deleter if the stored pointer is not null.
 232:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       ~unique_ptr() noexcept
 233:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 234:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	auto& __ptr = std::get<0>(_M_t);
 235:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	if (__ptr != nullptr)
 236:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  get_deleter()(__ptr);
 237:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	__ptr = pointer();
 238:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 239:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 240:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Assignment.
 241:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 242:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** @brief Move assignment operator.
 243:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 244:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __u  The object to transfer ownership from.
 245:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 246:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * Invokes the deleter first if this object owns a pointer.
 247:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 248:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr&
 249:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       operator=(unique_ptr&& __u) noexcept
 250:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 251:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	reset(__u.release());
 252:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	get_deleter() = std::forward<deleter_type>(__u.get_deleter());
 253:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	return *this;
 254:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 255:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 256:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** @brief Assignment from another type.
 257:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 258:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __u  The object to transfer ownership from, which owns a
 259:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *             convertible pointer to a non-array object.
 260:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 261:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * Invokes the deleter first if this object owns a pointer.
 262:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 263:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up, typename _Ep>
 264:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	typename enable_if< __and_<
 265:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  is_convertible<typename unique_ptr<_Up, _Ep>::pointer, pointer>,
 266:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  __not_<is_array<_Up>>
 267:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  >::value,
 268:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  unique_ptr&>::type
 269:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
 270:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	{
 271:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  reset(__u.release());
 272:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  get_deleter() = std::forward<_Ep>(__u.get_deleter());
 273:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  return *this;
 274:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	}
 275:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 276:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Reset the %unique_ptr to empty, invoking the deleter if necessary.
 277:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr&
 278:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       operator=(nullptr_t) noexcept
 279:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 280:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	reset();
 281:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	return *this;
 282:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 283:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 284:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Observers.
 285:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 286:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Dereference the stored pointer.
 287:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       typename add_lvalue_reference<element_type>::type
 288:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       operator*() const
 289:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 290:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	_GLIBCXX_DEBUG_ASSERT(get() != pointer());
 291:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	return *get();
 292:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 293:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 294:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Return the stored pointer.
 295:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       pointer
 296:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       operator->() const noexcept
 297:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 298:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	_GLIBCXX_DEBUG_ASSERT(get() != pointer());
 299:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	return get();
 300:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 301:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 302:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Return the stored pointer.
 303:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       pointer
 304:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       get() const noexcept
 305:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { return std::get<0>(_M_t); }
 306:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 307:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Return a reference to the stored deleter.
 308:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       deleter_type&
 309:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       get_deleter() noexcept
 310:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { return std::get<1>(_M_t); }
 311:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 312:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Return a reference to the stored deleter.
 313:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       const deleter_type&
 314:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       get_deleter() const noexcept
 315:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { return std::get<1>(_M_t); }
 316:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 317:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Return @c true if the stored pointer is not null.
 318:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       explicit operator bool() const noexcept
 319:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { return get() == pointer() ? false : true; }
 320:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 321:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Modifiers.
 322:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 323:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Release ownership of any stored pointer.
 324:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       pointer
 325:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       release() noexcept
 326:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 327:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	pointer __p = get();
 328:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	std::get<0>(_M_t) = pointer();
 329:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	return __p;
 330:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 331:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 332:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** @brief Replace the stored pointer.
 333:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 334:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __p  The new pointer to store.
 335:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 336:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * The deleter will be invoked if a pointer is already owned.
 337:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 338:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       void
 339:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       reset(pointer __p = pointer()) noexcept
 340:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 341:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	using std::swap;
 342:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	swap(std::get<0>(_M_t), __p);
 343:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	if (__p != pointer())
 344:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  get_deleter()(__p);
 345:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 346:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 347:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Exchange the pointer and deleter with another object.
 348:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       void
 349:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       swap(unique_ptr& __u) noexcept
 350:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 351:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	using std::swap;
 352:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	swap(_M_t, __u._M_t);
 353:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 354:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 355:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Disable copy from lvalue.
 356:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr(const unique_ptr&) = delete;
 357:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr& operator=(const unique_ptr&) = delete;
 358:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   };
 359:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 360:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   /// 20.7.1.3 unique_ptr for array objects with a runtime length
 361:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   // [unique.ptr.runtime]
 362:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 363:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   // DR 740 - omit specialization for array objects with a compile time length
 364:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****   template<typename _Tp, typename _Dp>
 365:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     class unique_ptr<_Tp[], _Dp>
 366:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     {
 367:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // use SFINAE to determine whether _Del::pointer exists
 368:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       class _Pointer
 369:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 370:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	template<typename _Up>
 371:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  static typename _Up::pointer __test(typename _Up::pointer*);
 372:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 373:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	template<typename _Up>
 374:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  static _Tp* __test(...);
 375:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 376:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	typedef typename remove_reference<_Dp>::type _Del;
 377:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 378:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       public:
 379:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	typedef decltype(__test<_Del>(0)) type;
 380:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       };
 381:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 382:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       typedef std::tuple<typename _Pointer::type, _Dp>  __tuple_type;
 383:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       __tuple_type                                      _M_t;
 384:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 385:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up>
 386:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	using __remove_cv = typename remove_cv<_Up>::type;
 387:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 388:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // like is_base_of<_Tp, _Up> but false if unqualified types are the same
 389:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up>
 390:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	using __is_derived_Tp
 391:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  = __and_< is_base_of<_Tp, _Up>,
 392:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		    __not_<is_same<__remove_cv<_Tp>, __remove_cv<_Up>>> >;
 393:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 394:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up, typename _Ep,
 395:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       typename _Tp_pointer = typename _Pointer::type,
 396:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       typename _Up_pointer = typename unique_ptr<_Up, _Ep>::pointer>
 397:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	using __safe_conversion = __and_<
 398:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	    is_convertible<_Up_pointer, _Tp_pointer>,
 399:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	    is_array<_Up>,
 400:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	    __or_<__not_<is_pointer<_Up_pointer>>,
 401:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		  __not_<is_pointer<_Tp_pointer>>,
 402:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		  __not_<__is_derived_Tp<typename remove_extent<_Up>::type>>
 403:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	    >
 404:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  >;
 405:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 406:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****     public:
 407:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       typedef typename _Pointer::type	pointer;
 408:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       typedef _Tp		 	element_type;
 409:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       typedef _Dp                       deleter_type;
 410:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 411:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Constructors.
 412:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 413:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Default constructor, creates a unique_ptr that owns nothing.
 414:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       constexpr unique_ptr() noexcept
 415:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       : _M_t()
 416:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { static_assert(!std::is_pointer<deleter_type>::value,
 417:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		      "constructed with null function pointer deleter"); }
 418:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 419:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 420:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 421:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __p  A pointer to an array of @c element_type
 422:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 423:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * The deleter will be value-initialized.
 424:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 425:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       explicit
 426:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr(pointer __p) noexcept
 427:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       : _M_t(__p, deleter_type())
 428:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { static_assert(!is_pointer<deleter_type>::value,
 429:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		      "constructed with null function pointer deleter"); }
 430:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 431:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Disable construction from convertible pointer types.
 432:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up, typename = _Require<is_pointer<pointer>,
 433:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       is_convertible<_Up*, pointer>, __is_derived_Tp<_Up>>>
 434:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	explicit
 435:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	unique_ptr(_Up* __p) = delete;
 436:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 437:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 438:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 439:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __p  A pointer to an array of @c element_type
 440:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __d  A reference to a deleter.
 441:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 442:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * The deleter will be initialized with @p __d
 443:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 444:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr(pointer __p,
 445:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  typename conditional<is_reference<deleter_type>::value,
 446:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	      deleter_type, const deleter_type&>::type __d) noexcept
 447:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       : _M_t(__p, __d) { }
 448:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 449:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 450:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 451:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __p  A pointer to an array of @c element_type
 452:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __d  A reference to a deleter.
 453:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 454:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * The deleter will be initialized with @p std::move(__d)
 455:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 456:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr(pointer __p, typename
 457:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		 remove_reference<deleter_type>::type&& __d) noexcept
 458:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       : _M_t(std::move(__p), std::move(__d))
 459:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { static_assert(!is_reference<deleter_type>::value,
 460:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		      "rvalue deleter bound to reference"); }
 461:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 462:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Move constructor.
 463:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr(unique_ptr&& __u) noexcept
 464:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       : _M_t(__u.release(), std::forward<deleter_type>(__u.get_deleter())) { }
 465:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 466:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Creates a unique_ptr that owns nothing.
 467:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       constexpr unique_ptr(nullptr_t) noexcept : unique_ptr() { }
 468:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 469:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up, typename _Ep,
 470:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       typename = _Require<__safe_conversion<_Up, _Ep>,
 471:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 		 typename conditional<is_reference<_Dp>::value,
 472:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 				      is_same<_Ep, _Dp>,
 473:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 				      is_convertible<_Ep, _Dp>>::type
 474:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	       >>
 475:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	unique_ptr(unique_ptr<_Up, _Ep>&& __u) noexcept
 476:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	: _M_t(__u.release(), std::forward<_Ep>(__u.get_deleter()))
 477:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	{ }
 478:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 479:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Destructor, invokes the deleter if the stored pointer is not null.
 480:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       ~unique_ptr()
 481:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 482:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	auto& __ptr = std::get<0>(_M_t);
 483:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	if (__ptr != nullptr)
 484:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  get_deleter()(__ptr);
 485:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	__ptr = pointer();
 486:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 487:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 488:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Assignment.
 489:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 490:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** @brief Move assignment operator.
 491:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 492:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __u  The object to transfer ownership from.
 493:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 494:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * Invokes the deleter first if this object owns a pointer.
 495:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 496:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr&
 497:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       operator=(unique_ptr&& __u) noexcept
 498:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 499:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	reset(__u.release());
 500:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	get_deleter() = std::forward<deleter_type>(__u.get_deleter());
 501:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	return *this;
 502:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 503:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 504:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** @brief Assignment from another type.
 505:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 506:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __u  The object to transfer ownership from, which owns a
 507:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *             convertible pointer to an array object.
 508:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 509:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * Invokes the deleter first if this object owns a pointer.
 510:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 511:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       template<typename _Up, typename _Ep>
 512:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	typename
 513:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	enable_if<__safe_conversion<_Up, _Ep>::value, unique_ptr&>::type
 514:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
 515:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	{
 516:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  reset(__u.release());
 517:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  get_deleter() = std::forward<_Ep>(__u.get_deleter());
 518:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  return *this;
 519:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	}
 520:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 521:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Reset the %unique_ptr to empty, invoking the deleter if necessary.
 522:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       unique_ptr&
 523:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       operator=(nullptr_t) noexcept
 524:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 525:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	reset();
 526:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	return *this;
 527:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 528:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 529:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Observers.
 530:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 531:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Access an element of owned array.
 532:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       typename std::add_lvalue_reference<element_type>::type
 533:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       operator[](size_t __i) const
 534:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 535:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	_GLIBCXX_DEBUG_ASSERT(get() != pointer());
 536:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	return get()[__i];
 537:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 538:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 539:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Return the stored pointer.
 540:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       pointer
 541:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       get() const noexcept
 542:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { return std::get<0>(_M_t); }
 543:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 544:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Return a reference to the stored deleter.
 545:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       deleter_type&
 546:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       get_deleter() noexcept
 547:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { return std::get<1>(_M_t); }
 548:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 549:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Return a reference to the stored deleter.
 550:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       const deleter_type&
 551:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       get_deleter() const noexcept
 552:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { return std::get<1>(_M_t); }
 553:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 554:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Return @c true if the stored pointer is not null.
 555:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       explicit operator bool() const noexcept
 556:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       { return get() == pointer() ? false : true; }
 557:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 558:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       // Modifiers.
 559:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 560:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /// Release ownership of any stored pointer.
 561:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       pointer
 562:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       release() noexcept
 563:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 564:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	pointer __p = get();
 565:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	std::get<0>(_M_t) = pointer();
 566:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	return __p;
 567:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 568:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 569:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       /** @brief Replace the stored pointer.
 570:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 571:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * @param __p  The new pointer to store.
 572:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        *
 573:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        * The deleter will be invoked if a pointer is already owned.
 574:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****        */
 575:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       void
 576:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       reset(pointer __p = pointer()) noexcept
 345              		.loc 6 576 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              	.LVL22:
 350 0000 08B5     		push	{r3, lr}
 351              	.LCFI3:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 3, -8
 354              		.cfi_offset 14, -4
 355              	.LBB742:
 356              	.LBB743:
 357              	.LBB744:
 358              		.file 7 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h"
   1:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
   3:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // Copyright (C) 2007-2014 Free Software Foundation, Inc.
   4:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** //
   5:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // any later version.
  10:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  11:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // GNU General Public License for more details.
  15:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  16:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  20:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  25:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** /** @file bits/move.h
  26:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****  */
  29:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  30:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #ifndef _MOVE_H
  31:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #define _MOVE_H 1
  32:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  33:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #include <bits/c++config.h>
  34:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #include <bits/concept_check.h>
  35:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  36:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** {
  38:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  40:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   /**
  42:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @ingroup utilities
  44:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    */
  45:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   template<typename _Tp>
  46:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     inline _Tp*
  47:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  48:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     {
  49:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****       return reinterpret_cast<_Tp*>
  50:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
  51:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     }
  52:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  54:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** } // namespace
  55:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  56:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #if __cplusplus >= 201103L
  57:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  58:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  59:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** {
  61:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  63:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   /**
  64:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @addtogroup utilities
  65:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @{
  66:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    */
  67:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  68:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   /**
  69:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @brief  Forward an lvalue.
  70:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @return The parameter cast to the specified type.
  71:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *
  72:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  73:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    */
  74:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   template<typename _Tp>
  75:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     constexpr _Tp&&
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
  78:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  79:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   /**
  80:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @brief  Forward an rvalue.
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @return The parameter cast to the specified type.
  82:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *
  83:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  84:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    */
  85:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   template<typename _Tp>
  86:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     constexpr _Tp&&
  87:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     {
  89:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****       return static_cast<_Tp&&>(__t);
  92:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     }
  93:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
  94:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   /**
  95:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  96:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  97:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   */
  99:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   template<typename _Tp>
 100:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     move(_Tp&& __t) noexcept
 102:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 103:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 104:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 105:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   template<typename _Tp>
 106:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     struct __move_if_noexcept_cond
 107:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
 108:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****                     is_copy_constructible<_Tp>>::type { };
 109:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 110:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   /**
 111:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @brief  Conditionally convert a value to an rvalue.
 112:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @param  __x  A thing of arbitrary type.
 113:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @return The parameter, possibly cast to an rvalue-reference.
 114:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *
 115:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  Same as std::move unless the type's move constructor could throw and the
 116:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  type is copyable, in which case an lvalue-reference is returned instead.
 117:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    */
 118:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   template<typename _Tp>
 119:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     constexpr typename
 120:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
 121:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     move_if_noexcept(_Tp& __x) noexcept
 122:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     { return std::move(__x); }
 123:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 124:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   // declval, from type_traits.
 125:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 126:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   /**
 127:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @brief Returns the actual address of the object or function
 128:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *         referenced by r, even in the presence of an overloaded
 129:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *         operator&.
 130:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @param  __r  Reference to an object or function.
 131:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @return   The actual address.
 132:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   */
 133:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   template<typename _Tp>
 134:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     inline _Tp*
 135:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     addressof(_Tp& __r) noexcept
 136:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     { return std::__addressof(__r); }
 137:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 138:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   /// @} group utilities
 139:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
 140:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** } // namespace
 141:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 142:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #define _GLIBCXX_MOVE(__val) std::move(__val)
 143:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
 144:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #else
 145:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #define _GLIBCXX_MOVE(__val) (__val)
 146:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) (__val)
 147:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #endif
 148:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 149:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
 150:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** {
 151:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 152:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 153:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   /**
 154:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @addtogroup utilities
 155:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @{
 156:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    */
 157:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 158:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   /**
 159:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @brief Swaps two values.
 160:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @param  __a  A thing of arbitrary type.
 161:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @param  __b  Another thing of arbitrary type.
 162:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****    *  @return   Nothing.
 163:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   */
 164:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****   template<typename _Tp>
 165:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     inline void
 166:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     swap(_Tp& __a, _Tp& __b)
 167:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #if __cplusplus >= 201103L
 168:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     noexcept(__and_<is_nothrow_move_constructible<_Tp>,
 169:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 	            is_nothrow_move_assignable<_Tp>>::value)
 170:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** #endif
 171:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****     {
 172:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****       // concept requirements
 173:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****       __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
 174:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h **** 
 175:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 359              		.loc 7 175 0
 360 0002 0368     		ldr	r3, [r0]
 361              	.LVL23:
 176:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 362              		.loc 7 176 0
 363 0004 0160     		str	r1, [r0]
 364              	.LVL24:
 365              	.LBE744:
 366              	.LBE743:
 577:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 578:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	using std::swap;
 579:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	swap(std::get<0>(_M_t), __p);
 580:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	if (__p != nullptr)
 367              		.loc 6 580 0
 368 0006 13B1     		cbz	r3, .L18
 369              	.LVL25:
 370              	.LBB745:
 371              	.LBB746:
 119:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 372              		.loc 6 119 0
 373 0008 1846     		mov	r0, r3
 374              	.LVL26:
 375 000a 014B     		ldr	r3, .L23
 376              	.LVL27:
 377 000c 9847     		blx	r3
 378              	.LVL28:
 379              	.L18:
 380 000e 08BD     		pop	{r3, pc}
 381              	.L24:
 382              		.align	2
 383              	.L23:
 384 0010 00000000 		.word	_ZdaPv
 385              	.LBE746:
 386              	.LBE745:
 387              	.LBE742:
 388              		.cfi_endproc
 389              	.LFE2374:
 391              		.section	.text._ZN22contrast_sweep_manager13execute_sweepEv,"ax",%progbits
 392              		.align	1
 393              		.global	_ZN22contrast_sweep_manager13execute_sweepEv
 394              		.thumb
 395              		.thumb_func
 397              	_ZN22contrast_sweep_manager13execute_sweepEv:
 398              	.LFB2314:
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** namespace {
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  60:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     const std::uint16_t CONTRAST_REFINE_SCALE{2};
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
  63:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** void contrast_sweep_manager::init_full_sweep(std::uint32_t cam_channel_bitmask) {
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_channel_notdone_bitmask_ = cam_channel_bitmask;
  67:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     btcm_used_size_ = 0;
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     std::uint16_t scale{CONTRAST_REFINE_SCALE};
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     for (std::size_t i = 0; i < MAX_NUM_CAM_CH; ++i) {
  70:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         if ((cam_channel_bitmask & (1 << i)) != 0) {
  71:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             // Channel i full sweep
  72:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_INFO, "Starting full sweep of cam ch %d", (int)i);
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cam_typedef_t *pcam = chan_to_object(i+1);
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cam_bitmask_ |= object_to_cam_bitmask(pcam);
  75:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
  76:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t left_x = pcam->cam_common_data.roi_rectangle.left_x;
  77:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t top_y = pcam->cam_common_data.roi_rectangle.top_y;
  78:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t width = pcam->cam_common_data.roi_rectangle.width;
  79:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t height = pcam->cam_common_data.roi_rectangle.height;
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_DEBUG, "ROI: (%d, %d) - w: (%d, %d)", (int)left_x, (int)top_y, (int)width, (
  81:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle roi(left_x, top_y, width, height);
  82:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle capture_rect{roi.minimum_capture_rectangle(scale)};
  83:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::size_t img_size = capture_rect.image_size(scale);
  84:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             csrec_arr_[i].image_size = img_size;
  85:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::size_t btcm_free_size = BTCM_SIZE - btcm_used_size_;
  86:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             if (img_size <= btcm_free_size) {
  87:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf_raw_p = reinterpret_cast<char*>(BTCM_BASE + btcm_used_size_
  88:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 btcm_used_size_ += img_size;
  89:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             } else {
  90:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf_raw_p = new(Heap::DDR) char[img_size];
  91:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf.reset(csrec_arr_[i].image_buf_raw_p);
  92:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             }
  93:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t move_event = MOVE_EVENT_CH0 << i;
  94:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t capture_event = CAPTURE_EVENT_CH0 << i;
  95:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             csrec_arr_[i].cs.reset(new contrast_sweep(*pcam, scale, capture_rect, csrec_arr_[i].ima
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                     event_group_, move_event, capture_event));
  97:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             lens_position_control lpc(*pcam);
  99:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::int16_t hc_min{0};
 100:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::int16_t hc_max{0};
 101:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             lpc.get_hard_stop_hall_codes(&hc_min, &hc_max);
 102:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_DEBUG, "Hard stops: %d, %d", (int)hc_min, (int)hc_max);
 103:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_processor::metric_type metric_coarse{contrast_processor::FILTERED_GRADIENT_TH}
 104:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_processor::metric_type metric_fine{contrast_processor::GRADIENT_TH};
 105:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             if (lpc.is_vcm()) {
 106:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 107:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 40
 108:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 109:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 20
 110:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 111:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 10
 112:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 113:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 51
 114:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 115:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 25
 116:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #if 0
 117:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 118:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 12
 119:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #endif
 120:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             } else {
 121:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 122:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 12
 123:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 124:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 64
 125:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 126:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 32
 127:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 128:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 16
 129:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 8,
 131:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 4,
 133:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #if 0
 134:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 135:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new uniform_contrast_pass{hc_min, hc_max, 2,
 136:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #endif
 137:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             }
 138:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cs.initialize_sweep(roi);
 139:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cs.start_lens_move();
 140:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         }
 141:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     }
 142:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
 143:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 144:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** void contrast_sweep_manager::init_refinement(std::uint32_t cam_channel_bitmask, std::uint32_t dista
 145:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
 146:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_channel_notdone_bitmask_ = cam_channel_bitmask;
 147:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     btcm_used_size_ = 0;
 148:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     std::uint16_t scale{CONTRAST_REFINE_SCALE};
 149:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     for (std::size_t i = 0; i < MAX_NUM_CAM_CH; ++i) {
 150:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         if ((cam_channel_bitmask & (1 << i)) != 0) {
 151:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             // Channel i refinement
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_INFO, "Starting refinement of cam ch %d", (int)i);
 153:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cam_typedef_t *pcam = chan_to_object(i+1);
 154:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cam_bitmask_ |= object_to_cam_bitmask(pcam);
 155:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 156:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t left_x = pcam->cam_common_data.roi_rectangle.left_x;
 157:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t top_y = pcam->cam_common_data.roi_rectangle.top_y;
 158:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t width = pcam->cam_common_data.roi_rectangle.width;
 159:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t height = pcam->cam_common_data.roi_rectangle.height;
 160:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_DEBUG, "ROI: (%d, %d) - w: (%d, %d)", (int)left_x, (int)top_y, (int)width, (
 161:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle roi(left_x, top_y, width, height);
 162:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle capture_rect{roi.minimum_capture_rectangle(scale)};
 163:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::size_t img_size = capture_rect.image_size(scale);
 164:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             csrec_arr_[i].image_size = img_size;
 165:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::size_t btcm_free_size = BTCM_SIZE - btcm_used_size_;
 166:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             if (img_size <= btcm_free_size) {
 167:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf_raw_p = reinterpret_cast<char*>(BTCM_BASE + btcm_used_size_
 168:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf.reset();
 169:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 btcm_used_size_ += img_size;
 170:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             } else {
 171:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf_raw_p = new(Heap::DDR) char[img_size];
 172:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf.reset(csrec_arr_[i].image_buf_raw_p);
 173:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             }
 174:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t move_event = MOVE_EVENT_CH0 << i;
 175:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t capture_event = CAPTURE_EVENT_CH0 << i;
 176:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             csrec_arr_[i].cs.reset(new contrast_sweep(*pcam, scale, capture_rect, csrec_arr_[i].ima
 177:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                     event_group_, move_event, capture_event));
 178:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 179:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             lens_position_control lpc(*pcam);
 180:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::int16_t hc_disparity = lpc.get_hall_code(distance_mm, 300); // FIXME module temper
 181:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_DEBUG, "Hall code estimation for %umm distance: %d", (unsigned int)distance_
 182:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_processor::metric_type metric_coarse{contrast_processor::FILTERED_GRADIENT_TH}
 183:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_processor::metric_type metric_fine{contrast_processor::GRADIENT_TH};
 184:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             if (lpc.is_vcm()) {
 185:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 186:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new max_search_contrast_pass{hc_disparity, 2
 187:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 188:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new binary_refine_contrast_pass{1, true}));
 189:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 190:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new binary_refine_contrast_pass{1, false}));
 191:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             } else {
 192:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 193:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new max_search_contrast_pass{hc_disparity, 6
 194:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 195:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new binary_refine_contrast_pass{1, true}));
 196:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 197:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                         std::unique_ptr<contrast_pass>(new binary_refine_contrast_pass{1, false}));
 198:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             }
 199:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cs.initialize_sweep(roi);
 200:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cs.start_lens_move();
 201:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         }
 202:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     }
 203:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
 204:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 205:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** std::uint32_t contrast_sweep_manager::execute_sweep() {
 399              		.loc 2 205 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              	.LVL29:
 404 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 405              	.LCFI4:
 406              		.cfi_def_cfa_offset 32
 407              		.cfi_offset 4, -20
 408              		.cfi_offset 5, -16
 409              		.cfi_offset 6, -12
 410              		.cfi_offset 7, -8
 411              		.cfi_offset 14, -4
 412              		.loc 2 205 0
 413 0002 0446     		mov	r4, r0
 414              	.LBB747:
 206:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     EventBits_t events = 0;
 415              		.loc 2 206 0
 416 0004 0025     		movs	r5, #0
 417              	.LVL30:
 418              	.L31:
 419              	.LBB748:
 207:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     EventBits_t all_events = (1 << 2*MAX_NUM_CAM_CH) - 1;;
 208:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     do {
 209:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         TickType_t wait_delay = (events == 0) ? portMAX_DELAY : 0;
 420              		.loc 2 209 0
 421 0006 B5FA85F3 		clz	r3, r5
 422 000a 5B09     		lsrs	r3, r3, #5
 423 000c 5B42     		negs	r3, r3
 210:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         events |= xEventGroupWaitBits(event_group_, all_events, pdTRUE, pdFALSE, wait_delay);
 424              		.loc 2 210 0
 425 000e 40F6FF71 		movw	r1, #4095
 426 0012 0122     		movs	r2, #1
 427 0014 0093     		str	r3, [sp]
 428 0016 0023     		movs	r3, #0
 429 0018 224E     		ldr	r6, .L43
 430 001a D4F88400 		ldr	r0, [r4, #132]
 431 001e B047     		blx	r6
 432              	.LVL31:
 211:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         events = process_move_events(events);
 433              		.loc 2 211 0
 434 0020 214B     		ldr	r3, .L43+4
 435              	.LBB749:
 212:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         for (std::size_t i = 0; i < MAX_NUM_CAM_CH; ++i) {
 436              		.loc 2 212 0
 437 0022 0026     		movs	r6, #0
 438              	.LBE749:
 210:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         events |= xEventGroupWaitBits(event_group_, all_events, pdTRUE, pdFALSE, wait_delay);
 439              		.loc 2 210 0
 440 0024 40EA0501 		orr	r1, r0, r5
 441              	.LVL32:
 211:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         events = process_move_events(events);
 442              		.loc 2 211 0
 443 0028 2046     		mov	r0, r4
 444 002a 9847     		blx	r3
 445              	.LVL33:
 446 002c 0546     		mov	r5, r0
 447              	.LVL34:
 448              	.L30:
 449              	.LBB756:
 450              	.LBB750:
 213:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t capture_event = CAPTURE_EVENT_CH0 << i;
 451              		.loc 2 213 0
 452 002e 4023     		movs	r3, #64
 453 0030 B340     		lsls	r3, r3, r6
 454              	.LVL35:
 455              	.LBB751:
 214:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             if (events & capture_event) {
 456              		.loc 2 214 0
 457 0032 2B42     		tst	r3, r5
 458 0034 19D0     		beq	.L26
 459              	.LBB752:
 215:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 events &= ~capture_event;
 460              		.loc 2 215 0
 461 0036 25EA0305 		bic	r5, r5, r3
 462              	.LVL36:
 216:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 contrast_sweep_rec& csr = csrec_arr_[i];
 217:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 // Flush cache if image is in DDR
 218:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 if (csr.image_buf) {
 463              		.loc 2 218 0
 464 003a 1423     		movs	r3, #20
 465              	.LVL37:
 466 003c 04F10807 		add	r7, r4, #8
 467              	.LVL38:
 468 0040 7343     		muls	r3, r6, r3
 469              	.LBB753:
 470              	.LBB754:
 471              	.LBB755:
 542:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 472              		.loc 6 542 0
 473 0042 FA18     		adds	r2, r7, r3
 474 0044 5068     		ldr	r0, [r2, #4]
 475              	.LBE755:
 476              	.LBE754:
 477              	.LBE753:
 478              		.loc 2 218 0
 479 0046 18B1     		cbz	r0, .L27
 480              	.LVL39:
 219:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                     invalidate_cache(reinterpret_cast<std::uint32_t>(csr.image_buf.get()), csr.imag
 481              		.loc 2 219 0
 482 0048 2344     		add	r3, r3, r4
 483 004a 5969     		ldr	r1, [r3, #20]
 484 004c 174B     		ldr	r3, .L43+8
 485 004e 9847     		blx	r3
 486              	.LVL40:
 487              	.L27:
 220:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 }
 221:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 bool done = csr.cs->process_captured_frame();
 488              		.loc 2 221 0
 489 0050 1423     		movs	r3, #20
 490 0052 5E43     		muls	r6, r3, r6
 491              	.LVL41:
 492 0054 164B     		ldr	r3, .L43+12
 493 0056 B859     		ldr	r0, [r7, r6]
 494 0058 9847     		blx	r3
 495              	.LVL42:
 222:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 if (done)
 496              		.loc 2 222 0
 497 005a 10B1     		cbz	r0, .L28
 223:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                     csr.final_move_started = true;
 498              		.loc 2 223 0
 499 005c A319     		adds	r3, r4, r6
 500 005e 0122     		movs	r2, #1
 501 0060 1A76     		strb	r2, [r3, #24]
 502              	.L28:
 503              	.LVL43:
 224:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csr.cs->start_lens_move();
 504              		.loc 2 224 0
 505 0062 B859     		ldr	r0, [r7, r6]
 506              	.LVL44:
 507 0064 134B     		ldr	r3, .L43+16
 508 0066 9847     		blx	r3
 509              	.LVL45:
 225:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 break;  // process only one capture, then poll for more move events before processi
 510              		.loc 2 225 0
 511 0068 02E0     		b	.L29
 512              	.LVL46:
 513              	.L26:
 514              	.LBE752:
 515              	.LBE751:
 516              	.LBE750:
 212:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t capture_event = CAPTURE_EVENT_CH0 << i;
 517              		.loc 2 212 0 discriminator 2
 518 006a 0136     		adds	r6, r6, #1
 519              	.LVL47:
 520 006c 062E     		cmp	r6, #6
 521 006e DED1     		bne	.L30
 522              	.LVL48:
 523              	.L29:
 524              	.LBE756:
 525              	.LBE748:
 208:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         TickType_t wait_delay = (events == 0) ? portMAX_DELAY : 0;
 526              		.loc 2 208 0
 527 0070 6368     		ldr	r3, [r4, #4]
 528 0072 002B     		cmp	r3, #0
 529 0074 C7D1     		bne	.L31
 530              	.LVL49:
 531              	.LBB757:
 532              	.LBB758:
 533              	.LBB759:
  82:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     {
  83:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef _Tp 	    			      value_type;
  84:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef value_type*			      pointer;
  85:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef const value_type*                       const_pointer;
  86:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef value_type&                   	      reference;
  87:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef const value_type&             	      const_reference;
  88:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef value_type*          		      iterator;
  89:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef const value_type*			      const_iterator;
  90:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef std::size_t                    	      size_type;
  91:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef std::ptrdiff_t                   	      difference_type;
  92:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
  93:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
  94:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  95:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       // Support for zero-sized arrays mandatory.
  96:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
  97:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typename _AT_Type::_Type                         _M_elems;
  98:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  99:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       // No explicit construct/copy/destroy for aggregate type.
 100:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
 101:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       // DR 776.
 102:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       void
 103:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       fill(const value_type& __u)
 104:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       { std::fill_n(begin(), size(), __u); }
 105:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
 106:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       void
 107:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       swap(array& __other)
 108:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       noexcept(noexcept(swap(std::declval<_Tp&>(), std::declval<_Tp&>())))
 109:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 110:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
 111:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       // Iterators.
 112:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       iterator
 113:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       begin() noexcept
 114:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       { return iterator(data()); }
 115:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
 116:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       const_iterator
 117:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       begin() const noexcept
 118:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       { return const_iterator(data()); }
 119:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
 120:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       iterator
 121:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       end() noexcept
 122:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       { return iterator(data() + _Nm); }
 534              		.loc 5 122 0
 535 0076 04F18006 		add	r6, r4, #128
 536              	.LBE759:
 537              	.LBE758:
 538              	.LBB760:
 539              	.LBB761:
 540              	.LBB762:
 541              	.LBB763:
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     };
 542              		.loc 5 53 0
 543 007a 04F10805 		add	r5, r4, #8
 544              	.LVL50:
 545              	.L32:
 546              	.LBE763:
 547              	.LBE762:
 548              	.LBE761:
 549              	.LBE760:
 226:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             }
 227:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         }
 228:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     } while (cam_channel_notdone_bitmask_ != 0);
 229:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     // Release image buffers
 230:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     for (auto& csr : csrec_arr_) {
 550              		.loc 2 230 0 discriminator 1
 551 007e B542     		cmp	r5, r6
 552 0080 08D0     		beq	.L42
 553              	.LVL51:
 231:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         csr.image_size = 0;
 554              		.loc 2 231 0 discriminator 3
 555 0082 0021     		movs	r1, #0
 232:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         csr.image_buf_raw_p = nullptr;
 233:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         csr.image_buf.reset();
 556              		.loc 2 233 0 discriminator 3
 557 0084 281D     		adds	r0, r5, #4
 231:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         csr.image_size = 0;
 558              		.loc 2 231 0 discriminator 3
 559 0086 E960     		str	r1, [r5, #12]
 560 0088 1435     		adds	r5, r5, #20
 561              	.LVL52:
 232:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         csr.image_buf_raw_p = nullptr;
 562              		.loc 2 232 0 discriminator 3
 563 008a 45F80C1C 		str	r1, [r5, #-12]
 564              		.loc 2 233 0 discriminator 3
 565 008e 0A4B     		ldr	r3, .L43+20
 566 0090 9847     		blx	r3
 567              	.LVL53:
 568 0092 F4E7     		b	.L32
 569              	.LVL54:
 570              	.L42:
 571              	.LBE757:
 234:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     }
 235:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     SLOGF(SLOG_DEBUG, "Sweep has run");
 572              		.loc 2 235 0
 573 0094 2B20     		movs	r0, #43
 574 0096 1021     		movs	r1, #16
 575 0098 084A     		ldr	r2, .L43+24
 576 009a 094B     		ldr	r3, .L43+28
 577 009c 9847     		blx	r3
 578              	.LVL55:
 579              	.LBE747:
 236:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     return cam_bitmask_;
 237:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
 580              		.loc 2 237 0
 581 009e 2068     		ldr	r0, [r4]
 582 00a0 03B0     		add	sp, sp, #12
 583              	.LCFI5:
 584              		.cfi_def_cfa_offset 20
 585              		@ sp needed
 586 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 587              	.LVL56:
 588              	.L44:
 589              		.align	2
 590              	.L43:
 591 00a4 00000000 		.word	xEventGroupWaitBits
 592 00a8 00000000 		.word	_ZN22contrast_sweep_manager19process_move_eventsEm
 593 00ac 00000000 		.word	invalidate_cache
 594 00b0 00000000 		.word	_ZN14contrast_sweep22process_captured_frameEv
 595 00b4 00000000 		.word	_ZN14contrast_sweep15start_lens_moveEv
 596 00b8 00000000 		.word	_ZNSt10unique_ptrIA_cSt14default_deleteIS0_EE5resetEPc
 597 00bc 00000000 		.word	.LC0
 598 00c0 00000000 		.word	slogf
 599              		.cfi_endproc
 600              	.LFE2314:
 602              		.section	.text._ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED2Ev,"axG",%progbits,_ZNSt
 603              		.align	1
 604              		.weak	_ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED2Ev
 605              		.thumb
 606              		.thumb_func
 608              	_ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED2Ev:
 609              	.LFB2409:
 232:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 610              		.loc 6 232 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              	.LVL57:
 615 0000 10B5     		push	{r4, lr}
 616              	.LCFI6:
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 4, -8
 619              		.cfi_offset 14, -4
 232:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 620              		.loc 6 232 0
 621 0002 0446     		mov	r4, r0
 622              	.LBB768:
 235:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  get_deleter()(__ptr);
 623              		.loc 6 235 0
 624 0004 0068     		ldr	r0, [r0]
 625              	.LVL58:
 626 0006 10B1     		cbz	r0, .L46
 627              	.LVL59:
 628              	.LBB769:
 629              	.LBB770:
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 630              		.loc 6 76 0
 631 0008 0368     		ldr	r3, [r0]
 632 000a 5B68     		ldr	r3, [r3, #4]
 633 000c 9847     		blx	r3
 634              	.LVL60:
 635              	.L46:
 636              	.LBE770:
 637              	.LBE769:
 638              	.LBE768:
 238:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 639              		.loc 6 238 0
 640 000e 2046     		mov	r0, r4
 641 0010 10BD     		pop	{r4, pc}
 642              		.cfi_endproc
 643              	.LFE2409:
 645              		.weak	_ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED1Ev
 646              		.thumb_set _ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED1Ev,_ZNSt10unique_ptrI13contr
 647              		.section	.text._ZNKSt14default_deleteI14contrast_sweepEclEPS0_.isra.4,"ax",%progbits
 648              		.align	1
 649              		.thumb
 650              		.thumb_func
 652              	_ZNKSt14default_deleteI14contrast_sweepEclEPS0_.isra.4:
 653              	.LFB2496:
  70:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       {
 654              		.loc 6 70 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              	.LVL61:
 659 0000 38B5     		push	{r3, r4, r5, lr}
 660              	.LCFI7:
 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 3, -16
 663              		.cfi_offset 4, -12
 664              		.cfi_offset 5, -8
 665              		.cfi_offset 14, -4
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 666              		.loc 6 76 0
 667 0002 0546     		mov	r5, r0
 668 0004 70B1     		cbz	r0, .L50
 669              	.LVL62:
 670              	.LBB779:
 671              	.LBB780:
 672              		.file 8 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h"
   1:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** /*******************************************************************************
   2:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  * Copyright (c) 2016, The LightCo
   3:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  * All rights reserved.
   4:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  * Redistribution and use in source and binary forms, with or without
   5:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  * modification, are strictly prohibited without prior permission
   6:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  * of The LightCo.
   7:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  *
   8:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  * @file    contrast_sweep.h
   9:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  * @author  The LightCo
  10:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  * @version V1.0.0
  11:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  * @date    August-8-2016
  12:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  * @brief   Implements contrast optimization full sweep
  13:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  *
  14:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****  ******************************************************************************/
  15:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  16:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #ifndef __CONTRAST_SWEEP_H__
  17:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #define __CONTRAST_SWEEP_H__
  18:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  19:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #include "os.h"
  20:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #include "light_system.h"
  21:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #include "contrast_refine_step.h"
  22:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #include "contrast_pass.h"
  23:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #include "rectangle.h"
  24:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  25:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #ifdef __cplusplus
  26:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  27:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #include <cstdint>
  28:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #include <array>
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #include <limits>
  30:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** #include <memory>
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  32:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** /// Implements contrast optimization sweep
  33:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** class contrast_sweep {
 673              		.loc 8 33 0
 674 0006 5830     		adds	r0, r0, #88
 675              	.LVL63:
 676 0008 074B     		ldr	r3, .L57
 677              	.LBB781:
 678              	.LBB782:
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     {
 679              		.loc 5 81 0
 680 000a 05F15004 		add	r4, r5, #80
 681              	.LBE782:
 682              	.LBE781:
 683              		.loc 8 33 0
 684 000e 9847     		blx	r3
 685              	.LVL64:
 686              	.L53:
 687              	.LBB786:
 688              	.LBB785:
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     {
 689              		.loc 5 81 0
 690 0010 AC42     		cmp	r4, r5
 691 0012 04D0     		beq	.L52
 692 0014 083C     		subs	r4, r4, #8
 693              	.LVL65:
 694              	.LBB783:
 695              	.LBB784:
  34:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** public:
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     /**
  36:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * Constructor
  37:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @param cam Camera module object
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @param scale Set to 1 for native resolution, 2 for scale/bin of 2 in x and y
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @param min_capture_rect Rectangle that should be captured
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @param image_buffer_p Pointer to image buffer (can hold min_capture_rect.image_size())
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @param event_group Event group for lens move done and capture done events
  42:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @param lens_move_done_event Event to signal that lens move is completed
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @param capture_done_event Event to signal that roi image capture is completed
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      */
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     contrast_sweep(cam_typedef_t& cam, std::uint16_t scale,
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****             const rectangle& min_capture_rect, void* image_buffer_p,
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****             EventGroupHandle_t event_group,
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****             EventBits_t lens_move_done_event, EventBits_t capture_done_event);
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     /**
  51:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * Configures one pass of contrast sweep operation
  52:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @param metric1_t Type of metric1 to be computed
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @param metric1_t Type of metric2 to be computed
  54:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @param contrast_pass_p Pointer to contrast_pass object
  55:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      */
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     void add_iter_param(contrast_processor::metric_type metric1_t,
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****             contrast_processor::metric_type metric2_t,
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****             std::unique_ptr<contrast_pass> contrast_pass_p);
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  60:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     /**
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * Initialize sweep with passes as specified through add_iter_param()
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      */
  63:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     void initialize_sweep(const rectangle& roi);
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     /**
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * Start lens move
  67:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      */
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     void start_lens_move();
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  70:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     /**
  71:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * Start frame capture
  72:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      */
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     void start_capture_frame();
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  75:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     /**
  76:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * Process captured frame, compute metrics
  77:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @return true iff sweep is completed
  78:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * After true is returned, a last call to start_lens_move() is needed to move the lens to the o
  79:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      */
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     bool process_captured_frame();
  81:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  82:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     /**
  83:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      * @return Optimal lens position computed in last call to run_sweep().
  84:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****      */
  85:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     std::int16_t optimal_position() const {
  86:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****         return pass_param_arr_[num_pass_-1].contrast_pass_p->out_best_pos();
  87:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     }
  88:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  89:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     const rectangle& capture_rectangle() const {
  90:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****         return contrast_step_.capture_rectangle();
  91:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     }
  92:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** 
  93:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h **** private:
  94:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_sweep.h ****     struct pass_param {
 696              		.loc 8 94 0
 697 0016 201D     		adds	r0, r4, #4
 698 0018 044B     		ldr	r3, .L57+4
 699 001a 9847     		blx	r3
 700              	.LVL66:
 701 001c F8E7     		b	.L53
 702              	.LVL67:
 703              	.L52:
 704              	.LBE784:
 705              	.LBE783:
 706              	.LBE785:
 707              	.LBE786:
 708              	.LBE780:
 709              	.LBE779:
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 710              		.loc 6 76 0
 711 001e 2046     		mov	r0, r4
 712 0020 034B     		ldr	r3, .L57+8
 713 0022 9847     		blx	r3
 714              	.LVL68:
 715              	.L50:
 716 0024 38BD     		pop	{r3, r4, r5, pc}
 717              	.LVL69:
 718              	.L58:
 719 0026 00BF     		.align	2
 720              	.L57:
 721 0028 00000000 		.word	_ZN20contrast_refine_stepD1Ev
 722 002c 00000000 		.word	_ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED1Ev
 723 0030 00000000 		.word	_ZdlPv
 724              		.cfi_endproc
 725              	.LFE2496:
 727              		.section	.text._ZN22contrast_sweep_manager15init_full_sweepEm,"ax",%progbits
 728              		.align	1
 729              		.global	_ZN22contrast_sweep_manager15init_full_sweepEm
 730              		.thumb
 731              		.thumb_func
 733              	_ZN22contrast_sweep_manager15init_full_sweepEm:
 734              	.LFB2312:
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
 735              		.loc 2 64 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 72
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              	.LVL70:
 740              	.LBB865:
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     btcm_used_size_ = 0;
 741              		.loc 2 66 0
 742 0000 0A46     		mov	r2, r1
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_channel_notdone_bitmask_ = cam_channel_bitmask;
 743              		.loc 2 65 0
 744 0002 0023     		movs	r3, #0
 745              	.LBE865:
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
 746              		.loc 2 64 0
 747 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 748              	.LCFI8:
 749              		.cfi_def_cfa_offset 36
 750              		.cfi_offset 4, -36
 751              		.cfi_offset 5, -32
 752              		.cfi_offset 6, -28
 753              		.cfi_offset 7, -24
 754              		.cfi_offset 8, -20
 755              		.cfi_offset 9, -16
 756              		.cfi_offset 10, -12
 757              		.cfi_offset 11, -8
 758              		.cfi_offset 14, -4
 759              	.LBB957:
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     btcm_used_size_ = 0;
 760              		.loc 2 66 0
 761 0008 4260     		str	r2, [r0, #4]
  67:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     std::uint16_t scale{CONTRAST_REFINE_SCALE};
 762              		.loc 2 67 0
 763 000a 0246     		mov	r2, r0
 764              	.LBE957:
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
 765              		.loc 2 64 0
 766 000c 97B0     		sub	sp, sp, #92
 767              	.LCFI9:
 768              		.cfi_def_cfa_offset 128
 769 000e 0C32     		adds	r2, r2, #12
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
 770              		.loc 2 64 0
 771 0010 0790     		str	r0, [sp, #28]
 772 0012 0991     		str	r1, [sp, #36]
 773              	.LBB958:
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_channel_notdone_bitmask_ = cam_channel_bitmask;
 774              		.loc 2 65 0
 775 0014 0360     		str	r3, [r0]
  67:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     std::uint16_t scale{CONTRAST_REFINE_SCALE};
 776              		.loc 2 67 0
 777 0016 C0F88030 		str	r3, [r0, #128]
 778              	.LVL71:
 779 001a 0692     		str	r2, [sp, #24]
 780              	.LBB866:
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         if ((cam_channel_bitmask & (1 << i)) != 0) {
 781              		.loc 2 69 0
 782 001c 0893     		str	r3, [sp, #32]
 783              	.LVL72:
 784              	.L66:
 785              	.LBB867:
  70:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             // Channel i full sweep
 786              		.loc 2 70 0
 787 001e 0127     		movs	r7, #1
 788 0020 089B     		ldr	r3, [sp, #32]
 789 0022 099A     		ldr	r2, [sp, #36]
 790 0024 07FA03F3 		lsl	r3, r7, r3
 791 0028 1342     		tst	r3, r2
 792 002a 00F0E881 		beq	.L60
 793              	.LBB868:
  72:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cam_typedef_t *pcam = chan_to_object(i+1);
 794              		.loc 2 72 0
 795 002e 0821     		movs	r1, #8
 796 0030 924A     		ldr	r2, .L74
 797 0032 2B20     		movs	r0, #43
 798 0034 924C     		ldr	r4, .L74+4
 799 0036 089B     		ldr	r3, [sp, #32]
 800 0038 A047     		blx	r4
 801              	.LVL73:
 802 003a 089B     		ldr	r3, [sp, #32]
 803 003c D819     		adds	r0, r3, r7
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cam_bitmask_ |= object_to_cam_bitmask(pcam);
 804              		.loc 2 73 0
 805 003e 914B     		ldr	r3, .L74+8
 806 0040 C0B2     		uxtb	r0, r0
 807 0042 9847     		blx	r3
 808              	.LVL74:
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 809              		.loc 2 74 0
 810 0044 904B     		ldr	r3, .L74+12
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cam_bitmask_ |= object_to_cam_bitmask(pcam);
 811              		.loc 2 73 0
 812 0046 0546     		mov	r5, r0
 813              	.LVL75:
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 814              		.loc 2 74 0
 815 0048 9847     		blx	r3
 816              	.LVL76:
 817 004a 079B     		ldr	r3, [sp, #28]
  76:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t top_y = pcam->cam_common_data.roi_rectangle.top_y;
 818              		.loc 2 76 0
 819 004c B5F80CA0 		ldrh	r10, [r5, #12]
 820              	.LVL77:
  78:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t height = pcam->cam_common_data.roi_rectangle.height;
 821              		.loc 2 78 0
 822 0050 B5F81080 		ldrh	r8, [r5, #16]
  77:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t width = pcam->cam_common_data.roi_rectangle.width;
 823              		.loc 2 77 0
 824 0054 B5F80E90 		ldrh	r9, [r5, #14]
 825              	.LVL78:
  79:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_DEBUG, "ROI: (%d, %d) - w: (%d, %d)", (int)left_x, (int)top_y, (int)width, (
 826              		.loc 2 79 0
 827 0058 B5F812B0 		ldrh	fp, [r5, #18]
 828              	.LVL79:
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle roi(left_x, top_y, width, height);
 829              		.loc 2 80 0
 830 005c 1021     		movs	r1, #16
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 831              		.loc 2 74 0
 832 005e 1B68     		ldr	r3, [r3]
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle roi(left_x, top_y, width, height);
 833              		.loc 2 80 0
 834 0060 8A4A     		ldr	r2, .L74+16
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 835              		.loc 2 74 0
 836 0062 1843     		orrs	r0, r0, r3
 837 0064 079B     		ldr	r3, [sp, #28]
 838 0066 1860     		str	r0, [r3]
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle roi(left_x, top_y, width, height);
 839              		.loc 2 80 0
 840 0068 2B20     		movs	r0, #43
 841 006a CDF80480 		str	r8, [sp, #4]
 842 006e 5346     		mov	r3, r10
 843 0070 CDF80090 		str	r9, [sp]
 844 0074 CDF808B0 		str	fp, [sp, #8]
 845 0078 A047     		blx	r4
 846              	.LVL80:
  81:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle capture_rect{roi.minimum_capture_rectangle(scale)};
 847              		.loc 2 81 0
 848 007a 4346     		mov	r3, r8
 849 007c DFF838C2 		ldr	ip, .L74+60
 850 0080 0FFA8AF1 		sxth	r1, r10
 851 0084 0FFA89F2 		sxth	r2, r9
 852 0088 CDF800B0 		str	fp, [sp]
 853 008c 0EA8     		add	r0, sp, #56
 854 008e E047     		blx	ip
 855              	.LVL81:
  82:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::size_t img_size = capture_rect.image_size(scale);
 856              		.loc 2 82 0
 857 0090 0222     		movs	r2, #2
 858 0092 10A8     		add	r0, sp, #64
 859 0094 0EA9     		add	r1, sp, #56
 860 0096 7E4B     		ldr	r3, .L74+20
 861 0098 A046     		mov	r8, r4
 862              	.LVL82:
 863 009a 9847     		blx	r3
 864              	.LVL83:
  83:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             csrec_arr_[i].image_size = img_size;
 865              		.loc 2 83 0
 866 009c 0221     		movs	r1, #2
 867 009e 7D4B     		ldr	r3, .L74+24
 868 00a0 10A8     		add	r0, sp, #64
 869 00a2 9847     		blx	r3
 870              	.LVL84:
  84:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::size_t btcm_free_size = BTCM_SIZE - btcm_used_size_;
 871              		.loc 2 84 0
 872 00a4 069A     		ldr	r2, [sp, #24]
 873 00a6 9060     		str	r0, [r2, #8]
  83:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             csrec_arr_[i].image_size = img_size;
 874              		.loc 2 83 0
 875 00a8 0346     		mov	r3, r0
 876              	.LVL85:
  85:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             if (img_size <= btcm_free_size) {
 877              		.loc 2 85 0
 878 00aa 079A     		ldr	r2, [sp, #28]
 879 00ac D2F88020 		ldr	r2, [r2, #128]
 880              	.LVL86:
 881 00b0 C2F50031 		rsb	r1, r2, #131072
 882              	.LVL87:
  86:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf_raw_p = reinterpret_cast<char*>(BTCM_BASE + btcm_used_size_
 883              		.loc 2 86 0
 884 00b4 8842     		cmp	r0, r1
 885 00b6 0BD8     		bhi	.L61
 886              	.LVL88:
  87:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 btcm_used_size_ += img_size;
 887              		.loc 2 87 0
 888 00b8 02F15072 		add	r2, r2, #54525952
 889 00bc 0699     		ldr	r1, [sp, #24]
 890              	.LVL89:
 891 00be 4A60     		str	r2, [r1, #4]
 892              	.LVL90:
  88:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             } else {
 893              		.loc 2 88 0
 894 00c0 079A     		ldr	r2, [sp, #28]
 895              	.LVL91:
 896 00c2 D2F88020 		ldr	r2, [r2, #128]
 897 00c6 1344     		add	r3, r3, r2
 898 00c8 079A     		ldr	r2, [sp, #28]
 899 00ca C2F88030 		str	r3, [r2, #128]
 900              	.LVL92:
 901 00ce 08E0     		b	.L62
 902              	.LVL93:
 903              	.L61:
  90:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf.reset(csrec_arr_[i].image_buf_raw_p);
 904              		.loc 2 90 0
 905 00d0 3946     		mov	r1, r7
 906              	.LVL94:
 907 00d2 714B     		ldr	r3, .L74+28
 908 00d4 9847     		blx	r3
 909              	.LVL95:
 910 00d6 069B     		ldr	r3, [sp, #24]
 911 00d8 5860     		str	r0, [r3, #4]
 912              	.LVL96:
 913 00da 0146     		mov	r1, r0
  91:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             }
 914              		.loc 2 91 0
 915 00dc 1846     		mov	r0, r3
 916 00de 6F4B     		ldr	r3, .L74+32
 917 00e0 9847     		blx	r3
 918              	.LVL97:
 919              	.L62:
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 920              		.loc 2 96 0
 921 00e2 069B     		ldr	r3, [sp, #24]
 922 00e4 4FF4E870 		mov	r0, #464
 923 00e8 6D4F     		ldr	r7, .L74+36
 924 00ea D3F80490 		ldr	r9, [r3, #4]
 925              	.LVL98:
 926 00ee B847     		blx	r7
 927              	.LVL99:
 928 00f0 079B     		ldr	r3, [sp, #28]
 929 00f2 2946     		mov	r1, r5
 930 00f4 CDF80090 		str	r9, [sp]
  93:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t capture_event = CAPTURE_EVENT_CH0 << i;
 931              		.loc 2 93 0
 932 00f8 089A     		ldr	r2, [sp, #32]
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 933              		.loc 2 96 0
 934 00fa D3F88430 		ldr	r3, [r3, #132]
 935 00fe 0193     		str	r3, [sp, #4]
  93:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t capture_event = CAPTURE_EVENT_CH0 << i;
 936              		.loc 2 93 0
 937 0100 0123     		movs	r3, #1
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 938              		.loc 2 96 0
 939 0102 DFF8B8C1 		ldr	ip, .L74+64
  93:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t capture_event = CAPTURE_EVENT_CH0 << i;
 940              		.loc 2 93 0
 941 0106 9340     		lsls	r3, r3, r2
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 942              		.loc 2 96 0
 943 0108 0293     		str	r3, [sp, #8]
  94:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             csrec_arr_[i].cs.reset(new contrast_sweep(*pcam, scale, capture_rect, csrec_arr_[i].ima
 944              		.loc 2 94 0
 945 010a 4023     		movs	r3, #64
 946 010c 9340     		lsls	r3, r3, r2
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 947              		.loc 2 96 0
 948 010e 0222     		movs	r2, #2
 949 0110 0393     		str	r3, [sp, #12]
 950 0112 10AB     		add	r3, sp, #64
 951 0114 0446     		mov	r4, r0
 952 0116 E047     		blx	ip
 953              	.LVL100:
 954              	.LBB869:
 955              	.LBB870:
 956              	.LBB871:
 957              	.LBB872:
 175:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 958              		.loc 7 175 0
 959 0118 069B     		ldr	r3, [sp, #24]
 960 011a 0597     		str	r7, [sp, #20]
 961 011c 53F8040C 		ldr	r0, [r3, #-4]
 962              	.LVL101:
 963              		.loc 7 176 0
 964 0120 43F8044C 		str	r4, [r3, #-4]
 965              	.LVL102:
 966              	.LBE872:
 967              	.LBE871:
 343:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  get_deleter()(__p);
 968              		.loc 6 343 0
 969 0124 08B1     		cbz	r0, .L63
 970              	.LVL103:
 344:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 971              		.loc 6 344 0
 972 0126 5F4B     		ldr	r3, .L74+40
 973 0128 9847     		blx	r3
 974              	.LVL104:
 975              	.L63:
 976              	.LBE870:
 977              	.LBE869:
 978              	.LBB873:
 979              	.LBB874:
 305:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 980              		.loc 6 305 0
 981 012a 069B     		ldr	r3, [sp, #24]
 982              	.LBE874:
 983              	.LBE873:
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::int16_t hc_min{0};
 984              		.loc 2 98 0
 985 012c 2946     		mov	r1, r5
  99:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::int16_t hc_max{0};
 986              		.loc 2 99 0
 987 012e 0027     		movs	r7, #0
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::int16_t hc_min{0};
 988              		.loc 2 98 0
 989 0130 12A8     		add	r0, sp, #72
 990              	.LBB876:
 991              	.LBB875:
 305:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 992              		.loc 6 305 0
 993 0132 53F8044C 		ldr	r4, [r3, #-4]
 994              	.LBE875:
 995              	.LBE876:
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::int16_t hc_min{0};
 996              		.loc 2 98 0
 997 0136 5C4B     		ldr	r3, .L74+44
 998 0138 9847     		blx	r3
 999              	.LVL105:
 101:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_DEBUG, "Hard stops: %d, %d", (int)hc_min, (int)hc_max);
 1000              		.loc 2 101 0
 1001 013a 12A8     		add	r0, sp, #72
 1002 013c 0CA9     		add	r1, sp, #48
 1003 013e 0DF13202 		add	r2, sp, #50
 1004 0142 5A4B     		ldr	r3, .L74+48
  99:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::int16_t hc_max{0};
 1005              		.loc 2 99 0
 1006 0144 ADF83070 		strh	r7, [sp, #48]	@ movhi
 100:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             lpc.get_hard_stop_hall_codes(&hc_min, &hc_max);
 1007              		.loc 2 100 0
 1008 0148 ADF83270 		strh	r7, [sp, #50]	@ movhi
 101:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_DEBUG, "Hard stops: %d, %d", (int)hc_min, (int)hc_max);
 1009              		.loc 2 101 0
 1010 014c 9847     		blx	r3
 1011              	.LVL106:
 102:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_processor::metric_type metric_coarse{contrast_processor::FILTERED_GRADIENT_TH}
 1012              		.loc 2 102 0
 1013 014e BDF93220 		ldrsh	r2, [sp, #50]
 1014 0152 BDF93030 		ldrsh	r3, [sp, #48]
 1015 0156 0092     		str	r2, [sp]
 1016 0158 2B20     		movs	r0, #43
 1017 015a 1021     		movs	r1, #16
 1018 015c 544A     		ldr	r2, .L74+52
 1019 015e C047     		blx	r8
 1020              	.LVL107:
 105:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1021              		.loc 2 105 0
 1022 0160 9DF84C80 		ldrb	r8, [sp, #76]	@ zero_extendqisi2
 107:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1023              		.loc 2 107 0
 1024 0164 2820     		movs	r0, #40
 1025 0166 059B     		ldr	r3, [sp, #20]
 105:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1026              		.loc 2 105 0
 1027 0168 B8F1000F 		cmp	r8, #0
 1028 016c 00F0AC80 		beq	.L64
 107:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1029              		.loc 2 107 0
 1030 0170 9847     		blx	r3
 1031              	.LVL108:
 1032 0172 4FF0010A 		mov	r10, #1
 1033              	.LVL109:
 1034 0176 BDF93010 		ldrsh	r1, [sp, #48]
 1035 017a BDF93220 		ldrsh	r2, [sp, #50]
 1036 017e CDF800A0 		str	r10, [sp]
 1037 0182 4FF48053 		mov	r3, #4096
 1038 0186 CDF804A0 		str	r10, [sp, #4]
 1039 018a 0297     		str	r7, [sp, #8]
 1040 018c 494D     		ldr	r5, .L74+56
 1041              	.LVL110:
 1042 018e DFF83091 		ldr	r9, .L74+68
 109:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1043              		.loc 2 109 0
 1044 0192 484E     		ldr	r6, .L74+56
 107:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1045              		.loc 2 107 0
 1046 0194 8046     		mov	r8, r0
 1047 0196 A847     		blx	r5
 1048              	.LVL111:
 1049              	.LBB877:
 1050              	.LBB878:
 1051              	.LBB879:
 1052              	.LBB880:
 1053              	.LBB881:
 133:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 134:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       constexpr _Head_base(const _Head& __h)
 135:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       : _M_head_impl(__h) { }
 136:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 137:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       constexpr _Head_base(const _Head_base&) = default;
 138:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       constexpr _Head_base(_Head_base&&) = default;
 139:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 
 140:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****       template<typename _UHead>
 141:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple ****         constexpr _Head_base(_UHead&& __h)
 142:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 1054              		.loc 3 142 0
 1055 0198 16AD     		add	r5, sp, #88
 1056              	.LBE881:
 1057              	.LBE880:
 1058              	.LBE879:
 1059              	.LBE878:
 1060              	.LBE877:
 107:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1061              		.loc 2 107 0
 1062 019a 0921     		movs	r1, #9
 1063              	.LBB886:
 1064              	.LBB885:
 1065              	.LBB884:
 1066              	.LBB883:
 1067              	.LBB882:
 1068              		.loc 3 142 0
 1069 019c 45F8248D 		str	r8, [r5, #-36]!
 1070              	.LBE882:
 1071              	.LBE883:
 1072              	.LBE884:
 1073              	.LBE885:
 1074              	.LBE886:
 107:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1075              		.loc 2 107 0
 1076 01a0 0722     		movs	r2, #7
 1077 01a2 2B46     		mov	r3, r5
 1078 01a4 2046     		mov	r0, r4
 1079 01a6 C847     		blx	r9
 1080              	.LVL112:
 1081 01a8 DFF81881 		ldr	r8, .L74+72
 1082              	.LVL113:
 1083 01ac 2846     		mov	r0, r5
 1084 01ae C047     		blx	r8
 1085              	.LVL114:
 109:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1086              		.loc 2 109 0
 1087 01b0 059B     		ldr	r3, [sp, #20]
 1088 01b2 2820     		movs	r0, #40
 1089 01b4 9847     		blx	r3
 1090              	.LVL115:
 1091 01b6 BDF93010 		ldrsh	r1, [sp, #48]
 1092 01ba BDF93220 		ldrsh	r2, [sp, #50]
 1093 01be CDF800A0 		str	r10, [sp]
 1094 01c2 CDF804A0 		str	r10, [sp, #4]
 1095 01c6 4FF40063 		mov	r3, #2048
 1096 01ca 0297     		str	r7, [sp, #8]
 1097 01cc 8346     		mov	fp, r0
 1098              	.LVL116:
 1099 01ce B047     		blx	r6
 1100              	.LVL117:
 1101 01d0 0921     		movs	r1, #9
 1102 01d2 0722     		movs	r2, #7
 1103 01d4 2B46     		mov	r3, r5
 1104 01d6 2046     		mov	r0, r4
 1105              	.LBB887:
 1106              	.LBB888:
 1107              	.LBB889:
 1108              	.LBB890:
 1109              	.LBB891:
 1110              		.loc 3 142 0
 1111 01d8 CDF834B0 		str	fp, [sp, #52]
 1112              	.LBE891:
 1113              	.LBE890:
 1114              	.LBE889:
 1115              	.LBE888:
 1116              	.LBE887:
 109:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1117              		.loc 2 109 0
 1118 01dc C847     		blx	r9
 1119              	.LVL118:
 1120 01de 2846     		mov	r0, r5
 1121 01e0 C047     		blx	r8
 1122              	.LVL119:
 111:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1123              		.loc 2 111 0
 1124 01e2 059B     		ldr	r3, [sp, #20]
 1125 01e4 2820     		movs	r0, #40
 1126 01e6 9847     		blx	r3
 1127              	.LVL120:
 1128 01e8 BDF93010 		ldrsh	r1, [sp, #48]
 1129 01ec BDF93220 		ldrsh	r2, [sp, #50]
 1130 01f0 CDF800A0 		str	r10, [sp]
 1131 01f4 CDF804A0 		str	r10, [sp, #4]
 1132 01f8 4FF48063 		mov	r3, #1024
 1133 01fc 0297     		str	r7, [sp, #8]
 1134 01fe 8346     		mov	fp, r0
 1135              	.LVL121:
 1136 0200 B047     		blx	r6
 1137              	.LVL122:
 1138 0202 0921     		movs	r1, #9
 1139 0204 0722     		movs	r2, #7
 1140 0206 2B46     		mov	r3, r5
 1141 0208 2046     		mov	r0, r4
 1142              	.LBB892:
 1143              	.LBB893:
 1144              	.LBB894:
 1145              	.LBB895:
 1146              	.LBB896:
 1147              		.loc 3 142 0
 1148 020a CDF834B0 		str	fp, [sp, #52]
 1149              	.LBE896:
 1150              	.LBE895:
 1151              	.LBE894:
 1152              	.LBE893:
 1153              	.LBE892:
 111:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1154              		.loc 2 111 0
 1155 020e C847     		blx	r9
 1156              	.LVL123:
 1157 0210 2846     		mov	r0, r5
 1158 0212 C047     		blx	r8
 1159              	.LVL124:
 113:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1160              		.loc 2 113 0
 1161 0214 059B     		ldr	r3, [sp, #20]
 1162 0216 2820     		movs	r0, #40
 1163 0218 9847     		blx	r3
 1164              	.LVL125:
 1165 021a BDF93010 		ldrsh	r1, [sp, #48]
 1166 021e BDF93220 		ldrsh	r2, [sp, #50]
 1167 0222 CDF800A0 		str	r10, [sp]
 1168 0226 0197     		str	r7, [sp, #4]
 1169 0228 4FF40073 		mov	r3, #512
 1170 022c CDF808A0 		str	r10, [sp, #8]
 1171 0230 8346     		mov	fp, r0
 1172              	.LVL126:
 1173 0232 B047     		blx	r6
 1174              	.LVL127:
 1175 0234 0921     		movs	r1, #9
 1176 0236 0722     		movs	r2, #7
 1177 0238 2B46     		mov	r3, r5
 1178 023a 2046     		mov	r0, r4
 1179              	.LBB897:
 1180              	.LBB898:
 1181              	.LBB899:
 1182              	.LBB900:
 1183              	.LBB901:
 1184              		.loc 3 142 0
 1185 023c CDF834B0 		str	fp, [sp, #52]
 1186              	.LBE901:
 1187              	.LBE900:
 1188              	.LBE899:
 1189              	.LBE898:
 1190              	.LBE897:
 113:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1191              		.loc 2 113 0
 1192 0240 C847     		blx	r9
 1193              	.LVL128:
 1194 0242 2846     		mov	r0, r5
 1195 0244 C047     		blx	r8
 1196              	.LVL129:
 115:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #if 0
 1197              		.loc 2 115 0
 1198 0246 059B     		ldr	r3, [sp, #20]
 1199 0248 2820     		movs	r0, #40
 1200 024a 9847     		blx	r3
 1201              	.LVL130:
 1202 024c BDF93010 		ldrsh	r1, [sp, #48]
 1203 0250 BDF93220 		ldrsh	r2, [sp, #50]
 1204 0254 CDF800A0 		str	r10, [sp]
 1205 0258 0197     		str	r7, [sp, #4]
 1206 025a 4FF48073 		mov	r3, #256
 1207 025e CDF808A0 		str	r10, [sp, #8]
 1208 0262 8346     		mov	fp, r0
 1209              	.LVL131:
 1210 0264 B047     		blx	r6
 1211              	.LVL132:
 1212 0266 2046     		mov	r0, r4
 1213 0268 0921     		movs	r1, #9
 1214              	.LBB902:
 1215              	.LBB903:
 1216              	.LBB904:
 1217              	.LBB905:
 1218              	.LBB906:
 1219              		.loc 3 142 0
 1220 026a CDF834B0 		str	fp, [sp, #52]
 1221              	.LBE906:
 1222              	.LBE905:
 1223              	.LBE904:
 1224              	.LBE903:
 1225              	.LBE902:
 115:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #if 0
 1226              		.loc 2 115 0
 1227 026e 0722     		movs	r2, #7
 1228 0270 2B46     		mov	r3, r5
 1229 0272 C847     		blx	r9
 1230              	.LVL133:
 1231 0274 2846     		mov	r0, r5
 1232 0276 C047     		blx	r8
 1233              	.LVL134:
 1234 0278 BAE0     		b	.L65
 1235              	.L75:
 1236 027a 00BF     		.align	2
 1237              	.L74:
 1238 027c 0E000000 		.word	.LC1
 1239 0280 00000000 		.word	slogf
 1240 0284 00000000 		.word	chan_to_object
 1241 0288 00000000 		.word	object_to_cam_bitmask
 1242 028c 2F000000 		.word	.LC2
 1243 0290 00000000 		.word	_ZNK9rectangle25minimum_capture_rectangleEt
 1244 0294 00000000 		.word	_ZNK9rectangle10image_sizeEt
 1245 0298 00000000 		.word	_Znaj4Heap
 1246 029c 00000000 		.word	_ZNSt10unique_ptrIA_cSt14default_deleteIS0_EE5resetEPc
 1247 02a0 00000000 		.word	_Znwj
 1248 02a4 00000000 		.word	_ZNKSt14default_deleteI14contrast_sweepEclEPS0_.isra.4
 1249 02a8 00000000 		.word	_ZN21lens_position_controlC1ER13cam_typedef_t
 1250 02ac 00000000 		.word	_ZNK21lens_position_control24get_hard_stop_hall_codesEPsS0_
 1251 02b0 4B000000 		.word	.LC3
 1252 02b4 00000000 		.word	_ZN21uniform_contrast_passC1Essstbb
 1253 02b8 00000000 		.word	_ZN9rectangleC1Esstt
 1254 02bc 00000000 		.word	_ZN14contrast_sweepC1ER13cam_typedef_ttRK9rectanglePvS5_mm
 1255 02c0 00000000 		.word	_ZN14contrast_sweep14add_iter_paramEN18contrast_processor11metric_typeES1_St10unique_ptrI13c
 1256 02c4 00000000 		.word	_ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED1Ev
 1257              	.LVL135:
 1258              	.L64:
 122:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1259              		.loc 2 122 0
 1260 02c8 9847     		blx	r3
 1261              	.LVL136:
 1262 02ca 4FF00109 		mov	r9, #1
 1263 02ce 4FF0080C 		mov	ip, #8
 1264 02d2 BDF93010 		ldrsh	r1, [sp, #48]
 1265 02d6 BDF93220 		ldrsh	r2, [sp, #50]
 1266 02da 8023     		movs	r3, #128
 1267 02dc CDF800C0 		str	ip, [sp]
 1268 02e0 4D4D     		ldr	r5, .L76
 1269              	.LVL137:
 1270 02e2 CDF80490 		str	r9, [sp, #4]
 1271 02e6 CDF80880 		str	r8, [sp, #8]
 1272 02ea CDF82CC0 		str	ip, [sp, #44]
 1273 02ee DFF834B1 		ldr	fp, .L76+12
 1274              	.LVL138:
 1275 02f2 DFF834A1 		ldr	r10, .L76+16
 1276              	.LVL139:
 124:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1277              		.loc 2 124 0
 1278 02f6 484E     		ldr	r6, .L76
 122:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1279              		.loc 2 122 0
 1280 02f8 0746     		mov	r7, r0
 1281 02fa A847     		blx	r5
 1282              	.LVL140:
 1283              	.LBB907:
 1284              	.LBB908:
 1285              	.LBB909:
 1286              	.LBB910:
 1287              	.LBB911:
 1288              		.loc 3 142 0
 1289 02fc 16AD     		add	r5, sp, #88
 1290              	.LBE911:
 1291              	.LBE910:
 1292              	.LBE909:
 1293              	.LBE908:
 1294              	.LBE907:
 122:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1295              		.loc 2 122 0
 1296 02fe 0921     		movs	r1, #9
 1297              	.LBB916:
 1298              	.LBB915:
 1299              	.LBB914:
 1300              	.LBB913:
 1301              	.LBB912:
 1302              		.loc 3 142 0
 1303 0300 45F8247D 		str	r7, [r5, #-36]!
 1304              	.LBE912:
 1305              	.LBE913:
 1306              	.LBE914:
 1307              	.LBE915:
 1308              	.LBE916:
 122:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1309              		.loc 2 122 0
 1310 0304 0722     		movs	r2, #7
 1311 0306 2B46     		mov	r3, r5
 1312 0308 2046     		mov	r0, r4
 1313 030a D847     		blx	fp
 1314              	.LVL141:
 1315 030c 2846     		mov	r0, r5
 1316 030e D047     		blx	r10
 1317              	.LVL142:
 124:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1318              		.loc 2 124 0
 1319 0310 059B     		ldr	r3, [sp, #20]
 1320 0312 2820     		movs	r0, #40
 1321 0314 9847     		blx	r3
 1322              	.LVL143:
 1323 0316 0423     		movs	r3, #4
 1324 0318 BDF93010 		ldrsh	r1, [sp, #48]
 1325 031c BDF93220 		ldrsh	r2, [sp, #50]
 1326 0320 8DE80802 		stmia	sp, {r3, r9}
 1327 0324 4023     		movs	r3, #64
 1328 0326 CDF80880 		str	r8, [sp, #8]
 1329 032a 0746     		mov	r7, r0
 1330              	.LVL144:
 1331 032c B047     		blx	r6
 1332              	.LVL145:
 1333 032e 0921     		movs	r1, #9
 1334 0330 0722     		movs	r2, #7
 1335 0332 2B46     		mov	r3, r5
 1336 0334 2046     		mov	r0, r4
 1337              	.LBB917:
 1338              	.LBB918:
 1339              	.LBB919:
 1340              	.LBB920:
 1341              	.LBB921:
 1342              		.loc 3 142 0
 1343 0336 0D97     		str	r7, [sp, #52]
 1344              	.LBE921:
 1345              	.LBE920:
 1346              	.LBE919:
 1347              	.LBE918:
 1348              	.LBE917:
 124:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1349              		.loc 2 124 0
 1350 0338 D847     		blx	fp
 1351              	.LVL146:
 1352 033a 2846     		mov	r0, r5
 1353 033c D047     		blx	r10
 1354              	.LVL147:
 126:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1355              		.loc 2 126 0
 1356 033e 059B     		ldr	r3, [sp, #20]
 1357 0340 2820     		movs	r0, #40
 1358 0342 9847     		blx	r3
 1359              	.LVL148:
 1360 0344 0423     		movs	r3, #4
 1361 0346 BDF93010 		ldrsh	r1, [sp, #48]
 1362 034a BDF93220 		ldrsh	r2, [sp, #50]
 1363 034e 8DE80802 		stmia	sp, {r3, r9}
 1364 0352 2023     		movs	r3, #32
 1365 0354 CDF80880 		str	r8, [sp, #8]
 1366 0358 0746     		mov	r7, r0
 1367              	.LVL149:
 1368 035a B047     		blx	r6
 1369              	.LVL150:
 1370 035c 0921     		movs	r1, #9
 1371 035e 0722     		movs	r2, #7
 1372 0360 2B46     		mov	r3, r5
 1373 0362 2046     		mov	r0, r4
 1374              	.LBB922:
 1375              	.LBB923:
 1376              	.LBB924:
 1377              	.LBB925:
 1378              	.LBB926:
 1379              		.loc 3 142 0
 1380 0364 0D97     		str	r7, [sp, #52]
 1381              	.LBE926:
 1382              	.LBE925:
 1383              	.LBE924:
 1384              	.LBE923:
 1385              	.LBE922:
 128:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1386              		.loc 2 128 0
 1387 0366 0227     		movs	r7, #2
 1388              	.LVL151:
 126:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1389              		.loc 2 126 0
 1390 0368 D847     		blx	fp
 1391              	.LVL152:
 1392 036a 2846     		mov	r0, r5
 1393 036c D047     		blx	r10
 1394              	.LVL153:
 128:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1395              		.loc 2 128 0
 1396 036e 059B     		ldr	r3, [sp, #20]
 1397 0370 2820     		movs	r0, #40
 1398 0372 9847     		blx	r3
 1399              	.LVL154:
 1400 0374 BDF93010 		ldrsh	r1, [sp, #48]
 1401 0378 BDF93220 		ldrsh	r2, [sp, #50]
 1402 037c 1023     		movs	r3, #16
 1403 037e 8DE88003 		stmia	sp, {r7, r8, r9}
 1404 0382 0A90     		str	r0, [sp, #40]
 1405 0384 B047     		blx	r6
 1406              	.LVL155:
 1407              	.LBB927:
 1408              	.LBB928:
 1409              	.LBB929:
 1410              	.LBB930:
 1411              	.LBB931:
 1412              		.loc 3 142 0
 1413 0386 0A9B     		ldr	r3, [sp, #40]
 1414              	.LBE931:
 1415              	.LBE930:
 1416              	.LBE929:
 1417              	.LBE928:
 1418              	.LBE927:
 128:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1419              		.loc 2 128 0
 1420 0388 0921     		movs	r1, #9
 1421 038a 0722     		movs	r2, #7
 1422              	.LBB936:
 1423              	.LBB935:
 1424              	.LBB934:
 1425              	.LBB933:
 1426              	.LBB932:
 1427              		.loc 3 142 0
 1428 038c 0D93     		str	r3, [sp, #52]
 1429              	.LBE932:
 1430              	.LBE933:
 1431              	.LBE934:
 1432              	.LBE935:
 1433              	.LBE936:
 128:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1434              		.loc 2 128 0
 1435 038e 2046     		mov	r0, r4
 1436 0390 2B46     		mov	r3, r5
 1437 0392 D847     		blx	fp
 1438              	.LVL156:
 1439 0394 2846     		mov	r0, r5
 1440 0396 D047     		blx	r10
 1441              	.LVL157:
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1442              		.loc 2 130 0
 1443 0398 059B     		ldr	r3, [sp, #20]
 1444 039a 2820     		movs	r0, #40
 1445 039c 9847     		blx	r3
 1446              	.LVL158:
 1447 039e DDF82CC0 		ldr	ip, [sp, #44]
 1448 03a2 6346     		mov	r3, ip
 1449 03a4 BDF93010 		ldrsh	r1, [sp, #48]
 1450 03a8 BDF93220 		ldrsh	r2, [sp, #50]
 1451 03ac 8DE88003 		stmia	sp, {r7, r8, r9}
 1452 03b0 0A90     		str	r0, [sp, #40]
 1453              	.LVL159:
 1454 03b2 B047     		blx	r6
 1455              	.LVL160:
 1456              	.LBB937:
 1457              	.LBB938:
 1458              	.LBB939:
 1459              	.LBB940:
 1460              	.LBB941:
 1461              		.loc 3 142 0
 1462 03b4 0A9B     		ldr	r3, [sp, #40]
 1463              	.LBE941:
 1464              	.LBE940:
 1465              	.LBE939:
 1466              	.LBE938:
 1467              	.LBE937:
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1468              		.loc 2 130 0
 1469 03b6 0921     		movs	r1, #9
 1470 03b8 0722     		movs	r2, #7
 1471              	.LBB946:
 1472              	.LBB945:
 1473              	.LBB944:
 1474              	.LBB943:
 1475              	.LBB942:
 1476              		.loc 3 142 0
 1477 03ba 0D93     		str	r3, [sp, #52]
 1478              	.LBE942:
 1479              	.LBE943:
 1480              	.LBE944:
 1481              	.LBE945:
 1482              	.LBE946:
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1483              		.loc 2 130 0
 1484 03bc 2046     		mov	r0, r4
 1485 03be 2B46     		mov	r3, r5
 1486 03c0 D847     		blx	fp
 1487              	.LVL161:
 1488 03c2 2846     		mov	r0, r5
 1489 03c4 D047     		blx	r10
 1490              	.LVL162:
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #if 0
 1491              		.loc 2 132 0
 1492 03c6 059B     		ldr	r3, [sp, #20]
 1493 03c8 2820     		movs	r0, #40
 1494 03ca 9847     		blx	r3
 1495              	.LVL163:
 1496 03cc BDF93010 		ldrsh	r1, [sp, #48]
 1497 03d0 BDF93220 		ldrsh	r2, [sp, #50]
 1498 03d4 0423     		movs	r3, #4
 1499 03d6 8DE88003 		stmia	sp, {r7, r8, r9}
 1500 03da 0590     		str	r0, [sp, #20]
 1501 03dc B047     		blx	r6
 1502              	.LVL164:
 1503              	.LBB947:
 1504              	.LBB948:
 1505              	.LBB949:
 1506              	.LBB950:
 1507              	.LBB951:
 1508              		.loc 3 142 0
 1509 03de 059B     		ldr	r3, [sp, #20]
 1510              	.LBE951:
 1511              	.LBE950:
 1512              	.LBE949:
 1513              	.LBE948:
 1514              	.LBE947:
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #if 0
 1515              		.loc 2 132 0
 1516 03e0 2046     		mov	r0, r4
 1517              	.LBB956:
 1518              	.LBB955:
 1519              	.LBB954:
 1520              	.LBB953:
 1521              	.LBB952:
 1522              		.loc 3 142 0
 1523 03e2 0D93     		str	r3, [sp, #52]
 1524              	.LBE952:
 1525              	.LBE953:
 1526              	.LBE954:
 1527              	.LBE955:
 1528              	.LBE956:
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** #if 0
 1529              		.loc 2 132 0
 1530 03e4 0921     		movs	r1, #9
 1531 03e6 0722     		movs	r2, #7
 1532 03e8 2B46     		mov	r3, r5
 1533 03ea D847     		blx	fp
 1534              	.LVL165:
 1535 03ec 2846     		mov	r0, r5
 1536 03ee D047     		blx	r10
 1537              	.LVL166:
 1538              	.L65:
 138:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cs.start_lens_move();
 1539              		.loc 2 138 0
 1540 03f0 2046     		mov	r0, r4
 1541 03f2 0EA9     		add	r1, sp, #56
 1542 03f4 094B     		ldr	r3, .L76+4
 1543 03f6 9847     		blx	r3
 1544              	.LVL167:
 139:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         }
 1545              		.loc 2 139 0
 1546 03f8 2046     		mov	r0, r4
 1547 03fa 094B     		ldr	r3, .L76+8
 1548 03fc 9847     		blx	r3
 1549              	.LVL168:
 1550              	.L60:
 1551              	.LBE868:
 1552              	.LBE867:
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         if ((cam_channel_bitmask & (1 << i)) != 0) {
 1553              		.loc 2 69 0 discriminator 2
 1554 03fe 089B     		ldr	r3, [sp, #32]
 1555 0400 0133     		adds	r3, r3, #1
 1556 0402 0893     		str	r3, [sp, #32]
 1557              	.LVL169:
 1558 0404 069B     		ldr	r3, [sp, #24]
 1559              	.LVL170:
 1560 0406 1433     		adds	r3, r3, #20
 1561 0408 0693     		str	r3, [sp, #24]
 1562 040a 089B     		ldr	r3, [sp, #32]
 1563 040c 062B     		cmp	r3, #6
 1564 040e 7FF406AE 		bne	.L66
 1565              	.LBE866:
 1566              	.LBE958:
 142:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 1567              		.loc 2 142 0
 1568 0412 17B0     		add	sp, sp, #92
 1569              	.LCFI10:
 1570              		.cfi_def_cfa_offset 36
 1571              		@ sp needed
 1572 0414 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1573              	.LVL171:
 1574              	.L77:
 1575              		.align	2
 1576              	.L76:
 1577 0418 00000000 		.word	_ZN21uniform_contrast_passC1Essstbb
 1578 041c 00000000 		.word	_ZN14contrast_sweep16initialize_sweepERK9rectangle
 1579 0420 00000000 		.word	_ZN14contrast_sweep15start_lens_moveEv
 1580 0424 00000000 		.word	_ZN14contrast_sweep14add_iter_paramEN18contrast_processor11metric_typeES1_St10unique_ptrI13c
 1581 0428 00000000 		.word	_ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED1Ev
 1582              		.cfi_endproc
 1583              	.LFE2312:
 1585              		.section	.text._ZN22contrast_sweep_manager15init_refinementEmm,"ax",%progbits
 1586              		.align	1
 1587              		.global	_ZN22contrast_sweep_manager15init_refinementEmm
 1588              		.thumb
 1589              		.thumb_func
 1591              	_ZN22contrast_sweep_manager15init_refinementEmm:
 1592              	.LFB2313:
 144:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
 1593              		.loc 2 144 0
 1594              		.cfi_startproc
 1595              		@ args = 0, pretend = 0, frame = 64
 1596              		@ frame_needed = 0, uses_anonymous_args = 0
 1597              	.LVL172:
 1598 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1599              	.LCFI11:
 1600              		.cfi_def_cfa_offset 36
 1601              		.cfi_offset 4, -36
 1602              		.cfi_offset 5, -32
 1603              		.cfi_offset 6, -28
 1604              		.cfi_offset 7, -24
 1605              		.cfi_offset 8, -20
 1606              		.cfi_offset 9, -16
 1607              		.cfi_offset 10, -12
 1608              		.cfi_offset 11, -8
 1609              		.cfi_offset 14, -4
 1610              	.LBB1014:
 145:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_channel_notdone_bitmask_ = cam_channel_bitmask;
 1611              		.loc 2 145 0
 1612 0004 0023     		movs	r3, #0
 1613              	.LBE1014:
 144:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
 1614              		.loc 2 144 0
 1615 0006 95B0     		sub	sp, sp, #84
 1616              	.LCFI12:
 1617              		.cfi_def_cfa_offset 120
 144:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
 1618              		.loc 2 144 0
 1619 0008 0546     		mov	r5, r0
 1620 000a 00F10C04 		add	r4, r0, #12
 1621              	.LBB1084:
 145:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_channel_notdone_bitmask_ = cam_channel_bitmask;
 1622              		.loc 2 145 0
 1623 000e 0360     		str	r3, [r0]
 1624              	.LBE1084:
 144:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
 1625              		.loc 2 144 0
 1626 0010 0691     		str	r1, [sp, #24]
 1627              	.LBB1085:
 146:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     btcm_used_size_ = 0;
 1628              		.loc 2 146 0
 1629 0012 6960     		str	r1, [r5, #4]
 1630              	.LBE1085:
 144:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     cam_bitmask_ = 0;
 1631              		.loc 2 144 0
 1632 0014 0792     		str	r2, [sp, #28]
 1633              	.LBB1086:
 147:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     std::uint16_t scale{CONTRAST_REFINE_SCALE};
 1634              		.loc 2 147 0
 1635 0016 C0F88030 		str	r3, [r0, #128]
 1636              	.LVL173:
 1637              	.LBB1015:
 149:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         if ((cam_channel_bitmask & (1 << i)) != 0) {
 1638              		.loc 2 149 0
 1639 001a 0493     		str	r3, [sp, #16]
 1640              	.LVL174:
 1641              	.L85:
 1642              	.LBB1016:
 150:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             // Channel i refinement
 1643              		.loc 2 150 0
 1644 001c 4FF00108 		mov	r8, #1
 1645 0020 049B     		ldr	r3, [sp, #16]
 1646 0022 069A     		ldr	r2, [sp, #24]
 1647 0024 08FA03F3 		lsl	r3, r8, r3
 1648 0028 1342     		tst	r3, r2
 1649 002a 00F01A81 		beq	.L79
 1650              	.LBB1017:
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cam_typedef_t *pcam = chan_to_object(i+1);
 1651              		.loc 2 152 0
 1652 002e 0821     		movs	r1, #8
 1653 0030 914A     		ldr	r2, .L93
 1654 0032 2B20     		movs	r0, #43
 1655 0034 914F     		ldr	r7, .L93+4
 1656 0036 049B     		ldr	r3, [sp, #16]
 1657 0038 B847     		blx	r7
 1658              	.LVL175:
 1659 003a 049B     		ldr	r3, [sp, #16]
 1660 003c 03EB0800 		add	r0, r3, r8
 153:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cam_bitmask_ |= object_to_cam_bitmask(pcam);
 1661              		.loc 2 153 0
 1662 0040 8F4B     		ldr	r3, .L93+8
 1663 0042 C0B2     		uxtb	r0, r0
 1664 0044 9847     		blx	r3
 1665              	.LVL176:
 154:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 1666              		.loc 2 154 0
 1667 0046 8F4B     		ldr	r3, .L93+12
 153:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cam_bitmask_ |= object_to_cam_bitmask(pcam);
 1668              		.loc 2 153 0
 1669 0048 0646     		mov	r6, r0
 1670              	.LVL177:
 154:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 1671              		.loc 2 154 0
 1672 004a 9847     		blx	r3
 1673              	.LVL178:
 1674 004c 2B68     		ldr	r3, [r5]
 156:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t top_y = pcam->cam_common_data.roi_rectangle.top_y;
 1675              		.loc 2 156 0
 1676 004e B6F80CB0 		ldrh	fp, [r6, #12]
 1677              	.LVL179:
 157:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t width = pcam->cam_common_data.roi_rectangle.width;
 1678              		.loc 2 157 0
 1679 0052 B6F80EA0 		ldrh	r10, [r6, #14]
 1680              	.LVL180:
 158:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::uint16_t height = pcam->cam_common_data.roi_rectangle.height;
 1681              		.loc 2 158 0
 1682 0056 B6F81090 		ldrh	r9, [r6, #16]
 1683              	.LVL181:
 159:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_DEBUG, "ROI: (%d, %d) - w: (%d, %d)", (int)left_x, (int)top_y, (int)width, (
 1684              		.loc 2 159 0
 1685 005a B6F812C0 		ldrh	ip, [r6, #18]
 1686              	.LVL182:
 160:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle roi(left_x, top_y, width, height);
 1687              		.loc 2 160 0
 1688 005e 1021     		movs	r1, #16
 1689 0060 CDF800A0 		str	r10, [sp]
 1690 0064 CDF80490 		str	r9, [sp, #4]
 1691 0068 CDF808C0 		str	ip, [sp, #8]
 1692 006c 864A     		ldr	r2, .L93+16
 1693 006e CDF814C0 		str	ip, [sp, #20]
 154:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 1694              		.loc 2 154 0
 1695 0072 1843     		orrs	r0, r0, r3
 160:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle roi(left_x, top_y, width, height);
 1696              		.loc 2 160 0
 1697 0074 5B46     		mov	r3, fp
 154:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 1698              		.loc 2 154 0
 1699 0076 2860     		str	r0, [r5]
 160:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle roi(left_x, top_y, width, height);
 1700              		.loc 2 160 0
 1701 0078 2B20     		movs	r0, #43
 1702 007a B847     		blx	r7
 1703              	.LVL183:
 161:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             rectangle capture_rect{roi.minimum_capture_rectangle(scale)};
 1704              		.loc 2 161 0
 1705 007c DDF814C0 		ldr	ip, [sp, #20]
 1706 0080 0FFA8AF2 		sxth	r2, r10
 1707 0084 4B46     		mov	r3, r9
 1708 0086 0FFA8BF1 		sxth	r1, fp
 1709 008a CDF800C0 		str	ip, [sp]
 1710 008e 0CA8     		add	r0, sp, #48
 1711 0090 DFF828C2 		ldr	ip, .L93+68
 1712 0094 B946     		mov	r9, r7
 1713              	.LVL184:
 1714 0096 E047     		blx	ip
 1715              	.LVL185:
 162:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::size_t img_size = capture_rect.image_size(scale);
 1716              		.loc 2 162 0
 1717 0098 0222     		movs	r2, #2
 1718 009a 0EA8     		add	r0, sp, #56
 1719 009c 0CA9     		add	r1, sp, #48
 1720 009e 7B4B     		ldr	r3, .L93+20
 1721 00a0 9847     		blx	r3
 1722              	.LVL186:
 163:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             csrec_arr_[i].image_size = img_size;
 1723              		.loc 2 163 0
 1724 00a2 7B4B     		ldr	r3, .L93+24
 1725 00a4 0EA8     		add	r0, sp, #56
 1726 00a6 0221     		movs	r1, #2
 1727 00a8 9847     		blx	r3
 1728              	.LVL187:
 1729 00aa 7A4F     		ldr	r7, .L93+28
 164:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::size_t btcm_free_size = BTCM_SIZE - btcm_used_size_;
 1730              		.loc 2 164 0
 1731 00ac A060     		str	r0, [r4, #8]
 163:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             csrec_arr_[i].image_size = img_size;
 1732              		.loc 2 163 0
 1733 00ae 8246     		mov	r10, r0
 1734              	.LVL188:
 165:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             if (img_size <= btcm_free_size) {
 1735              		.loc 2 165 0
 1736 00b0 D5F88030 		ldr	r3, [r5, #128]
 1737              	.LVL189:
 1738 00b4 C3F50032 		rsb	r2, r3, #131072
 1739              	.LVL190:
 166:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf_raw_p = reinterpret_cast<char*>(BTCM_BASE + btcm_used_size_
 1740              		.loc 2 166 0
 1741 00b8 9042     		cmp	r0, r2
 1742 00ba 0BD8     		bhi	.L80
 1743              	.LVL191:
 167:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf.reset();
 1744              		.loc 2 167 0
 1745 00bc 03F15073 		add	r3, r3, #54525952
 168:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 btcm_used_size_ += img_size;
 1746              		.loc 2 168 0
 1747 00c0 2046     		mov	r0, r4
 1748              	.LVL192:
 1749 00c2 0021     		movs	r1, #0
 167:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf.reset();
 1750              		.loc 2 167 0
 1751 00c4 6360     		str	r3, [r4, #4]
 1752              	.LVL193:
 168:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 btcm_used_size_ += img_size;
 1753              		.loc 2 168 0
 1754 00c6 B847     		blx	r7
 1755              	.LVL194:
 169:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             } else {
 1756              		.loc 2 169 0
 1757 00c8 D5F88030 		ldr	r3, [r5, #128]
 1758 00cc 5344     		add	r3, r3, r10
 1759 00ce C5F88030 		str	r3, [r5, #128]
 1760 00d2 06E0     		b	.L81
 1761              	.LVL195:
 1762              	.L80:
 171:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 csrec_arr_[i].image_buf.reset(csrec_arr_[i].image_buf_raw_p);
 1763              		.loc 2 171 0
 1764 00d4 4146     		mov	r1, r8
 1765 00d6 704B     		ldr	r3, .L93+32
 1766 00d8 9847     		blx	r3
 1767              	.LVL196:
 1768 00da 0146     		mov	r1, r0
 1769 00dc 6060     		str	r0, [r4, #4]
 1770              	.LVL197:
 172:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             }
 1771              		.loc 2 172 0
 1772 00de 2046     		mov	r0, r4
 1773 00e0 B847     		blx	r7
 1774              	.LVL198:
 1775              	.L81:
 177:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 1776              		.loc 2 177 0
 1777 00e2 6E4F     		ldr	r7, .L93+36
 1778 00e4 4FF4E870 		mov	r0, #464
 1779 00e8 D4F804A0 		ldr	r10, [r4, #4]
 1780              	.LVL199:
 1781 00ec B847     		blx	r7
 1782              	.LVL200:
 1783 00ee D5F88430 		ldr	r3, [r5, #132]
 1784 00f2 3146     		mov	r1, r6
 174:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t capture_event = CAPTURE_EVENT_CH0 << i;
 1785              		.loc 2 174 0
 1786 00f4 049A     		ldr	r2, [sp, #16]
 177:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 1787              		.loc 2 177 0
 1788 00f6 0193     		str	r3, [sp, #4]
 174:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t capture_event = CAPTURE_EVENT_CH0 << i;
 1789              		.loc 2 174 0
 1790 00f8 0123     		movs	r3, #1
 177:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 1791              		.loc 2 177 0
 1792 00fa CDF800A0 		str	r10, [sp]
 174:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             EventBits_t capture_event = CAPTURE_EVENT_CH0 << i;
 1793              		.loc 2 174 0
 1794 00fe 9340     		lsls	r3, r3, r2
 177:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 1795              		.loc 2 177 0
 1796 0100 DFF8BCC1 		ldr	ip, .L93+72
 1797 0104 0293     		str	r3, [sp, #8]
 175:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             csrec_arr_[i].cs.reset(new contrast_sweep(*pcam, scale, capture_rect, csrec_arr_[i].ima
 1798              		.loc 2 175 0
 1799 0106 4023     		movs	r3, #64
 1800 0108 9340     		lsls	r3, r3, r2
 177:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_sweep& cs = *csrec_arr_[i].cs.get();
 1801              		.loc 2 177 0
 1802 010a 0222     		movs	r2, #2
 1803 010c 0393     		str	r3, [sp, #12]
 1804 010e 0EAB     		add	r3, sp, #56
 1805 0110 8046     		mov	r8, r0
 1806 0112 E047     		blx	ip
 1807              	.LVL201:
 1808              	.LBB1018:
 1809              	.LBB1019:
 1810              	.LBB1020:
 1811              	.LBB1021:
 175:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 1812              		.loc 7 175 0
 1813 0114 54F8040C 		ldr	r0, [r4, #-4]
 1814              	.LVL202:
 1815 0118 0597     		str	r7, [sp, #20]
 1816              	.LVL203:
 1817              		.loc 7 176 0
 1818 011a 44F8048C 		str	r8, [r4, #-4]
 1819              	.LVL204:
 1820              	.LBE1021:
 1821              	.LBE1020:
 343:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  get_deleter()(__p);
 1822              		.loc 6 343 0
 1823 011e 08B1     		cbz	r0, .L82
 1824              	.LVL205:
 344:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 1825              		.loc 6 344 0
 1826 0120 5F4B     		ldr	r3, .L93+40
 1827 0122 9847     		blx	r3
 1828              	.LVL206:
 1829              	.L82:
 1830              	.LBE1019:
 1831              	.LBE1018:
 179:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::int16_t hc_disparity = lpc.get_hall_code(distance_mm, 300); // FIXME module temper
 1832              		.loc 2 179 0
 1833 0124 3146     		mov	r1, r6
 1834 0126 10A8     		add	r0, sp, #64
 1835 0128 5E4B     		ldr	r3, .L93+44
 1836              	.LBB1022:
 1837              	.LBB1023:
 305:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 
 1838              		.loc 6 305 0
 1839 012a 54F8047C 		ldr	r7, [r4, #-4]
 1840              	.LBE1023:
 1841              	.LBE1022:
 179:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             std::int16_t hc_disparity = lpc.get_hall_code(distance_mm, 300); // FIXME module temper
 1842              		.loc 2 179 0
 1843 012e 9847     		blx	r3
 1844              	.LVL207:
 180:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_DEBUG, "Hall code estimation for %umm distance: %d", (unsigned int)distance_
 1845              		.loc 2 180 0
 1846 0130 0799     		ldr	r1, [sp, #28]
 1847 0132 4FF49672 		mov	r2, #300
 1848 0136 5C4B     		ldr	r3, .L93+48
 1849 0138 10A8     		add	r0, sp, #64
 1850 013a 9847     		blx	r3
 1851              	.LVL208:
 181:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_processor::metric_type metric_coarse{contrast_processor::FILTERED_GRADIENT_TH}
 1852              		.loc 2 181 0
 1853 013c 1021     		movs	r1, #16
 1854 013e 5B4A     		ldr	r2, .L93+52
 1855 0140 079B     		ldr	r3, [sp, #28]
 1856 0142 0090     		str	r0, [sp]
 180:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             SLOGF(SLOG_DEBUG, "Hall code estimation for %umm distance: %d", (unsigned int)distance_
 1857              		.loc 2 180 0
 1858 0144 0646     		mov	r6, r0
 1859              	.LVL209:
 181:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             contrast_processor::metric_type metric_coarse{contrast_processor::FILTERED_GRADIENT_TH}
 1860              		.loc 2 181 0
 1861 0146 2B20     		movs	r0, #43
 1862              	.LVL210:
 1863 0148 C847     		blx	r9
 1864              	.LVL211:
 184:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1865              		.loc 2 184 0
 1866 014a 9DF844C0 		ldrb	ip, [sp, #68]	@ zero_extendqisi2
 1867 014e BCF1000F 		cmp	ip, #0
 1868 0152 3ED0     		beq	.L83
 186:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1869              		.loc 2 186 0
 1870 0154 059B     		ldr	r3, [sp, #20]
 1871 0156 6020     		movs	r0, #96
 1872 0158 9847     		blx	r3
 1873              	.LVL212:
 1874 015a 4FF00108 		mov	r8, #1
 1875 015e 3146     		mov	r1, r6
 1876 0160 4346     		mov	r3, r8
 1877 0162 CDF80080 		str	r8, [sp]
 1878 0166 4FF40062 		mov	r2, #2048
 1879 016a 514E     		ldr	r6, .L93+56
 1880              	.LVL213:
 1881 016c DFF854A1 		ldr	r10, .L93+76
 188:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1882              		.loc 2 188 0
 1883 0170 DFF854B1 		ldr	fp, .L93+80
 1884              	.LVL214:
 186:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1885              		.loc 2 186 0
 1886 0174 8146     		mov	r9, r0
 1887 0176 B047     		blx	r6
 1888              	.LVL215:
 1889              	.LBB1024:
 1890              	.LBB1025:
 1891              	.LBB1026:
 1892              	.LBB1027:
 1893              	.LBB1028:
 1894              		.loc 3 142 0
 1895 0178 14AE     		add	r6, sp, #80
 1896              	.LBE1028:
 1897              	.LBE1027:
 1898              	.LBE1026:
 1899              	.LBE1025:
 1900              	.LBE1024:
 186:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1901              		.loc 2 186 0
 1902 017a 0921     		movs	r1, #9
 1903              	.LBB1033:
 1904              	.LBB1032:
 1905              	.LBB1031:
 1906              	.LBB1030:
 1907              	.LBB1029:
 1908              		.loc 3 142 0
 1909 017c 46F8249D 		str	r9, [r6, #-36]!
 1910              	.LBE1029:
 1911              	.LBE1030:
 1912              	.LBE1031:
 1913              	.LBE1032:
 1914              	.LBE1033:
 186:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1915              		.loc 2 186 0
 1916 0180 0722     		movs	r2, #7
 1917 0182 3346     		mov	r3, r6
 1918 0184 3846     		mov	r0, r7
 1919 0186 D047     		blx	r10
 1920              	.LVL216:
 1921 0188 DFF84091 		ldr	r9, .L93+84
 1922              	.LVL217:
 1923 018c 3046     		mov	r0, r6
 1924 018e C847     		blx	r9
 1925              	.LVL218:
 188:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1926              		.loc 2 188 0
 1927 0190 059B     		ldr	r3, [sp, #20]
 1928 0192 4820     		movs	r0, #72
 1929 0194 9847     		blx	r3
 1930              	.LVL219:
 1931 0196 4146     		mov	r1, r8
 1932 0198 4246     		mov	r2, r8
 1933 019a 0890     		str	r0, [sp, #32]
 1934 019c D847     		blx	fp
 1935              	.LVL220:
 1936              	.LBB1034:
 1937              	.LBB1035:
 1938              	.LBB1036:
 1939              	.LBB1037:
 1940              	.LBB1038:
 1941              		.loc 3 142 0
 1942 019e 089B     		ldr	r3, [sp, #32]
 1943              	.LBE1038:
 1944              	.LBE1037:
 1945              	.LBE1036:
 1946              	.LBE1035:
 1947              	.LBE1034:
 188:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1948              		.loc 2 188 0
 1949 01a0 0921     		movs	r1, #9
 1950 01a2 0722     		movs	r2, #7
 1951              	.LBB1043:
 1952              	.LBB1042:
 1953              	.LBB1041:
 1954              	.LBB1040:
 1955              	.LBB1039:
 1956              		.loc 3 142 0
 1957 01a4 0B93     		str	r3, [sp, #44]
 1958              	.LBE1039:
 1959              	.LBE1040:
 1960              	.LBE1041:
 1961              	.LBE1042:
 1962              	.LBE1043:
 188:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 1963              		.loc 2 188 0
 1964 01a6 3846     		mov	r0, r7
 1965 01a8 3346     		mov	r3, r6
 1966 01aa D047     		blx	r10
 1967              	.LVL221:
 1968 01ac 3046     		mov	r0, r6
 1969 01ae C847     		blx	r9
 1970              	.LVL222:
 190:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             } else {
 1971              		.loc 2 190 0
 1972 01b0 059B     		ldr	r3, [sp, #20]
 1973 01b2 4820     		movs	r0, #72
 1974 01b4 9847     		blx	r3
 1975              	.LVL223:
 1976 01b6 4146     		mov	r1, r8
 1977 01b8 0022     		movs	r2, #0
 1978 01ba 0590     		str	r0, [sp, #20]
 1979 01bc D847     		blx	fp
 1980              	.LVL224:
 1981              	.LBB1044:
 1982              	.LBB1045:
 1983              	.LBB1046:
 1984              	.LBB1047:
 1985              	.LBB1048:
 1986              		.loc 3 142 0
 1987 01be 059B     		ldr	r3, [sp, #20]
 1988              	.LBE1048:
 1989              	.LBE1047:
 1990              	.LBE1046:
 1991              	.LBE1045:
 1992              	.LBE1044:
 190:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             } else {
 1993              		.loc 2 190 0
 1994 01c0 3846     		mov	r0, r7
 1995              	.LBB1053:
 1996              	.LBB1052:
 1997              	.LBB1051:
 1998              	.LBB1050:
 1999              	.LBB1049:
 2000              		.loc 3 142 0
 2001 01c2 0B93     		str	r3, [sp, #44]
 2002              	.LBE1049:
 2003              	.LBE1050:
 2004              	.LBE1051:
 2005              	.LBE1052:
 2006              	.LBE1053:
 190:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             } else {
 2007              		.loc 2 190 0
 2008 01c4 0921     		movs	r1, #9
 2009 01c6 0722     		movs	r2, #7
 2010 01c8 3346     		mov	r3, r6
 2011 01ca D047     		blx	r10
 2012              	.LVL225:
 2013 01cc 3046     		mov	r0, r6
 2014 01ce C847     		blx	r9
 2015              	.LVL226:
 2016 01d0 40E0     		b	.L84
 2017              	.LVL227:
 2018              	.L83:
 193:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 2019              		.loc 2 193 0
 2020 01d2 059B     		ldr	r3, [sp, #20]
 2021 01d4 6020     		movs	r0, #96
 2022 01d6 CDF824C0 		str	ip, [sp, #36]
 2023 01da 9847     		blx	r3
 2024              	.LVL228:
 2025 01dc 4FF00109 		mov	r9, #1
 2026 01e0 3146     		mov	r1, r6
 2027 01e2 4022     		movs	r2, #64
 2028 01e4 0223     		movs	r3, #2
 2029 01e6 324E     		ldr	r6, .L93+56
 2030              	.LVL229:
 2031 01e8 CDF80090 		str	r9, [sp]
 2032 01ec DFF8D4B0 		ldr	fp, .L93+76
 2033              	.LVL230:
 195:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 2034              		.loc 2 195 0
 2035 01f0 DFF8D4A0 		ldr	r10, .L93+80
 193:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 2036              		.loc 2 193 0
 2037 01f4 8046     		mov	r8, r0
 2038 01f6 B047     		blx	r6
 2039              	.LVL231:
 2040              	.LBB1054:
 2041              	.LBB1055:
 2042              	.LBB1056:
 2043              	.LBB1057:
 2044              	.LBB1058:
 2045              		.loc 3 142 0
 2046 01f8 14AE     		add	r6, sp, #80
 2047              	.LBE1058:
 2048              	.LBE1057:
 2049              	.LBE1056:
 2050              	.LBE1055:
 2051              	.LBE1054:
 193:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 2052              		.loc 2 193 0
 2053 01fa 0921     		movs	r1, #9
 2054              	.LBB1063:
 2055              	.LBB1062:
 2056              	.LBB1061:
 2057              	.LBB1060:
 2058              	.LBB1059:
 2059              		.loc 3 142 0
 2060 01fc 46F8248D 		str	r8, [r6, #-36]!
 2061              	.LBE1059:
 2062              	.LBE1060:
 2063              	.LBE1061:
 2064              	.LBE1062:
 2065              	.LBE1063:
 193:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 2066              		.loc 2 193 0
 2067 0200 0722     		movs	r2, #7
 2068 0202 3346     		mov	r3, r6
 2069 0204 3846     		mov	r0, r7
 2070 0206 D847     		blx	fp
 2071              	.LVL232:
 2072 0208 DFF8C080 		ldr	r8, .L93+84
 2073              	.LVL233:
 2074 020c 3046     		mov	r0, r6
 2075 020e C047     		blx	r8
 2076              	.LVL234:
 195:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 2077              		.loc 2 195 0
 2078 0210 059B     		ldr	r3, [sp, #20]
 2079 0212 4820     		movs	r0, #72
 2080 0214 9847     		blx	r3
 2081              	.LVL235:
 2082 0216 4946     		mov	r1, r9
 2083 0218 4A46     		mov	r2, r9
 2084 021a 0890     		str	r0, [sp, #32]
 2085 021c D047     		blx	r10
 2086              	.LVL236:
 2087              	.LBB1064:
 2088              	.LBB1065:
 2089              	.LBB1066:
 2090              	.LBB1067:
 2091              	.LBB1068:
 2092              		.loc 3 142 0
 2093 021e 089B     		ldr	r3, [sp, #32]
 2094              	.LBE1068:
 2095              	.LBE1067:
 2096              	.LBE1066:
 2097              	.LBE1065:
 2098              	.LBE1064:
 195:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 2099              		.loc 2 195 0
 2100 0220 0921     		movs	r1, #9
 2101 0222 0722     		movs	r2, #7
 2102              	.LBB1073:
 2103              	.LBB1072:
 2104              	.LBB1071:
 2105              	.LBB1070:
 2106              	.LBB1069:
 2107              		.loc 3 142 0
 2108 0224 0B93     		str	r3, [sp, #44]
 2109              	.LBE1069:
 2110              	.LBE1070:
 2111              	.LBE1071:
 2112              	.LBE1072:
 2113              	.LBE1073:
 195:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****                 cs.add_iter_param(metric_coarse, metric_fine,
 2114              		.loc 2 195 0
 2115 0226 3846     		mov	r0, r7
 2116 0228 3346     		mov	r3, r6
 2117 022a D847     		blx	fp
 2118              	.LVL237:
 2119 022c 3046     		mov	r0, r6
 2120 022e C047     		blx	r8
 2121              	.LVL238:
 197:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             }
 2122              		.loc 2 197 0
 2123 0230 059B     		ldr	r3, [sp, #20]
 2124 0232 4820     		movs	r0, #72
 2125 0234 9847     		blx	r3
 2126              	.LVL239:
 2127 0236 DDF824C0 		ldr	ip, [sp, #36]
 2128 023a 6246     		mov	r2, ip
 2129 023c 4946     		mov	r1, r9
 2130 023e 0590     		str	r0, [sp, #20]
 2131 0240 D047     		blx	r10
 2132              	.LVL240:
 2133              	.LBB1074:
 2134              	.LBB1075:
 2135              	.LBB1076:
 2136              	.LBB1077:
 2137              	.LBB1078:
 2138              		.loc 3 142 0
 2139 0242 059B     		ldr	r3, [sp, #20]
 2140              	.LBE1078:
 2141              	.LBE1077:
 2142              	.LBE1076:
 2143              	.LBE1075:
 2144              	.LBE1074:
 197:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             }
 2145              		.loc 2 197 0
 2146 0244 3846     		mov	r0, r7
 2147              	.LBB1083:
 2148              	.LBB1082:
 2149              	.LBB1081:
 2150              	.LBB1080:
 2151              	.LBB1079:
 2152              		.loc 3 142 0
 2153 0246 0B93     		str	r3, [sp, #44]
 2154              	.LBE1079:
 2155              	.LBE1080:
 2156              	.LBE1081:
 2157              	.LBE1082:
 2158              	.LBE1083:
 197:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             }
 2159              		.loc 2 197 0
 2160 0248 0921     		movs	r1, #9
 2161 024a 0722     		movs	r2, #7
 2162 024c 3346     		mov	r3, r6
 2163 024e D847     		blx	fp
 2164              	.LVL241:
 2165 0250 3046     		mov	r0, r6
 2166 0252 C047     		blx	r8
 2167              	.LVL242:
 2168              	.L84:
 199:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****             cs.start_lens_move();
 2169              		.loc 2 199 0
 2170 0254 3846     		mov	r0, r7
 2171 0256 0CA9     		add	r1, sp, #48
 2172 0258 164B     		ldr	r3, .L93+60
 2173 025a 9847     		blx	r3
 2174              	.LVL243:
 200:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         }
 2175              		.loc 2 200 0
 2176 025c 3846     		mov	r0, r7
 2177 025e 164B     		ldr	r3, .L93+64
 2178 0260 9847     		blx	r3
 2179              	.LVL244:
 2180              	.L79:
 2181              	.LBE1017:
 2182              	.LBE1016:
 149:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****         if ((cam_channel_bitmask & (1 << i)) != 0) {
 2183              		.loc 2 149 0 discriminator 2
 2184 0262 049B     		ldr	r3, [sp, #16]
 2185 0264 1434     		adds	r4, r4, #20
 2186 0266 0133     		adds	r3, r3, #1
 2187 0268 062B     		cmp	r3, #6
 2188 026a 0493     		str	r3, [sp, #16]
 2189              	.LVL245:
 2190 026c 7FF4D6AE 		bne	.L85
 2191              	.LBE1015:
 2192              	.LBE1086:
 203:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 2193              		.loc 2 203 0
 2194 0270 15B0     		add	sp, sp, #84
 2195              	.LCFI13:
 2196              		.cfi_def_cfa_offset 36
 2197              		@ sp needed
 2198 0272 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2199              	.LVL246:
 2200              	.L94:
 2201 0276 00BF     		.align	2
 2202              	.L93:
 2203 0278 5E000000 		.word	.LC4
 2204 027c 00000000 		.word	slogf
 2205 0280 00000000 		.word	chan_to_object
 2206 0284 00000000 		.word	object_to_cam_bitmask
 2207 0288 2F000000 		.word	.LC2
 2208 028c 00000000 		.word	_ZNK9rectangle25minimum_capture_rectangleEt
 2209 0290 00000000 		.word	_ZNK9rectangle10image_sizeEt
 2210 0294 00000000 		.word	_ZNSt10unique_ptrIA_cSt14default_deleteIS0_EE5resetEPc
 2211 0298 00000000 		.word	_Znaj4Heap
 2212 029c 00000000 		.word	_Znwj
 2213 02a0 00000000 		.word	_ZNKSt14default_deleteI14contrast_sweepEclEPS0_.isra.4
 2214 02a4 00000000 		.word	_ZN21lens_position_controlC1ER13cam_typedef_t
 2215 02a8 00000000 		.word	_ZNK21lens_position_control13get_hall_codeEms
 2216 02ac 7F000000 		.word	.LC5
 2217 02b0 00000000 		.word	_ZN24max_search_contrast_passC1Esstb
 2218 02b4 00000000 		.word	_ZN14contrast_sweep16initialize_sweepERK9rectangle
 2219 02b8 00000000 		.word	_ZN14contrast_sweep15start_lens_moveEv
 2220 02bc 00000000 		.word	_ZN9rectangleC1Esstt
 2221 02c0 00000000 		.word	_ZN14contrast_sweepC1ER13cam_typedef_ttRK9rectanglePvS5_mm
 2222 02c4 00000000 		.word	_ZN14contrast_sweep14add_iter_paramEN18contrast_processor11metric_typeES1_St10unique_ptrI13c
 2223 02c8 00000000 		.word	_ZN27binary_refine_contrast_passC1Etb
 2224 02cc 00000000 		.word	_ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED1Ev
 2225              		.cfi_endproc
 2226              	.LFE2313:
 2228              		.section	.text._ZN22contrast_sweep_managerD2Ev,"ax",%progbits
 2229              		.align	1
 2230              		.global	_ZN22contrast_sweep_managerD2Ev
 2231              		.thumb
 2232              		.thumb_func
 2234              	_ZN22contrast_sweep_managerD2Ev:
 2235              	.LFB2309:
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     vEventGroupDelete(event_group_);
 2236              		.loc 2 39 0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240              	.LVL247:
 2241 0000 70B5     		push	{r4, r5, r6, lr}
 2242              	.LCFI14:
 2243              		.cfi_def_cfa_offset 16
 2244              		.cfi_offset 4, -16
 2245              		.cfi_offset 5, -12
 2246              		.cfi_offset 6, -8
 2247              		.cfi_offset 14, -4
 2248              	.LBB1104:
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
 2249              		.loc 2 40 0
 2250 0002 0C4B     		ldr	r3, .L106
 2251              	.LBE1104:
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     vEventGroupDelete(event_group_);
 2252              		.loc 2 39 0
 2253 0004 0546     		mov	r5, r0
 2254              	.LBB1116:
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
 2255              		.loc 2 40 0
 2256 0006 D0F88400 		ldr	r0, [r0, #132]
 2257              	.LVL248:
 2258              	.LBB1105:
 2259              	.LBB1106:
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     {
 2260              		.loc 5 81 0
 2261 000a 05F10806 		add	r6, r5, #8
 2262              	.LBE1106:
 2263              	.LBE1105:
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
 2264              		.loc 2 40 0
 2265 000e 9847     		blx	r3
 2266              	.LVL249:
 2267              	.LBB1115:
 2268              	.LBB1114:
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     {
 2269              		.loc 5 81 0
 2270 0010 05F18004 		add	r4, r5, #128
 2271              	.L99:
 2272 0014 B442     		cmp	r4, r6
 2273 0016 0AD0     		beq	.L96
 2274 0018 143C     		subs	r4, r4, #20
 2275              	.LVL250:
 2276              	.LBB1107:
 2277              	.LBB1108:
 2278              	.LBB1109:
 483:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  get_deleter()(__ptr);
 2279              		.loc 6 483 0
 2280 001a 6068     		ldr	r0, [r4, #4]
 2281 001c 08B1     		cbz	r0, .L97
 2282              	.LVL251:
 2283              	.LBB1110:
 2284              	.LBB1111:
 119:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h ****       }
 2285              		.loc 6 119 0
 2286 001e 064B     		ldr	r3, .L106+4
 2287 0020 9847     		blx	r3
 2288              	.LVL252:
 2289              	.L97:
 2290              	.LBE1111:
 2291              	.LBE1110:
 2292              	.LBE1109:
 2293              	.LBE1108:
 2294              	.LBB1112:
 2295              	.LBB1113:
 235:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	  get_deleter()(__ptr);
 2296              		.loc 6 235 0
 2297 0022 2068     		ldr	r0, [r4]
 2298 0024 0028     		cmp	r0, #0
 2299 0026 F5D0     		beq	.L99
 2300              	.LVL253:
 236:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/unique_ptr.h **** 	__ptr = pointer();
 2301              		.loc 6 236 0
 2302 0028 044B     		ldr	r3, .L106+8
 2303 002a 9847     		blx	r3
 2304              	.LVL254:
 2305 002c F2E7     		b	.L99
 2306              	.LVL255:
 2307              	.L96:
 2308              	.LBE1113:
 2309              	.LBE1112:
 2310              	.LBE1107:
 2311              	.LBE1114:
 2312              	.LBE1115:
 2313              	.LBE1116:
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 2314              		.loc 2 41 0
 2315 002e 2846     		mov	r0, r5
 2316 0030 70BD     		pop	{r4, r5, r6, pc}
 2317              	.LVL256:
 2318              	.L107:
 2319 0032 00BF     		.align	2
 2320              	.L106:
 2321 0034 00000000 		.word	vEventGroupDelete
 2322 0038 00000000 		.word	_ZdaPv
 2323 003c 00000000 		.word	_ZNKSt14default_deleteI14contrast_sweepEclEPS0_.isra.4
 2324              		.cfi_endproc
 2325              	.LFE2309:
 2327              		.global	_ZN22contrast_sweep_managerD1Ev
 2328              		.thumb_set _ZN22contrast_sweep_managerD1Ev,_ZN22contrast_sweep_managerD2Ev
 2329              		.section	.text.contrast_full_sweep,"ax",%progbits
 2330              		.align	1
 2331              		.global	contrast_full_sweep
 2332              		.thumb
 2333              		.thumb_func
 2335              	contrast_full_sweep:
 2336              	.LFB2247:
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     contrast_sweep_manager csm;
 2337              		.loc 2 29 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 136
 2340              		@ frame_needed = 0, uses_anonymous_args = 0
 2341              	.LVL257:
 2342 0000 10B5     		push	{r4, lr}
 2343              	.LCFI15:
 2344              		.cfi_def_cfa_offset 8
 2345              		.cfi_offset 4, -8
 2346              		.cfi_offset 14, -4
 2347 0002 A2B0     		sub	sp, sp, #136
 2348              	.LCFI16:
 2349              		.cfi_def_cfa_offset 144
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     contrast_sweep_manager csm;
 2350              		.loc 2 29 0
 2351 0004 0446     		mov	r4, r0
 2352              	.LBB1117:
  30:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     csm.init_full_sweep(cam_channel_bitmask);
 2353              		.loc 2 30 0
 2354 0006 6846     		mov	r0, sp
 2355              	.LVL258:
 2356 0008 074B     		ldr	r3, .L109
 2357 000a 9847     		blx	r3
 2358              	.LVL259:
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp ****     return csm.execute_sweep();
 2359              		.loc 2 31 0
 2360 000c 2146     		mov	r1, r4
 2361 000e 6846     		mov	r0, sp
 2362 0010 064B     		ldr	r3, .L109+4
 2363 0012 9847     		blx	r3
 2364              	.LVL260:
  32:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** }
 2365              		.loc 2 32 0
 2366 0014 6846     		mov	r0, sp
 2367 0016 064B     		ldr	r3, .L109+8
 2368 0018 9847     		blx	r3
 2369              	.LVL261:
 2370 001a 064B     		ldr	r3, .L109+12
 2371 001c 0446     		mov	r4, r0
 2372              	.LVL262:
 2373 001e 6846     		mov	r0, sp
 2374 0020 9847     		blx	r3
 2375              	.LVL263:
 2376              	.LBE1117:
  33:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_sweep_manager.cpp **** 
 2377              		.loc 2 33 0
 2378 0022 2046     		mov	r0, r4
 2379 0024 22B0     		add	sp, sp, #136
 2380              	.LCFI17:
 2381              		.cfi_def_cfa_offset 8
 2382              		@ sp needed
 2383 0026 10BD     		pop	{r4, pc}
 2384              	.L110:
 2385              		.align	2
 2386              	.L109:
 2387 0028 00000000 		.word	_ZN22contrast_sweep_managerC2Ev
 2388 002c 00000000 		.word	_ZN22contrast_sweep_manager15init_full_sweepEm
 2389 0030 00000000 		.word	_ZN22contrast_sweep_manager13execute_sweepEv
 2390 0034 00000000 		.word	_ZN22contrast_sweep_managerD2Ev
 2391              		.cfi_endproc
 2392              	.LFE2247:
 2394              		.section	.rodata.str1.1,"aMS",%progbits,1
 2395              	.LC0:
 2396 0000 53776565 		.ascii	"Sweep has run\000"
 2396      70206861 
 2396      73207275 
 2396      6E00
 2397              	.LC1:
 2398 000e 53746172 		.ascii	"Starting full sweep of cam ch %d\000"
 2398      74696E67 
 2398      2066756C 
 2398      6C207377 
 2398      65657020 
 2399              	.LC2:
 2400 002f 524F493A 		.ascii	"ROI: (%d, %d) - w: (%d, %d)\000"
 2400      20282564 
 2400      2C202564 
 2400      29202D20 
 2400      773A2028 
 2401              	.LC3:
 2402 004b 48617264 		.ascii	"Hard stops: %d, %d\000"
 2402      2073746F 
 2402      70733A20 
 2402      25642C20 
 2402      256400
 2403              	.LC4:
 2404 005e 53746172 		.ascii	"Starting refinement of cam ch %d\000"
 2404      74696E67 
 2404      20726566 
 2404      696E656D 
 2404      656E7420 
 2405              	.LC5:
 2406 007f 48616C6C 		.ascii	"Hall code estimation for %umm distance: %d\000"
 2406      20636F64 
 2406      65206573 
 2406      74696D61 
 2406      74696F6E 
 2407              		.text
 2408              	.Letext0:
 2409              		.file 9 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/type_traits"
 2410              		.file 10 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/except
 2411              		.file 11 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/arm-none-ea
 2412              		.file 12 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/stl_pa
 2413              		.file 13 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/new"
 2414              		.file 14 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/alloca
 2415              		.file 15 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/cwchar"
 2416              		.file 16 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/uses_a
 2417              		.file 17 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/char_t
 2418              		.file 18 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/cstdint"
 2419              		.file 19 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/clocale"
 2420              		.file 20 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/basic_
 2421              		.file 21 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/basic_
 2422              		.file 22 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/shared
 2423              		.file 23 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset"
 2424              		.file 24 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/atomic
 2425              		.file 25 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/atomic"
 2426              		.file 26 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/cpp_ty
 2427              		.file 27 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/debug/debug
 2428              		.file 28 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/predef
 2429              		.file 29 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/ext/new_all
 2430              		.file 30 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/ext/numeric
 2431              		.file 31 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/ext/concurr
 2432              		.file 32 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/lib/gcc/arm-none-eabi/4.9.3/include/stddef.
 2433              		.file 33 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/machine/_default_type
 2434              		.file 34 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/sys/lock.h"
 2435              		.file 35 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/sys/_types.h"
 2436              		.file 36 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/sys/reent.h"
 2437              		.file 37 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.
 2438              		.file 38 "<built-in>"
 2439              		.file 39 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/wchar.h"
 2440              		.file 40 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/arm-none-ea
 2441              		.file 41 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/stdint.h"
 2442              		.file 42 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/locale.h"
 2443              		.file 43 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/portable/GCC/cortex-r4/portmacr
 2444              		.file 44 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/include/queue.h"
 2445              		.file 45 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/include/semphr.h"
 2446              		.file 46 "/home/tienluong/workspace/atlantis_fw/platform/os/Source/include/event_groups.h"
 2447              		.file 47 "/home/tienluong/workspace/atlantis_fw/platform/asic/hal/include/hal_syncio.h"
 2448              		.file 48 "/home/tienluong/workspace/atlantis_fw/platform/asic/hal/include/hal_i2c.h"
 2449              		.file 49 "/home/tienluong/workspace/atlantis_fw/platform/asic/hal/include/hal_mipi2axi.h"
 2450              		.file 50 "/home/tienluong/workspace/atlantis_fw/platform/common/lcc_system.h"
 2451              		.file 51 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/img_sensor.h"
 2452              		.file 52 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/optical.h"
 2453              		.file 53 "/home/tienluong/workspace/atlantis_fw/platform/driver/include/eeprom.h"
 2454              		.file 54 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/light_system.h"
 2455              		.file 55 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_pass.h"
 2456              		.file 56 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/af_helper.h"
 2457              		.file 57 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/lens_position_control.h"
 2458              		.file 58 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/image_pixel_iter.h"
 2459              		.file 59 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h"
 2460              		.file 60 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_refine_step.h"
 2461              		.file 61 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/operator_new.h"
DEFINED SYMBOLS
                            *ABS*:00000000 contrast_sweep_manager.cpp
     /tmp/ccreP95n.s:19     .text._ZNK9rectangle10image_sizeEt:00000000 $t
     /tmp/ccreP95n.s:24     .text._ZNK9rectangle10image_sizeEt:00000000 _ZNK9rectangle10image_sizeEt
     /tmp/ccreP95n.s:129    .text._ZN22contrast_sweep_managerC2Ev:00000000 $t
     /tmp/ccreP95n.s:134    .text._ZN22contrast_sweep_managerC2Ev:00000000 _ZN22contrast_sweep_managerC2Ev
     /tmp/ccreP95n.s:240    .text._ZN22contrast_sweep_managerC2Ev:00000038 $d
     /tmp/ccreP95n.s:134    .text._ZN22contrast_sweep_managerC2Ev:00000000 _ZN22contrast_sweep_managerC1Ev
     /tmp/ccreP95n.s:247    .text._ZN22contrast_sweep_manager19process_move_eventsEm:00000000 $t
     /tmp/ccreP95n.s:252    .text._ZN22contrast_sweep_manager19process_move_eventsEm:00000000 _ZN22contrast_sweep_manager19process_move_eventsEm
     /tmp/ccreP95n.s:332    .text._ZN22contrast_sweep_manager19process_move_eventsEm:00000038 $d
     /tmp/ccreP95n.s:337    .text._ZNSt10unique_ptrIA_cSt14default_deleteIS0_EE5resetEPc:00000000 $t
     /tmp/ccreP95n.s:342    .text._ZNSt10unique_ptrIA_cSt14default_deleteIS0_EE5resetEPc:00000000 _ZNSt10unique_ptrIA_cSt14default_deleteIS0_EE5resetEPc
     /tmp/ccreP95n.s:384    .text._ZNSt10unique_ptrIA_cSt14default_deleteIS0_EE5resetEPc:00000010 $d
     /tmp/ccreP95n.s:392    .text._ZN22contrast_sweep_manager13execute_sweepEv:00000000 $t
     /tmp/ccreP95n.s:397    .text._ZN22contrast_sweep_manager13execute_sweepEv:00000000 _ZN22contrast_sweep_manager13execute_sweepEv
     /tmp/ccreP95n.s:591    .text._ZN22contrast_sweep_manager13execute_sweepEv:000000a4 $d
     /tmp/ccreP95n.s:603    .text._ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED2Ev:00000000 $t
     /tmp/ccreP95n.s:608    .text._ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED2Ev:00000000 _ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED2Ev
     /tmp/ccreP95n.s:608    .text._ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED2Ev:00000000 _ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED1Ev
     /tmp/ccreP95n.s:648    .text._ZNKSt14default_deleteI14contrast_sweepEclEPS0_.isra.4:00000000 $t
     /tmp/ccreP95n.s:652    .text._ZNKSt14default_deleteI14contrast_sweepEclEPS0_.isra.4:00000000 _ZNKSt14default_deleteI14contrast_sweepEclEPS0_.isra.4
     /tmp/ccreP95n.s:721    .text._ZNKSt14default_deleteI14contrast_sweepEclEPS0_.isra.4:00000028 $d
     /tmp/ccreP95n.s:728    .text._ZN22contrast_sweep_manager15init_full_sweepEm:00000000 $t
     /tmp/ccreP95n.s:733    .text._ZN22contrast_sweep_manager15init_full_sweepEm:00000000 _ZN22contrast_sweep_manager15init_full_sweepEm
     /tmp/ccreP95n.s:1238   .text._ZN22contrast_sweep_manager15init_full_sweepEm:0000027c $d
     /tmp/ccreP95n.s:1260   .text._ZN22contrast_sweep_manager15init_full_sweepEm:000002c8 $t
     /tmp/ccreP95n.s:1577   .text._ZN22contrast_sweep_manager15init_full_sweepEm:00000418 $d
     /tmp/ccreP95n.s:1586   .text._ZN22contrast_sweep_manager15init_refinementEmm:00000000 $t
     /tmp/ccreP95n.s:1591   .text._ZN22contrast_sweep_manager15init_refinementEmm:00000000 _ZN22contrast_sweep_manager15init_refinementEmm
     /tmp/ccreP95n.s:2203   .text._ZN22contrast_sweep_manager15init_refinementEmm:00000278 $d
     /tmp/ccreP95n.s:2229   .text._ZN22contrast_sweep_managerD2Ev:00000000 $t
     /tmp/ccreP95n.s:2234   .text._ZN22contrast_sweep_managerD2Ev:00000000 _ZN22contrast_sweep_managerD2Ev
     /tmp/ccreP95n.s:2321   .text._ZN22contrast_sweep_managerD2Ev:00000034 $d
     /tmp/ccreP95n.s:2234   .text._ZN22contrast_sweep_managerD2Ev:00000000 _ZN22contrast_sweep_managerD1Ev
     /tmp/ccreP95n.s:2330   .text.contrast_full_sweep:00000000 $t
     /tmp/ccreP95n.s:2335   .text.contrast_full_sweep:00000000 contrast_full_sweep
     /tmp/ccreP95n.s:2387   .text.contrast_full_sweep:00000028 $d
                     .debug_frame:00000010 $d
                           .group:00000000 _ZNSt10unique_ptrI13contrast_passSt14default_deleteIS0_EED5Ev

UNDEFINED SYMBOLS
xEventGroupCreate
_ZN14contrast_sweep19start_capture_frameEv
_ZdaPv
xEventGroupWaitBits
invalidate_cache
_ZN14contrast_sweep22process_captured_frameEv
_ZN14contrast_sweep15start_lens_moveEv
slogf
_ZN20contrast_refine_stepD1Ev
_ZdlPv
chan_to_object
object_to_cam_bitmask
_ZNK9rectangle25minimum_capture_rectangleEt
_Znaj4Heap
_Znwj
_ZN21lens_position_controlC1ER13cam_typedef_t
_ZNK21lens_position_control24get_hard_stop_hall_codesEPsS0_
_ZN21uniform_contrast_passC1Essstbb
_ZN9rectangleC1Esstt
_ZN14contrast_sweepC1ER13cam_typedef_ttRK9rectanglePvS5_mm
_ZN14contrast_sweep14add_iter_paramEN18contrast_processor11metric_typeES1_St10unique_ptrI13contrast_passSt14default_deleteIS3_EE
_ZN14contrast_sweep16initialize_sweepERK9rectangle
_ZNK21lens_position_control13get_hall_codeEms
_ZN24max_search_contrast_passC1Esstb
_ZN27binary_refine_contrast_passC1Etb
vEventGroupDelete
