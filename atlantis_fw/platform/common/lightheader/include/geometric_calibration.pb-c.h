/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: geometric_calibration.proto */

#ifndef PROTOBUF_C_geometric_5fcalibration_2eproto__INCLUDED
#define PROTOBUF_C_geometric_5fcalibration_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "mirror_system.pb-c.h"
#include "matrix3x3f.pb-c.h"
#include "point3f.pb-c.h"
#include "distortion.pb-c.h"
#include "range2f.pb-c.h"
#include "device_temp.pb-c.h"
#include "point2f.pb-c.h"

typedef struct _Ltpb__GeometricCalibration Ltpb__GeometricCalibration;
typedef struct _Ltpb__GeometricCalibration__Intrinsics Ltpb__GeometricCalibration__Intrinsics;
typedef struct _Ltpb__GeometricCalibration__Extrinsics Ltpb__GeometricCalibration__Extrinsics;
typedef struct _Ltpb__GeometricCalibration__Extrinsics__CanonicalFormat Ltpb__GeometricCalibration__Extrinsics__CanonicalFormat;
typedef struct _Ltpb__GeometricCalibration__Extrinsics__MovableMirrorFormat Ltpb__GeometricCalibration__Extrinsics__MovableMirrorFormat;
typedef struct _Ltpb__GeometricCalibration__CalibrationFocusBundle Ltpb__GeometricCalibration__CalibrationFocusBundle;
typedef struct _Ltpb__GeometricCalibration__AngleOpticalCenterMapping Ltpb__GeometricCalibration__AngleOpticalCenterMapping;


/* --- enums --- */

typedef enum _Ltpb__GeometricCalibration__MirrorType {
  /*
   * No mirror attached with the module
   */
  LTPB__GEOMETRIC_CALIBRATION__MIRROR_TYPE__NONE = 0,
  /*
   * Mirror attached to the module is Glued i.e., cannot move
   */
  LTPB__GEOMETRIC_CALIBRATION__MIRROR_TYPE__GLUED = 1,
  /*
   * Mirror attached to the module is moveable
   */
  LTPB__GEOMETRIC_CALIBRATION__MIRROR_TYPE__MOVABLE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LTPB__GEOMETRIC_CALIBRATION__MIRROR_TYPE)
} Ltpb__GeometricCalibration__MirrorType;

/* --- messages --- */

/*
 * Intrinsics at one object distance (focus distance) and a given temperature
 */
struct  _Ltpb__GeometricCalibration__Intrinsics
{
  ProtobufCMessage base;
  /*
   * Intrinsic matrix in a 3x3 matrix format: [fx,0,cx; 0,fy,cy; 0,0,1]
   * fx, fy, cx, cy are in pixels
   */
  Ltpb__Matrix3x3F *k_mat;
  /*
   * RMS error when the intrinsics were computed
   */
  protobuf_c_boolean has_rms_error;
  float rms_error;
};
#define LTPB__GEOMETRIC_CALIBRATION__INTRINSICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__geometric_calibration__intrinsics__descriptor) \
    , NULL, 0,0 }


/*
 * * If mirror_type = None or Glued, use rotation matrix and translation vector 
 */
struct  _Ltpb__GeometricCalibration__Extrinsics__CanonicalFormat
{
  ProtobufCMessage base;
  /*
   * Rotation of module in the global coordinate system  (attached with A1)
   */
  Ltpb__Matrix3x3F *rotation;
  /*
   * Translation of the module in mm 
   */
  Ltpb__Point3F *translation;
  /*
   * Reprojection error at the stereo calibration stage (in pixels)
   */
  protobuf_c_boolean has_stereo_error;
  float stereo_error;
  /*
   * Final reprojection error after bundle adjustment (in pixels)
   */
  protobuf_c_boolean has_reprojection_error;
  float reprojection_error;
};
#define LTPB__GEOMETRIC_CALIBRATION__EXTRINSICS__CANONICAL_FORMAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__geometric_calibration__extrinsics__canonical_format__descriptor) \
    , NULL, NULL, 0,0, 0,0 }


/*
 * * If mirror_type = Moveable, we require MirrorSystem and MirrorActuatorMapping
 */
struct  _Ltpb__GeometricCalibration__Extrinsics__MovableMirrorFormat
{
  ProtobufCMessage base;
  /*
   * Parameters that define the entire mirror system
   */
  Ltpb__MirrorSystem *mirror_system;
  /*
   * Actuator hall code to mirror angle mapping
   */
  Ltpb__MirrorActuatorMapping *mirror_actuator_mapping;
};
#define LTPB__GEOMETRIC_CALIBRATION__EXTRINSICS__MOVABLE_MIRROR_FORMAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__geometric_calibration__extrinsics__movable_mirror_format__descriptor) \
    , NULL, NULL }


/*
 * Parameters representing the extrinsics of the module
 */
struct  _Ltpb__GeometricCalibration__Extrinsics
{
  ProtobufCMessage base;
  Ltpb__GeometricCalibration__Extrinsics__CanonicalFormat *canonical;
  Ltpb__GeometricCalibration__Extrinsics__MovableMirrorFormat *moveable_mirror;
};
#define LTPB__GEOMETRIC_CALIBRATION__EXTRINSICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__geometric_calibration__extrinsics__descriptor) \
    , NULL, NULL }


struct  _Ltpb__GeometricCalibration__CalibrationFocusBundle
{
  ProtobufCMessage base;
  /*
   * Distance at which the module was focused (i.e., Object distance ) in mm
   */
  float focus_distance;
  Ltpb__GeometricCalibration__Intrinsics *intrinsics;
  Ltpb__GeometricCalibration__Extrinsics *extrinsics;
  /*
   * sensor temperature at the time of calibration (in C)
   */
  protobuf_c_boolean has_sensor_temp;
  int32_t sensor_temp;
  /*
   * device temparature at the time of calibration
   */
  Ltpb__DeviceTemp *device_temp;
};
#define LTPB__GEOMETRIC_CALIBRATION__CALIBRATION_FOCUS_BUNDLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__geometric_calibration__calibration_focus_bundle__descriptor) \
    , 0, NULL, NULL, 0,0, NULL }


struct  _Ltpb__GeometricCalibration__AngleOpticalCenterMapping
{
  ProtobufCMessage base;
  /*
   * optical center in pixels (sensor coordinates 0,0 -- top-left)
   */
  Ltpb__Point2F *center_start;
  Ltpb__Point2F *center_end;
  /*
   * in radians
   */
  float angle_offset;
  /*
   * neccessary for lint between center_start and center_end
   */
  float t_scale;
  /*
   * as above
   */
  float t_offset;
};
#define LTPB__GEOMETRIC_CALIBRATION__ANGLE_OPTICAL_CENTER_MAPPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__geometric_calibration__angle_optical_center_mapping__descriptor) \
    , NULL, NULL, 0, 0, 0 }


/*
 * All the fields for geometric calibration
 */
struct  _Ltpb__GeometricCalibration
{
  ProtobufCMessage base;
  protobuf_c_boolean has_mirror_type;
  Ltpb__GeometricCalibration__MirrorType mirror_type;
  /*
   * Intrinsics and extrinsics computed at multiple object distances.
   */
  size_t n_per_focus_calibration;
  Ltpb__GeometricCalibration__CalibrationFocusBundle **per_focus_calibration;
  /*
   * Distortion model -- both Polynomial model and CRA model
   */
  Ltpb__Distortion *distortion;
  /*
   * Range of the lens hall code at the factory calibration temperature
   */
  Ltpb__Range2F *lens_hall_code_range;
  /*
   * Min value = macro distance for the lens
   * Max value = hyper focal distance for the lens
   */
  Ltpb__Range2F *focus_distance_range;
  /*
   * Used in optical zoom computation
   */
  Ltpb__GeometricCalibration__AngleOpticalCenterMapping *angle_optical_center_mapping;
};
#define LTPB__GEOMETRIC_CALIBRATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__geometric_calibration__descriptor) \
    , 0,0, 0,NULL, NULL, NULL, NULL, NULL }


/* Ltpb__GeometricCalibration__Intrinsics methods */
void   ltpb__geometric_calibration__intrinsics__init
                     (Ltpb__GeometricCalibration__Intrinsics         *message);
/* Ltpb__GeometricCalibration__Extrinsics__CanonicalFormat methods */
void   ltpb__geometric_calibration__extrinsics__canonical_format__init
                     (Ltpb__GeometricCalibration__Extrinsics__CanonicalFormat         *message);
/* Ltpb__GeometricCalibration__Extrinsics__MovableMirrorFormat methods */
void   ltpb__geometric_calibration__extrinsics__movable_mirror_format__init
                     (Ltpb__GeometricCalibration__Extrinsics__MovableMirrorFormat         *message);
/* Ltpb__GeometricCalibration__Extrinsics methods */
void   ltpb__geometric_calibration__extrinsics__init
                     (Ltpb__GeometricCalibration__Extrinsics         *message);
/* Ltpb__GeometricCalibration__CalibrationFocusBundle methods */
void   ltpb__geometric_calibration__calibration_focus_bundle__init
                     (Ltpb__GeometricCalibration__CalibrationFocusBundle         *message);
/* Ltpb__GeometricCalibration__AngleOpticalCenterMapping methods */
void   ltpb__geometric_calibration__angle_optical_center_mapping__init
                     (Ltpb__GeometricCalibration__AngleOpticalCenterMapping         *message);
/* Ltpb__GeometricCalibration methods */
void   ltpb__geometric_calibration__init
                     (Ltpb__GeometricCalibration         *message);
size_t ltpb__geometric_calibration__get_packed_size
                     (const Ltpb__GeometricCalibration   *message);
size_t ltpb__geometric_calibration__pack
                     (const Ltpb__GeometricCalibration   *message,
                      uint8_t             *out);
size_t ltpb__geometric_calibration__pack_to_buffer
                     (const Ltpb__GeometricCalibration   *message,
                      ProtobufCBuffer     *buffer);
Ltpb__GeometricCalibration *
       ltpb__geometric_calibration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ltpb__geometric_calibration__free_unpacked
                     (Ltpb__GeometricCalibration *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ltpb__GeometricCalibration__Intrinsics_Closure)
                 (const Ltpb__GeometricCalibration__Intrinsics *message,
                  void *closure_data);
typedef void (*Ltpb__GeometricCalibration__Extrinsics__CanonicalFormat_Closure)
                 (const Ltpb__GeometricCalibration__Extrinsics__CanonicalFormat *message,
                  void *closure_data);
typedef void (*Ltpb__GeometricCalibration__Extrinsics__MovableMirrorFormat_Closure)
                 (const Ltpb__GeometricCalibration__Extrinsics__MovableMirrorFormat *message,
                  void *closure_data);
typedef void (*Ltpb__GeometricCalibration__Extrinsics_Closure)
                 (const Ltpb__GeometricCalibration__Extrinsics *message,
                  void *closure_data);
typedef void (*Ltpb__GeometricCalibration__CalibrationFocusBundle_Closure)
                 (const Ltpb__GeometricCalibration__CalibrationFocusBundle *message,
                  void *closure_data);
typedef void (*Ltpb__GeometricCalibration__AngleOpticalCenterMapping_Closure)
                 (const Ltpb__GeometricCalibration__AngleOpticalCenterMapping *message,
                  void *closure_data);
typedef void (*Ltpb__GeometricCalibration_Closure)
                 (const Ltpb__GeometricCalibration *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ltpb__geometric_calibration__descriptor;
extern const ProtobufCMessageDescriptor ltpb__geometric_calibration__intrinsics__descriptor;
extern const ProtobufCMessageDescriptor ltpb__geometric_calibration__extrinsics__descriptor;
extern const ProtobufCMessageDescriptor ltpb__geometric_calibration__extrinsics__canonical_format__descriptor;
extern const ProtobufCMessageDescriptor ltpb__geometric_calibration__extrinsics__movable_mirror_format__descriptor;
extern const ProtobufCMessageDescriptor ltpb__geometric_calibration__calibration_focus_bundle__descriptor;
extern const ProtobufCMessageDescriptor ltpb__geometric_calibration__angle_optical_center_mapping__descriptor;
extern const ProtobufCEnumDescriptor    ltpb__geometric_calibration__mirror_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_geometric_5fcalibration_2eproto__INCLUDED */
