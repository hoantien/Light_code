/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: hw_info.proto */

#ifndef PROTOBUF_C_hw_5finfo_2eproto__INCLUDED
#define PROTOBUF_C_hw_5finfo_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "sensor_type.pb-c.h"
#include "camera_id.pb-c.h"

typedef struct _Ltpb__CameraModuleHwInfo Ltpb__CameraModuleHwInfo;
typedef struct _Ltpb__HwInfo Ltpb__HwInfo;


/* --- enums --- */

typedef enum _Ltpb__CameraModuleHwInfo__LensType {
  LTPB__CAMERA_MODULE_HW_INFO__LENS_TYPE__LENS_UNKNOWN = 0,
  LTPB__CAMERA_MODULE_HW_INFO__LENS_TYPE__LENS_SHOWIN = 1,
  LTPB__CAMERA_MODULE_HW_INFO__LENS_TYPE__LENS_LARGAN = 2,
  LTPB__CAMERA_MODULE_HW_INFO__LENS_TYPE__LENS_SUNNY = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LTPB__CAMERA_MODULE_HW_INFO__LENS_TYPE)
} Ltpb__CameraModuleHwInfo__LensType;
typedef enum _Ltpb__CameraModuleHwInfo__LensActuatorType {
  LTPB__CAMERA_MODULE_HW_INFO__LENS_ACTUATOR_TYPE__LENS_ACTUATOR_UNKNOWN = 0,
  LTPB__CAMERA_MODULE_HW_INFO__LENS_ACTUATOR_TYPE__LENS_ACTUATOR_SHICOH = 1,
  LTPB__CAMERA_MODULE_HW_INFO__LENS_ACTUATOR_TYPE__LENS_ACTUATOR_PZT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LTPB__CAMERA_MODULE_HW_INFO__LENS_ACTUATOR_TYPE)
} Ltpb__CameraModuleHwInfo__LensActuatorType;
typedef enum _Ltpb__CameraModuleHwInfo__MirrorActuatorType {
  LTPB__CAMERA_MODULE_HW_INFO__MIRROR_ACTUATOR_TYPE__MIRROR_ACTUATOR_UNKNOWN = 0,
  LTPB__CAMERA_MODULE_HW_INFO__MIRROR_ACTUATOR_TYPE__MIRROR_ACTUATOR_PZT = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LTPB__CAMERA_MODULE_HW_INFO__MIRROR_ACTUATOR_TYPE)
} Ltpb__CameraModuleHwInfo__MirrorActuatorType;
typedef enum _Ltpb__CameraModuleHwInfo__MirrorType {
  LTPB__CAMERA_MODULE_HW_INFO__MIRROR_TYPE__MIRROR_UNKNOWN = 0,
  LTPB__CAMERA_MODULE_HW_INFO__MIRROR_TYPE__MIRROR_DIELECTRIC_SNX = 1,
  LTPB__CAMERA_MODULE_HW_INFO__MIRROR_TYPE__MIRROR_SILVER_ZUISHO = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LTPB__CAMERA_MODULE_HW_INFO__MIRROR_TYPE)
} Ltpb__CameraModuleHwInfo__MirrorType;
typedef enum _Ltpb__HwInfo__FlashType {
  LTPB__HW_INFO__FLASH_TYPE__FLASH_UNKNOWN = 0,
  LTPB__HW_INFO__FLASH_TYPE__FLASH_OSRAM_CBLPM1 = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LTPB__HW_INFO__FLASH_TYPE)
} Ltpb__HwInfo__FlashType;
typedef enum _Ltpb__HwInfo__ToFType {
  LTPB__HW_INFO__TO_FTYPE__TOF_UNKNOWN = 0,
  LTPB__HW_INFO__TO_FTYPE__TOF_STMICRO_VL53L0 = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LTPB__HW_INFO__TO_FTYPE)
} Ltpb__HwInfo__ToFType;
typedef enum _Ltpb__HwInfo__ModelType {
  LTPB__HW_INFO__MODEL_TYPE__MODEL_P1 = 0,
  LTPB__HW_INFO__MODEL_TYPE__MODEL_P1_1 = 1,
  LTPB__HW_INFO__MODEL_TYPE__MODEL_P2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LTPB__HW_INFO__MODEL_TYPE)
} Ltpb__HwInfo__ModelType;

/* --- messages --- */

struct  _Ltpb__CameraModuleHwInfo
{
  ProtobufCMessage base;
  Ltpb__CameraID id;
  Ltpb__SensorType sensor;
  protobuf_c_boolean has_lens;
  Ltpb__CameraModuleHwInfo__LensType lens;
  protobuf_c_boolean has_mirror_actuator;
  Ltpb__CameraModuleHwInfo__MirrorActuatorType mirror_actuator;
  protobuf_c_boolean has_mirror;
  Ltpb__CameraModuleHwInfo__MirrorType mirror;
};
#define LTPB__CAMERA_MODULE_HW_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__camera_module_hw_info__descriptor) \
    , 0, 0, 0,LTPB__CAMERA_MODULE_HW_INFO__LENS_TYPE__LENS_UNKNOWN, 0,LTPB__CAMERA_MODULE_HW_INFO__MIRROR_ACTUATOR_TYPE__MIRROR_ACTUATOR_UNKNOWN, 0,LTPB__CAMERA_MODULE_HW_INFO__MIRROR_TYPE__MIRROR_UNKNOWN }


struct  _Ltpb__HwInfo
{
  ProtobufCMessage base;
  size_t n_camera;
  Ltpb__CameraModuleHwInfo **camera;
  protobuf_c_boolean has_flash;
  Ltpb__HwInfo__FlashType flash;
  protobuf_c_boolean has_tof;
  Ltpb__HwInfo__ToFType tof;
  protobuf_c_boolean has_model;
  Ltpb__HwInfo__ModelType model;
};
#define LTPB__HW_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__hw_info__descriptor) \
    , 0,NULL, 0,LTPB__HW_INFO__FLASH_TYPE__FLASH_UNKNOWN, 0,LTPB__HW_INFO__TO_FTYPE__TOF_UNKNOWN, 0,0 }


/* Ltpb__CameraModuleHwInfo methods */
void   ltpb__camera_module_hw_info__init
                     (Ltpb__CameraModuleHwInfo         *message);
size_t ltpb__camera_module_hw_info__get_packed_size
                     (const Ltpb__CameraModuleHwInfo   *message);
size_t ltpb__camera_module_hw_info__pack
                     (const Ltpb__CameraModuleHwInfo   *message,
                      uint8_t             *out);
size_t ltpb__camera_module_hw_info__pack_to_buffer
                     (const Ltpb__CameraModuleHwInfo   *message,
                      ProtobufCBuffer     *buffer);
Ltpb__CameraModuleHwInfo *
       ltpb__camera_module_hw_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ltpb__camera_module_hw_info__free_unpacked
                     (Ltpb__CameraModuleHwInfo *message,
                      ProtobufCAllocator *allocator);
/* Ltpb__HwInfo methods */
void   ltpb__hw_info__init
                     (Ltpb__HwInfo         *message);
size_t ltpb__hw_info__get_packed_size
                     (const Ltpb__HwInfo   *message);
size_t ltpb__hw_info__pack
                     (const Ltpb__HwInfo   *message,
                      uint8_t             *out);
size_t ltpb__hw_info__pack_to_buffer
                     (const Ltpb__HwInfo   *message,
                      ProtobufCBuffer     *buffer);
Ltpb__HwInfo *
       ltpb__hw_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ltpb__hw_info__free_unpacked
                     (Ltpb__HwInfo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ltpb__CameraModuleHwInfo_Closure)
                 (const Ltpb__CameraModuleHwInfo *message,
                  void *closure_data);
typedef void (*Ltpb__HwInfo_Closure)
                 (const Ltpb__HwInfo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ltpb__camera_module_hw_info__descriptor;
extern const ProtobufCEnumDescriptor    ltpb__camera_module_hw_info__lens_type__descriptor;
extern const ProtobufCEnumDescriptor    ltpb__camera_module_hw_info__lens_actuator_type__descriptor;
extern const ProtobufCEnumDescriptor    ltpb__camera_module_hw_info__mirror_actuator_type__descriptor;
extern const ProtobufCEnumDescriptor    ltpb__camera_module_hw_info__mirror_type__descriptor;
extern const ProtobufCMessageDescriptor ltpb__hw_info__descriptor;
extern const ProtobufCEnumDescriptor    ltpb__hw_info__flash_type__descriptor;
extern const ProtobufCEnumDescriptor    ltpb__hw_info__to_ftype__descriptor;
extern const ProtobufCEnumDescriptor    ltpb__hw_info__model_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_hw_5finfo_2eproto__INCLUDED */
