/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: vignetting_characterization.proto */

#ifndef PROTOBUF_C_vignetting_5fcharacterization_2eproto__INCLUDED
#define PROTOBUF_C_vignetting_5fcharacterization_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "matrix4x4f.pb-c.h"

typedef struct _Ltpb__VignettingCharacterization Ltpb__VignettingCharacterization;
typedef struct _Ltpb__VignettingCharacterization__CrosstalkModel Ltpb__VignettingCharacterization__CrosstalkModel;
typedef struct _Ltpb__VignettingCharacterization__VignettingModel Ltpb__VignettingCharacterization__VignettingModel;
typedef struct _Ltpb__VignettingCharacterization__MirrorVignettingModel Ltpb__VignettingCharacterization__MirrorVignettingModel;


/* --- enums --- */


/* --- messages --- */

/*
 * The cross-talk model is a grid of correction matrices to remove color cross-talk.
 * The grid's top-left and bottom-right vertices are located in the corresponding corners
 * of the image data.
 */
struct  _Ltpb__VignettingCharacterization__CrosstalkModel
{
  ProtobufCMessage base;
  /*
   * the width of the grid in vertices
   */
  uint32_t width;
  /*
   * the height of the grid in vertices
   */
  uint32_t height;
  /*
   * vertices data
   */
  size_t n_data;
  Ltpb__Matrix4x4F **data;
  /*
   * vertices data in row-major 4x4 matrix format
   * this field stores the same information as "data" but
   * is  packed more densely.
   */
  size_t n_data_packed;
  float *data_packed;
};
#define LTPB__VIGNETTING_CHARACTERIZATION__CROSSTALK_MODEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__vignetting_characterization__crosstalk_model__descriptor) \
    , 0, 0, 0,NULL, 0,NULL }


/*
 * The vignetting model is just a grid of correction values to remove vignetting.
 * The grid's top-left and bottom-right vertices are located in the corresponding corners
 * of the image data.
 */
struct  _Ltpb__VignettingCharacterization__VignettingModel
{
  ProtobufCMessage base;
  /*
   * the width of the grid in vertices
   */
  uint32_t width;
  /*
   * the height of the grid in vertices
   */
  uint32_t height;
  /*
   * vertices data
   */
  size_t n_data;
  float *data;
};
#define LTPB__VIGNETTING_CHARACTERIZATION__VIGNETTING_MODEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__vignetting_characterization__vignetting_model__descriptor) \
    , 0, 0, 0,NULL }


struct  _Ltpb__VignettingCharacterization__MirrorVignettingModel
{
  ProtobufCMessage base;
  /*
   * mirror HAL register value for this vignetting profile
   */
  int32_t hall_code;
  Ltpb__VignettingCharacterization__VignettingModel *vignetting;
};
#define LTPB__VIGNETTING_CHARACTERIZATION__MIRROR_VIGNETTING_MODEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__vignetting_characterization__mirror_vignetting_model__descriptor) \
    , 0, NULL }


/*
 * This defines the vignetting/crosstalk models for each module. Glue units will only have "mirror position" for vignetting
 */
struct  _Ltpb__VignettingCharacterization
{
  ProtobufCMessage base;
  /*
   * cross-talk model description
   */
  Ltpb__VignettingCharacterization__CrosstalkModel *crosstalk;
  /*
   * per mirror position vignetting description
   */
  size_t n_vignetting;
  Ltpb__VignettingCharacterization__MirrorVignettingModel **vignetting;
};
#define LTPB__VIGNETTING_CHARACTERIZATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__vignetting_characterization__descriptor) \
    , NULL, 0,NULL }


/* Ltpb__VignettingCharacterization__CrosstalkModel methods */
void   ltpb__vignetting_characterization__crosstalk_model__init
                     (Ltpb__VignettingCharacterization__CrosstalkModel         *message);
/* Ltpb__VignettingCharacterization__VignettingModel methods */
void   ltpb__vignetting_characterization__vignetting_model__init
                     (Ltpb__VignettingCharacterization__VignettingModel         *message);
/* Ltpb__VignettingCharacterization__MirrorVignettingModel methods */
void   ltpb__vignetting_characterization__mirror_vignetting_model__init
                     (Ltpb__VignettingCharacterization__MirrorVignettingModel         *message);
/* Ltpb__VignettingCharacterization methods */
void   ltpb__vignetting_characterization__init
                     (Ltpb__VignettingCharacterization         *message);
size_t ltpb__vignetting_characterization__get_packed_size
                     (const Ltpb__VignettingCharacterization   *message);
size_t ltpb__vignetting_characterization__pack
                     (const Ltpb__VignettingCharacterization   *message,
                      uint8_t             *out);
size_t ltpb__vignetting_characterization__pack_to_buffer
                     (const Ltpb__VignettingCharacterization   *message,
                      ProtobufCBuffer     *buffer);
Ltpb__VignettingCharacterization *
       ltpb__vignetting_characterization__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ltpb__vignetting_characterization__free_unpacked
                     (Ltpb__VignettingCharacterization *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ltpb__VignettingCharacterization__CrosstalkModel_Closure)
                 (const Ltpb__VignettingCharacterization__CrosstalkModel *message,
                  void *closure_data);
typedef void (*Ltpb__VignettingCharacterization__VignettingModel_Closure)
                 (const Ltpb__VignettingCharacterization__VignettingModel *message,
                  void *closure_data);
typedef void (*Ltpb__VignettingCharacterization__MirrorVignettingModel_Closure)
                 (const Ltpb__VignettingCharacterization__MirrorVignettingModel *message,
                  void *closure_data);
typedef void (*Ltpb__VignettingCharacterization_Closure)
                 (const Ltpb__VignettingCharacterization *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ltpb__vignetting_characterization__descriptor;
extern const ProtobufCMessageDescriptor ltpb__vignetting_characterization__crosstalk_model__descriptor;
extern const ProtobufCMessageDescriptor ltpb__vignetting_characterization__vignetting_model__descriptor;
extern const ProtobufCMessageDescriptor ltpb__vignetting_characterization__mirror_vignetting_model__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_vignetting_5fcharacterization_2eproto__INCLUDED */
