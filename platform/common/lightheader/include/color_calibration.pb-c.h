/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: color_calibration.proto */

#ifndef PROTOBUF_C_color_5fcalibration_2eproto__INCLUDED
#define PROTOBUF_C_color_5fcalibration_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "matrix3x3f.pb-c.h"
#include "point3f.pb-c.h"
#include "point2f.pb-c.h"

typedef struct _Ltpb__ColorCalibration Ltpb__ColorCalibration;


/* --- enums --- */

typedef enum _Ltpb__ColorCalibration__IlluminantType {
  LTPB__COLOR_CALIBRATION__ILLUMINANT_TYPE__A = 0,
  LTPB__COLOR_CALIBRATION__ILLUMINANT_TYPE__D50 = 1,
  LTPB__COLOR_CALIBRATION__ILLUMINANT_TYPE__D65 = 2,
  LTPB__COLOR_CALIBRATION__ILLUMINANT_TYPE__D75 = 3,
  LTPB__COLOR_CALIBRATION__ILLUMINANT_TYPE__F2 = 4,
  LTPB__COLOR_CALIBRATION__ILLUMINANT_TYPE__F7 = 5,
  LTPB__COLOR_CALIBRATION__ILLUMINANT_TYPE__F11 = 6,
  LTPB__COLOR_CALIBRATION__ILLUMINANT_TYPE__TL84 = 7,
  LTPB__COLOR_CALIBRATION__ILLUMINANT_TYPE__UNKNOWN = 99
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LTPB__COLOR_CALIBRATION__ILLUMINANT_TYPE)
} Ltpb__ColorCalibration__IlluminantType;

/* --- messages --- */

struct  _Ltpb__ColorCalibration
{
  ProtobufCMessage base;
  Ltpb__ColorCalibration__IlluminantType type;
  /*
   * forward matrix transforms colors from camera RGB to XYZ D50 space
   * Properties:
   * * is WB normalized, [1 1 1] maps to D50 white-point coords
   * * includes chromatic adaptation from the calibration illuminant to D50
   */
  Ltpb__Matrix3x3F *forward_matrix;
  /*
   * color matrix transforms colors from XYZ to camera RGB space
   * Properties:
   * * D50 white-point maps to (R, 1, B) (R/B can be arbitrary)
   */
  Ltpb__Matrix3x3F *color_matrix;
  /*
   * Red / green ratio
   */
  float rg_ratio;
  /*
   * Blue / green ratio
   */
  float bg_ratio;
  /*
   * measurements of 24 MacBeth ColorChecker patches stored in top-left to bottom-right order
   * values are stored in linear RGB sensor space but have been corrected for spatial
   * non-uniformity and black-level
   */
  size_t n_macbeth_data;
  Ltpb__Point3F **macbeth_data;
  /*
   * Spectral data of the illuminant stored in vector of [light wavelength in nm, relative irradiance] pairs
   */
  size_t n_illuminant_spd;
  Ltpb__Point2F **illuminant_spd;
};
#define LTPB__COLOR_CALIBRATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ltpb__color_calibration__descriptor) \
    , 0, NULL, NULL, 0, 0, 0,NULL, 0,NULL }


/* Ltpb__ColorCalibration methods */
void   ltpb__color_calibration__init
                     (Ltpb__ColorCalibration         *message);
size_t ltpb__color_calibration__get_packed_size
                     (const Ltpb__ColorCalibration   *message);
size_t ltpb__color_calibration__pack
                     (const Ltpb__ColorCalibration   *message,
                      uint8_t             *out);
size_t ltpb__color_calibration__pack_to_buffer
                     (const Ltpb__ColorCalibration   *message,
                      ProtobufCBuffer     *buffer);
Ltpb__ColorCalibration *
       ltpb__color_calibration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ltpb__color_calibration__free_unpacked
                     (Ltpb__ColorCalibration *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ltpb__ColorCalibration_Closure)
                 (const Ltpb__ColorCalibration *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ltpb__color_calibration__descriptor;
extern const ProtobufCEnumDescriptor    ltpb__color_calibration__illuminant_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_color_5fcalibration_2eproto__INCLUDED */
