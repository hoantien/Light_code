   1              		.syntax unified
   2              		.cpu cortex-r4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"contrast_processor.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN12_GLOBAL__N_114square_diff_thEllls,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	_ZN12_GLOBAL__N_114square_diff_thEllls:
  24              	.LFB989:
  25              		.file 1 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp"
   1:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** /*******************************************************************************
   2:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  * Copyright (c) 2016, The LightCo
   3:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  * All rights reserved.
   4:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  * Redistribution and use in source and binary forms, with or without
   5:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  * modification, are strictly prohibited without prior permission
   6:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  * of The LightCo.
   7:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  *
   8:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  * @file    contrast_processor.cpp
   9:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  * @author  The LightCo
  10:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  * @version V1.0.0
  11:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  * @date    July-14-2016
  12:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  * @brief   Contrast processing for auto focus refinement
  13:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  *
  14:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****  ******************************************************************************/
  15:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  16:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** #include "board_config.h"
  17:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** #include "log.h"
  18:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** #include "image_raw10.h"
  19:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** #include "contrast_processor.h"
  20:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  21:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** #define SLOGF_ID                SLOG_ID_AF
  22:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  23:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** namespace {
  24:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     using roi_color_cache = contrast_processor::roi_color_cache;
  25:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     using roi_color_line = contrast_processor::roi_color_line;
  26:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  27:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     const std::int16_t data_pedestal = 42;
  28:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint32_t square_diff_th(std::int32_t x, std::int32_t y, std::int32_t factor_q16,
  30:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t additive_noise_var) {
  26              		.loc 1 30 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36              	.LBB483:
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::int32_t th = (factor_q16 * (x + y - 2*data_pedestal)) / 65536;
  37              		.loc 1 31 0
  38 0002 4418     		adds	r4, r0, r1
  39 0004 543C     		subs	r4, r4, #84
  32:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         th += 2 * additive_noise_var;
  33:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::int32_t d = x - y;
  40              		.loc 1 33 0
  41 0006 401A     		subs	r0, r0, r1
  42              	.LVL1:
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::int32_t th = (factor_q16 * (x + y - 2*data_pedestal)) / 65536;
  43              		.loc 1 31 0
  44 0008 6243     		muls	r2, r4, r2
  45              	.LVL2:
  46 000a 4FF48034 		mov	r4, #65536
  34:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::int32_t s = d * d;
  47              		.loc 1 34 0
  48 000e 4043     		muls	r0, r0, r0
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::int32_t th = (factor_q16 * (x + y - 2*data_pedestal)) / 65536;
  49              		.loc 1 31 0
  50 0010 92FBF4F2 		sdiv	r2, r2, r4
  51              	.LVL3:
  32:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         th += 2 * additive_noise_var;
  52              		.loc 1 32 0
  53 0014 02EB4303 		add	r3, r2, r3, lsl #1
  54              	.LVL4:
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if (s <= th)
  55              		.loc 1 35 0
  56 0018 9842     		cmp	r0, r3
  36:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             s = 0;
  37:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         else
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             s -= th;
  57              		.loc 1 38 0
  58 001a CCBF     		ite	gt
  59 001c C01A     		subgt	r0, r0, r3
  60              	.LVL5:
  36:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             s = 0;
  61              		.loc 1 36 0
  62 001e 0020     		movle	r0, #0
  63              	.LVL6:
  64              	.LBE483:
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return s;
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
  65              		.loc 1 40 0
  66 0020 10BD     		pop	{r4, pc}
  67              		.cfi_endproc
  68              	.LFE989:
  70              		.section	.text._ZN18contrast_processorC2Ett,"ax",%progbits
  71              		.align	1
  72              		.global	_ZN18contrast_processorC2Ett
  73              		.thumb
  74              		.thumb_func
  76              	_ZN18contrast_processorC2Ett:
  77              	.LFB1026:
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  42:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_gradient_th_factor(const roi_color_cache& color_cache, std::ui
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t th_factor_q16, std::int16_t additive_noise_var) {
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = color_cache.ref(1);
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 1; i < width; ++i) {
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, curr_line[i-1], th_factor_q16, additive_noise_var);
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line[i], th_factor_q16, additive_noise_var);
  51:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
  52:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
  54:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  55:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_gradient_th_factor(const roi_color_cache& green_cache, std:
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t prev_line_offset, std::int32_t th_factor_q16, std::int16_t additive_noise_
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref();
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = green_cache.ref(1);
  60:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin{0};
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_end{width};
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if (prev_line_offset > 0)
  63:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_end -= prev_line_offset;
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         else
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_begin -= prev_line_offset;
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = i_begin; i < i_end; ++i) {
  67:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line[i + prev_line_offset], th_factor_q16, additive_noise
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line[i], th_factor_q16, additive_noise_var);
  70:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
  71:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
  72:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_gradient(const roi_color_cache& color_cache, std::uint16_t wid
  75:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_gradient_th_factor(color_cache, width, 0, 0);
  76:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
  77:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  78:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_gradient(const roi_color_cache& green_cache, std::uint16_t 
  79:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_gradient_th_factor(green_cache, width, prev_line_offset, 0, 0)
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
  81:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  82:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     const std::int32_t gradient_threshold_factor_q16 = 4 * (static_cast<std::int32_t>(1) << 16) / 5
  83:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     const std::int16_t additive_data_noise_var = 3 * 4;
  84:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  85:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_gradient_th(const roi_color_cache& color_cache, std::uint16_t 
  86:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_gradient_th_factor(color_cache, width,
  87:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                 gradient_threshold_factor_q16, additive_data_noise_var);
  88:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
  89:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  90:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_gradient_th(const roi_color_cache& green_cache, std::uint16
  91:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_gradient_th_factor(green_cache, width, prev_line_offset,
  92:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                 gradient_threshold_factor_q16, additive_data_noise_var);
  93:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
  94:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
  95:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_laplacian1(const roi_color_cache& color_cache, std::uint16_t w
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
  97:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line = color_cache.ref();
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref(1);
  99:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = color_cache.ref(2);
 100:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 1; (i + 1) < width; ++i) {
 101:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = 4 * curr_line[i];
 102:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = v - curr_line[i-1] - curr_line[i+1] - prev_line[i] - next_line[i];
 103:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 104:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 105:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
 106:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 107:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 108:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_laplacian1(const roi_color_cache& green_cache, std::uint16_
 109:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 110:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line = green_cache.ref();
 111:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref(1);
 112:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = green_cache.ref(2);
 113:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin{0};
 114:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_end{width};
 115:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         prev_line_offset = -prev_line_offset;
 116:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if (prev_line_offset > 0)
 117:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_end -= prev_line_offset;
 118:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         else
 119:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_begin -= prev_line_offset;
 120:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = i_begin; i < i_end; ++i) {
 121:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = 4 * curr_line[i];
 122:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = v - prev_line[i + prev_line_offset] - prev_line[i]
 123:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                                - next_line[i + prev_line_offset] - next_line[i];
 124:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 125:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 126:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
 127:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 128:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 129:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_laplacian2(const roi_color_cache& color_cache, std::uint16_t w
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 131:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line2 = color_cache.ref();
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line1 = color_cache.ref(1);
 133:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref(2);
 134:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = color_cache.ref(3);
 135:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = color_cache.ref(4);
 136:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 2; (i + 2) < width; ++i) {
 137:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 138:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t n1 = curr_line[i-1] + curr_line[i+1] + prev_line1[i] + next_line1[i];
 139:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t n2 = curr_line[i-2] + curr_line[i+2] + prev_line2[i] + next_line2[i]
 140:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                               + prev_line1[i-1] + prev_line1[i+1] + next_line1[i-1] + next_line1[i+
 141:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = 16 * v - 2 * n1 - n2;
 142:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 143:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 144:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
 145:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 146:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 147:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_laplacian2(const roi_color_cache& green_cache, std::uint16_
 148:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 149:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line2 = green_cache.ref();
 150:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line1 = green_cache.ref(1);
 151:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref(2);
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = green_cache.ref(3);
 153:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = green_cache.ref(4);
 154:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 1; (i + 1) < width; ++i) {
 155:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 156:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t n1 = prev_line1[i] + next_line1[i] + prev_line1[i + prev_line_offset] + ne
 157:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t n2 = curr_line[i-1] + curr_line[i+1] + prev_line2[i] + next_line2[i];
 158:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = 12 * v - 2 * n1 - n2;
 159:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 160:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 161:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
 162:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 163:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 164:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_decimated2_gradient(const roi_color_cache& color_cache, std::u
 165:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 166:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 167:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = color_cache.ref(2);
 168:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 2; i < width; ++i) {
 169:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 170:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = v - curr_line[i-2];
 171:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 172:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             d = v - prev_line2[i];
 173:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 174:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 175:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
 176:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 177:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 178:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_decimated2_gradient(const roi_color_cache& green_cache, std
 179:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_decimated2_gradient(green_cache, width);
 180:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 181:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 182:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_decimated4_gradient_th_factor(const roi_color_cache& color_cac
 183:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t th_factor_q16, std::int16_t additive_noise_var) {
 184:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 185:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 186:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line4 = color_cache.ref(4);
 187:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 4; i < width; ++i) {
 188:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 189:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, curr_line[i-4], th_factor_q16, additive_noise_var);
 190:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line4[i], th_factor_q16, additive_noise_var);
 191:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 192:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
 193:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 194:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 195:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_decimated4_gradient_th_factor(const roi_color_cache& green_
 196:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t th_factor_q16, std::int16_t additive_noise_var) {
 197:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_decimated4_gradient_th_factor(green_cache, width, th_factor_q16, 
 198:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 199:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 200:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_decimated4_gradient(const roi_color_cache& color_cache, std::u
 201:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_decimated4_gradient_th_factor(color_cache, width, 0, 0);
 202:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 203:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 204:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_decimated4_gradient(const roi_color_cache& green_cache, std
 205:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_decimated4_gradient_th_factor(green_cache, width, prev_line_of
 206:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 207:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 208:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_decimated4_gradient_th(const roi_color_cache& color_cache, std
 209:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_decimated4_gradient_th_factor(color_cache, width, gradient_thresh
 210:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 211:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 212:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_decimated4_gradient_th(const roi_color_cache& green_cache, 
 213:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_decimated4_gradient_th_factor(green_cache, width, prev_line_of
 214:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 215:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 216:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_intensity(const roi_color_cache& color_cache, std::uint16_t wi
 217:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 218:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 219:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 0; i < width; ++i) {
 220:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += curr_line[i];
 221:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 222:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
 223:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 224:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 225:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_intensity(const roi_color_cache& green_cache, std::uint16_t
 226:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_intensity(green_cache, width);
 227:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 228:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 229:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_energy(const roi_color_cache& color_cache, std::uint16_t width
 230:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 231:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 232:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 0; i < width; ++i) {
 233:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 234:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += v * v;
 235:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 236:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
 237:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 238:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 239:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_energy(const roi_color_cache& green_cache, std::uint16_t wi
 240:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_energy(green_cache, width);
 241:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 242:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 243:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_rb_line_metric_filtered_gradient_th(const roi_color_cache& color_cache, std::
 244:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int32_t threshold_factor_q16 = 3 * 2 * (static_cast<std::int32_t>(1) << 16) / 5;
 245:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int16_t additive_noise_var = 3 * 14;
 246:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 247:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 248:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 5; i < width; ++i) {
 249:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v1 = 3 * curr_line[i] + 2 * curr_line[i-1] + curr_line[i-2];
 250:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v2 = curr_line[i-3] + 2 * curr_line[i-4] + 3 * curr_line[i-5];
 251:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 252:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v1 = 3 * curr_line[i] + 2 * color_cache.ref(1)[i] + color_cache.ref(2)[i];
 253:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v2 = color_cache.ref(3)[i] + 2 * color_cache.ref(4)[i] + 3 * color_cache.ref(5)[i];
 254:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 255:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 256:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
 257:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 258:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 259:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint64_t get_green_line_metric_filtered_gradient_th(const roi_color_cache& green_cache, st
 260:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int32_t threshold_factor_q16 = 3 * 2 * (static_cast<std::int32_t>(1) << 16) / 5;
 261:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int16_t additive_noise_var = 3 * 14;
 262:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 263:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref();
 264:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = green_cache.ref(1);
 265:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = green_cache.ref(2);
 266:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line3 = green_cache.ref(3);
 267:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line4 = green_cache.ref(4);
 268:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line5 = green_cache.ref(5);
 269:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin;
 270:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_end;
 271:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if (prev_line_offset > 0) {
 272:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_begin = 2 * prev_line_offset;
 273:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_end = width - 3 * prev_line_offset;
 274:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         } else {
 275:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_begin = -3 * prev_line_offset;
 276:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_end = width + 2 * prev_line_offset;
 277:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 278:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = i_begin; i < i_end; ++i) {
 279:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v1 = 3 * curr_line[i] + 2 * prev_line1[i] + prev_line2[i-prev_line_offset]
 280:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v2 = prev_line3[i-prev_line_offset] + 2 * prev_line4[i-2*prev_line_offset]
 281:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 282:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v1 = 3 * curr_line[i] + 2 * prev_line1[i+prev_line_offset] + prev_line2[i+prev_line_off
 283:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v2 = prev_line3[i+2*prev_line_offset] + 2 * prev_line4[i+2*prev_line_offset] + 3 * prev
 284:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 285:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 286:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return ret;
 287:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 288:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 289:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 290:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** std::array<contrast_processor::metric_algo_desc, contrast_processor::NUM_METRICS> contrast_processo
 291:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metric_algo_desc{ 2, &get_green_line_metric_gradient, &get_rb_line_metric_gradient },
 292:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metric_algo_desc{ 3, &get_green_line_metric_laplacian1, &get_rb_line_metric_laplacian1 },
 293:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metric_algo_desc{ 5, &get_green_line_metric_laplacian2, &get_rb_line_metric_laplacian2 },
 294:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metric_algo_desc{ 3, &get_green_line_metric_decimated2_gradient, &get_rb_line_metric_decimated2
 295:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metric_algo_desc{ 5, &get_green_line_metric_decimated4_gradient, &get_rb_line_metric_decimated4
 296:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metric_algo_desc{ 1, &get_green_line_metric_intensity, &get_rb_line_metric_intensity },
 297:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metric_algo_desc{ 1, &get_green_line_metric_energy, &get_rb_line_metric_energy },
 298:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metric_algo_desc{ 2, &get_green_line_metric_gradient_th, &get_rb_line_metric_gradient_th },
 299:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metric_algo_desc{ 5, &get_green_line_metric_decimated4_gradient_th, &get_rb_line_metric_decimat
 300:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metric_algo_desc{ 6, &get_green_line_metric_filtered_gradient_th, &get_rb_line_metric_filtered_
 301:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** };
 302:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 303:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** contrast_processor::contrast_processor(std::uint16_t first_roi_pixel, std::uint16_t roi_width) :
  78              		.loc 1 303 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              	.LVL7:
  83              	.LBB501:
 304:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         first_roi_pixel_{first_roi_pixel},
 305:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         roi_width_{roi_width} {
  84              		.loc 1 305 0
  85 0000 0023     		movs	r3, #0
  86 0002 4280     		strh	r2, [r0, #2]	@ movhi
  87 0004 00F58872 		add	r2, r0, #272
  88              	.LVL8:
  89 0008 8380     		strh	r3, [r0, #4]	@ movhi
  90              	.LVL9:
  91 000a 00F12003 		add	r3, r0, #32
  92              	.LBE501:
 303:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         first_roi_pixel_{first_roi_pixel},
  93              		.loc 1 303 0
  94 000e 30B5     		push	{r4, r5, lr}
  95              	.LCFI1:
  96              		.cfi_def_cfa_offset 12
  97              		.cfi_offset 4, -12
  98              		.cfi_offset 5, -8
  99              		.cfi_offset 14, -4
 100              	.LBB516:
 101              		.loc 1 305 0
 102 0010 0180     		strh	r1, [r0]	@ movhi
 103              	.L5:
 104              	.LVL10:
 105              	.LBB502:
 106              	.LBB503:
 107              	.LBB504:
 108              	.LBB505:
 109              		.file 2 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h"
   1:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** /*******************************************************************************
   2:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * Copyright (c) 2016, The LightCo
   3:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * All rights reserved.
   4:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * Redistribution and use in source and binary forms, with or without
   5:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * modification, are strictly prohibited without prior permission
   6:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * of The LightCo.
   7:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  *
   8:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * @file    contrast_processor.h
   9:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * @author  The LightCo
  10:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * @version V1.0.0
  11:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * @date    July-14-2016
  12:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  * @brief   Contrast processing for auto focus refinement
  13:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  *
  14:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****  ******************************************************************************/
  15:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  16:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #ifndef __CONTRAST_PROCESSOR_H__
  17:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #define __CONTRAST_PROCESSOR_H__
  18:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  19:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #ifdef __cplusplus
  20:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** extern "C" {
  21:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #endif
  22:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** void process_contrast_test(unsigned int img_addr);
  23:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #ifdef __cplusplus
  24:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** }
  25:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #endif
  26:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  27:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #ifdef __cplusplus
  28:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  29:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #include <cstdint>
  30:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #include <array>
  31:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #include <bitset>
  32:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** #include "image_pixel_iter.h"
  33:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  34:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** template<typename T, std::size_t S>
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** class circular_cache_buffer {
  36:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** public:
  37:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void advance() {
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         if (++index_ == S)
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             index_ = 0;
  40:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
  41:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  42:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     T& ref(std::uint16_t delta = 0) {
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return array_[circ_index(delta)];
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     const T& ref(std::uint16_t delta = 0) const {
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return array_[circ_index(delta)];
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** private:
  51:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     std::size_t circ_index(std::size_t delta) const {
  52:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::size_t ci;
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         delta = delta % S;
  54:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         if (delta <= index_)
  55:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             ci = index_ - delta;
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         else
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             ci = S - delta + index_;
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return ci;
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
  60:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  61:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     std::size_t index_{0};
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     std::array<T, S> array_;
  63:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** };
  64:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** class contrast_processor {
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** public:
  67:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     enum metric_type {
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         GRADIENT,
  70:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         LAPLACIAN1,
  71:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         LAPLACIAN2,
  72:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         DECIMATED2_GRADIENT,
  73:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         DECIMATED4_GRADIENT,
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         INTENSITY,
  75:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         ENERGY,
  76:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         GRADIENT_TH,
  77:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         DECIMATED4_GRADIENT_TH,
  78:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         FILTERED_GRADIENT_TH,
  79:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         NUM_METRICS
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     };
  81:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  82:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	contrast_processor(std::uint16_t first_roi_pixel, std::uint16_t roi_width);
  83:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  84:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	void process_line(image_pixel_iter line_start);
  85:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  86:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	std::uint64_t get_metric_green(metric_type metric) const {
  87:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 		return metrics_arr_[metric].green;
  88:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	}
  89:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  90:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	std::uint64_t get_metric_red(metric_type metric) const {
  91:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return metrics_arr_[metric].red;
  92:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	}
  93:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  94:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	std::uint64_t get_metric_blue(metric_type metric) const {
  95:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return metrics_arr_[metric].blue;
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	}
  97:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	std::uint64_t get_metric(metric_type metric) const {
  99:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 		return metrics_arr_[metric].total_metric();
 100:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 	}
 101:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 102:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     static const std::size_t MAX_ROI_WIDTH = 180;
 103:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     static const std::size_t NUM_LINES_CACHE = 5;
 104:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     using roi_color_line = std::array<std::int16_t, MAX_ROI_WIDTH>;
 105:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     using roi_color_cache = circular_cache_buffer<roi_color_line, NUM_LINES_CACHE>;
 106:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 107:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     struct metric_algo_desc {
 108:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint16_t min_lines;
 109:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t (*get_green_line_metric_fun)(const roi_color_cache& green_cache, std::uint16_
 110:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t (*get_rb_line_metric_fun)(const roi_color_cache& color_cache, std::uint16_t w
 111:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     };
 112:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 113:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void enable_metric(metric_type mt) {
 114:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         metrics_enable_[mt] = true;
 115:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
 116:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 117:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void disable_metric(metric_type mt) {
 118:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         metrics_enable_[mt] = false;
 119:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
 120:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 121:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void enable_all_metrics() {
 122:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         metrics_enable_.set();
 123:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
 124:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 125:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void disable_all_metrics() {
 126:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         metrics_enable_.reset();
 127:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
 128:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 129:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     void enable_metrics(std::uint32_t metrics_mask);
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 131:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     struct metrics_per_color {
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t green;
 133:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t red;
 134:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         std::uint64_t blue;
 135:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 136:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         metrics_per_color() :
 137:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****                 green{0}, red{0}, blue{0} {
 110              		.loc 2 137 0
 111 0012 0024     		movs	r4, #0
 112 0014 0025     		movs	r5, #0
 113 0016 1833     		adds	r3, r3, #24
 114              	.LVL11:
 115 0018 43E90C45 		strd	r4, [r3, #-48]
 116 001c 43E90A45 		strd	r4, [r3, #-40]
 117 0020 43E90845 		strd	r4, [r3, #-32]
 118              	.LBE505:
 119              	.LBE504:
 120              		.file 3 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array"
   1:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // <array> -*- C++ -*-
   2:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
   3:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // Copyright (C) 2007-2014 Free Software Foundation, Inc.
   4:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** //
   5:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // software; you can redistribute it and/or modify it under the
   7:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // terms of the GNU General Public License as published by the
   8:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // any later version.
  10:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  11:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // This library is distributed in the hope that it will be useful,
  12:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // GNU General Public License for more details.
  15:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  16:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // 3.1, as published by the Free Software Foundation.
  19:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  20:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // You should have received a copy of the GNU General Public License and
  21:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** // <http://www.gnu.org/licenses/>.
  24:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  25:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** /** @file include/array
  26:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****  *  This is a Standard C++ Library header.
  27:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****  */
  28:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  29:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #ifndef _GLIBCXX_ARRAY
  30:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #define _GLIBCXX_ARRAY 1
  31:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  32:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #pragma GCC system_header
  33:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  34:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #if __cplusplus < 201103L
  35:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** # include <bits/c++0x_warning.h>
  36:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #else
  37:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  38:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #include <stdexcept>
  39:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #include <bits/stl_algobase.h>
  40:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** #include <bits/range_access.h>
  41:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  42:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** {
  44:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  45:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  46:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   template<typename _Tp, std::size_t _Nm>
  47:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     struct __array_traits
  48:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     {
  49:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       typedef _Tp _Type[_Nm];
  50:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  51:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       static constexpr _Tp&
  52:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****       { return const_cast<_Tp&>(__t[__n]); }
  54:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     };
  55:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  56:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****  template<typename _Tp>
  57:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    struct __array_traits<_Tp, 0>
  58:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    {
  59:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      struct _Type { };
  60:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  61:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      static constexpr _Tp&
  62:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      _S_ref(const _Type&, std::size_t) noexcept
  63:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****      { return *static_cast<_Tp*>(nullptr); }
  64:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    };
  65:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array **** 
  66:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   /**
  67:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  68:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  69:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @ingroup sequences
  70:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  71:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  72:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  <a href="tables.html#66">reversible container</a>, and a
  73:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  <a href="tables.html#67">sequence</a>.
  74:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  75:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  Sets support random access iterators.
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *
  77:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  78:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****    *  @tparam  N  Number of elements.
  79:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   */
  80:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****   template<typename _Tp, std::size_t _Nm>
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     struct array
 121              		.loc 3 81 0
 122 0024 9342     		cmp	r3, r2
 123 0026 F4D1     		bne	.L5
 124              	.LVL12:
 125              	.LBE503:
 126              	.LBE502:
 127              	.LBB506:
 128              	.LBB507:
 129              	.LBB508:
 130              	.LBB509:
 131              		.file 4 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset"
   1:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // <bitset> -*- C++ -*-
   2:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
   3:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** //
   5:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // software; you can redistribute it and/or modify it under the
   7:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // terms of the GNU General Public License as published by the
   8:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // any later version.
  10:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  11:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // This library is distributed in the hope that it will be useful,
  12:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // GNU General Public License for more details.
  15:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  16:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // 3.1, as published by the Free Software Foundation.
  19:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  20:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // You should have received a copy of the GNU General Public License and
  21:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** // <http://www.gnu.org/licenses/>.
  24:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  25:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** /*
  26:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  * Copyright (c) 1998
  27:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  * Silicon Graphics Computer Systems, Inc.
  28:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  *
  29:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  * provided that the above copyright notice appear in all copies and
  32:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  * that both that copyright notice and this permission notice appear
  33:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  * in supporting documentation.  Silicon Graphics makes no
  34:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  * representations about the suitability of this software for any
  35:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  */
  37:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  38:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** /** @file include/bitset
  39:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  *  This is a Standard C++ Library header.
  40:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****  */
  41:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  42:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #ifndef _GLIBCXX_BITSET
  43:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #define _GLIBCXX_BITSET 1
  44:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  45:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #pragma GCC system_header
  46:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  47:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #include <string>
  48:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #include <bits/functexcept.h>   // For invalid_argument, out_of_range,
  49:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****                                 // overflow_error
  50:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #include <iosfwd>
  51:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #include <bits/cxxabi_forced.h>
  52:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #define _GLIBCXX_BITSET_BITS_PER_WORD  (__CHAR_BIT__ * __SIZEOF_LONG__)
  54:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #define _GLIBCXX_BITSET_WORDS(__n) \
  55:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   ((__n) / _GLIBCXX_BITSET_BITS_PER_WORD + \
  56:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    ((__n) % _GLIBCXX_BITSET_BITS_PER_WORD == 0 ? 0 : 1))
  57:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  58:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #define _GLIBCXX_BITSET_BITS_PER_ULL (__CHAR_BIT__ * __SIZEOF_LONG_LONG__)
  59:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  60:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** namespace std _GLIBCXX_VISIBILITY(default)
  61:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** {
  62:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  64:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   /**
  65:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  Base class, general case.  It is a class invariant that _Nw will be
  66:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  nonnegative.
  67:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
  68:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  See documentation for bitset.
  69:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   */
  70:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Nw>
  71:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     struct _Base_bitset
  72:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
  73:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       typedef unsigned long _WordT;
  74:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  75:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       /// 0 is the least significant word.
  76:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _WordT 		_M_w[_Nw];
  77:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  78:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _GLIBCXX_CONSTEXPR _Base_bitset() _GLIBCXX_NOEXCEPT
  79:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       : _M_w() { }
  80:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  81:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
  82:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       constexpr _Base_bitset(unsigned long long __val) noexcept
  83:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       : _M_w{ _WordT(__val)
  84:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __SIZEOF_LONG_LONG__ > __SIZEOF_LONG__
  85:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	       , _WordT(__val >> _GLIBCXX_BITSET_BITS_PER_WORD)
  86:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
  87:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        } { }
  88:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #else
  89:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _Base_bitset(unsigned long __val)
  90:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       : _M_w()
  91:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { _M_w[0] = __val; }
  92:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
  93:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  94:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR size_t
  95:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_whichword(size_t __pos) _GLIBCXX_NOEXCEPT
  96:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return __pos / _GLIBCXX_BITSET_BITS_PER_WORD; }
  97:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
  98:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR size_t
  99:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_whichbyte(size_t __pos) _GLIBCXX_NOEXCEPT
 100:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return (__pos % _GLIBCXX_BITSET_BITS_PER_WORD) / __CHAR_BIT__; }
 101:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 102:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR size_t
 103:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_whichbit(size_t __pos) _GLIBCXX_NOEXCEPT
 104:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return __pos % _GLIBCXX_BITSET_BITS_PER_WORD; }
 105:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 106:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR _WordT
 107:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_maskbit(size_t __pos) _GLIBCXX_NOEXCEPT
 108:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }
 109:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 110:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _WordT&
 111:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_getword(size_t __pos) _GLIBCXX_NOEXCEPT
 112:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w[_S_whichword(__pos)]; }
 113:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 114:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _GLIBCXX_CONSTEXPR _WordT
 115:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_getword(size_t __pos) const _GLIBCXX_NOEXCEPT
 116:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w[_S_whichword(__pos)]; }
 117:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 118:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
 119:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       const _WordT*
 120:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_getdata() const noexcept
 121:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w; }
 122:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
 123:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 124:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _WordT&
 125:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_hiword() _GLIBCXX_NOEXCEPT
 126:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w[_Nw - 1]; }
 127:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 128:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _GLIBCXX_CONSTEXPR _WordT
 129:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_hiword() const _GLIBCXX_NOEXCEPT
 130:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w[_Nw - 1]; }
 131:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 132:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 133:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_and(const _Base_bitset<_Nw>& __x) _GLIBCXX_NOEXCEPT
 134:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 135:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	for (size_t __i = 0; __i < _Nw; __i++)
 136:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  _M_w[__i] &= __x._M_w[__i];
 137:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 138:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 139:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 140:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_or(const _Base_bitset<_Nw>& __x) _GLIBCXX_NOEXCEPT
 141:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 142:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	for (size_t __i = 0; __i < _Nw; __i++)
 143:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  _M_w[__i] |= __x._M_w[__i];
 144:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 145:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 146:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 147:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_xor(const _Base_bitset<_Nw>& __x) _GLIBCXX_NOEXCEPT
 148:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 149:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	for (size_t __i = 0; __i < _Nw; __i++)
 150:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  _M_w[__i] ^= __x._M_w[__i];
 151:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 152:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 153:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 154:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_left_shift(size_t __shift) _GLIBCXX_NOEXCEPT;
 155:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 156:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 157:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_right_shift(size_t __shift) _GLIBCXX_NOEXCEPT;
 158:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 159:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 160:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_flip() _GLIBCXX_NOEXCEPT
 161:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 162:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	for (size_t __i = 0; __i < _Nw; __i++)
 163:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  _M_w[__i] = ~_M_w[__i];
 164:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 165:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 166:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 167:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_set() _GLIBCXX_NOEXCEPT
 168:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 169:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	for (size_t __i = 0; __i < _Nw; __i++)
 170:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  _M_w[__i] = ~static_cast<_WordT>(0);
 171:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 172:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 173:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 174:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_reset() _GLIBCXX_NOEXCEPT
 175:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { __builtin_memset(_M_w, 0, _Nw * sizeof(_WordT)); }
 176:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 177:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       bool
 178:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_is_equal(const _Base_bitset<_Nw>& __x) const _GLIBCXX_NOEXCEPT
 179:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 180:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	for (size_t __i = 0; __i < _Nw; ++__i)
 181:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  if (_M_w[__i] != __x._M_w[__i])
 182:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    return false;
 183:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	return true;
 184:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 185:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 186:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       template<size_t _Nb>
 187:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         bool
 188:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         _M_are_all() const _GLIBCXX_NOEXCEPT
 189:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         {
 190:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  for (size_t __i = 0; __i < _Nw - 1; __i++)
 191:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    if (_M_w[__i] != ~static_cast<_WordT>(0))
 192:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	      return false;
 193:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  return _M_hiword() == (~static_cast<_WordT>(0)
 194:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 				 >> (_Nw * _GLIBCXX_BITSET_BITS_PER_WORD
 195:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 				     - _Nb));
 196:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	}
 197:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 198:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       bool
 199:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_is_any() const _GLIBCXX_NOEXCEPT
 200:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 201:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	for (size_t __i = 0; __i < _Nw; __i++)
 202:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  if (_M_w[__i] != static_cast<_WordT>(0))
 203:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    return true;
 204:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	return false;
 205:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 206:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 207:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       size_t
 208:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_count() const _GLIBCXX_NOEXCEPT
 209:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 210:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	size_t __result = 0;
 211:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	for (size_t __i = 0; __i < _Nw; __i++)
 212:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  __result += __builtin_popcountl(_M_w[__i]);
 213:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	return __result;
 214:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 215:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 216:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       unsigned long
 217:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_to_ulong() const;
 218:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 219:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
 220:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       unsigned long long
 221:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_to_ullong() const;
 222:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
 223:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 224:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // find first "on" bit
 225:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       size_t
 226:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_find_first(size_t) const _GLIBCXX_NOEXCEPT;
 227:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 228:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // find the next "on" bit that follows "prev"
 229:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       size_t
 230:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_find_next(size_t, size_t) const _GLIBCXX_NOEXCEPT;
 231:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     };
 232:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 233:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   // Definitions of non-inline functions from _Base_bitset.
 234:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Nw>
 235:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     void
 236:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     _Base_bitset<_Nw>::_M_do_left_shift(size_t __shift) _GLIBCXX_NOEXCEPT
 237:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 238:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       if (__builtin_expect(__shift != 0, 1))
 239:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	{
 240:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  const size_t __wshift = __shift / _GLIBCXX_BITSET_BITS_PER_WORD;
 241:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  const size_t __offset = __shift % _GLIBCXX_BITSET_BITS_PER_WORD;
 242:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 243:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  if (__offset == 0)
 244:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    for (size_t __n = _Nw - 1; __n >= __wshift; --__n)
 245:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	      _M_w[__n] = _M_w[__n - __wshift];
 246:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  else
 247:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    {
 248:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	      const size_t __sub_offset = (_GLIBCXX_BITSET_BITS_PER_WORD 
 249:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 					   - __offset);
 250:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	      for (size_t __n = _Nw - 1; __n > __wshift; --__n)
 251:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 		_M_w[__n] = ((_M_w[__n - __wshift] << __offset)
 252:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 			     | (_M_w[__n - __wshift - 1] >> __sub_offset));
 253:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	      _M_w[__wshift] = _M_w[0] << __offset;
 254:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    }
 255:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 256:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  std::fill(_M_w + 0, _M_w + __wshift, static_cast<_WordT>(0));
 257:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	}
 258:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     }
 259:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 260:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Nw>
 261:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     void
 262:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     _Base_bitset<_Nw>::_M_do_right_shift(size_t __shift) _GLIBCXX_NOEXCEPT
 263:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 264:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       if (__builtin_expect(__shift != 0, 1))
 265:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	{
 266:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  const size_t __wshift = __shift / _GLIBCXX_BITSET_BITS_PER_WORD;
 267:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  const size_t __offset = __shift % _GLIBCXX_BITSET_BITS_PER_WORD;
 268:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  const size_t __limit = _Nw - __wshift - 1;
 269:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 270:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  if (__offset == 0)
 271:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    for (size_t __n = 0; __n <= __limit; ++__n)
 272:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	      _M_w[__n] = _M_w[__n + __wshift];
 273:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  else
 274:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    {
 275:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	      const size_t __sub_offset = (_GLIBCXX_BITSET_BITS_PER_WORD
 276:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 					   - __offset);
 277:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	      for (size_t __n = 0; __n < __limit; ++__n)
 278:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 		_M_w[__n] = ((_M_w[__n + __wshift] >> __offset)
 279:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 			     | (_M_w[__n + __wshift + 1] << __sub_offset));
 280:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	      _M_w[__limit] = _M_w[_Nw-1] >> __offset;
 281:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    }
 282:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  
 283:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  std::fill(_M_w + __limit + 1, _M_w + _Nw, static_cast<_WordT>(0));
 284:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	}
 285:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     }
 286:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 287:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Nw>
 288:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     unsigned long
 289:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     _Base_bitset<_Nw>::_M_do_to_ulong() const
 290:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 291:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       for (size_t __i = 1; __i < _Nw; ++__i)
 292:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	if (_M_w[__i])
 293:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  __throw_overflow_error(__N("_Base_bitset::_M_do_to_ulong"));
 294:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       return _M_w[0];
 295:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     }
 296:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 297:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
 298:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Nw>
 299:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     unsigned long long
 300:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     _Base_bitset<_Nw>::_M_do_to_ullong() const
 301:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 302:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       const bool __dw = sizeof(unsigned long long) > sizeof(unsigned long);
 303:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       for (size_t __i = 1 + __dw; __i < _Nw; ++__i)
 304:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	if (_M_w[__i])
 305:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  __throw_overflow_error(__N("_Base_bitset::_M_do_to_ullong"));
 306:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 307:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       if (__dw)
 308:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	return _M_w[0] + (static_cast<unsigned long long>(_M_w[1])
 309:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 			  << _GLIBCXX_BITSET_BITS_PER_WORD);
 310:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       return _M_w[0];
 311:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     }
 312:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
 313:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 314:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Nw>
 315:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     size_t
 316:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     _Base_bitset<_Nw>::
 317:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     _M_do_find_first(size_t __not_found) const _GLIBCXX_NOEXCEPT
 318:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 319:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       for (size_t __i = 0; __i < _Nw; __i++)
 320:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	{
 321:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  _WordT __thisword = _M_w[__i];
 322:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  if (__thisword != static_cast<_WordT>(0))
 323:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    return (__i * _GLIBCXX_BITSET_BITS_PER_WORD
 324:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 		    + __builtin_ctzl(__thisword));
 325:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	}
 326:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // not found, so return an indication of failure.
 327:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       return __not_found;
 328:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     }
 329:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 330:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Nw>
 331:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     size_t
 332:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     _Base_bitset<_Nw>::
 333:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     _M_do_find_next(size_t __prev, size_t __not_found) const _GLIBCXX_NOEXCEPT
 334:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 335:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // make bound inclusive
 336:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       ++__prev;
 337:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 338:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // check out of bounds
 339:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       if (__prev >= _Nw * _GLIBCXX_BITSET_BITS_PER_WORD)
 340:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	return __not_found;
 341:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 342:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // search first word
 343:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       size_t __i = _S_whichword(__prev);
 344:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _WordT __thisword = _M_w[__i];
 345:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 346:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // mask off bits below bound
 347:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       __thisword &= (~static_cast<_WordT>(0)) << _S_whichbit(__prev);
 348:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 349:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       if (__thisword != static_cast<_WordT>(0))
 350:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	return (__i * _GLIBCXX_BITSET_BITS_PER_WORD
 351:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 		+ __builtin_ctzl(__thisword));
 352:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 353:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // check subsequent words
 354:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       __i++;
 355:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       for (; __i < _Nw; __i++)
 356:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	{
 357:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  __thisword = _M_w[__i];
 358:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  if (__thisword != static_cast<_WordT>(0))
 359:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    return (__i * _GLIBCXX_BITSET_BITS_PER_WORD
 360:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 		    + __builtin_ctzl(__thisword));
 361:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	}
 362:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // not found, so return an indication of failure.
 363:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       return __not_found;
 364:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     } // end _M_do_find_next
 365:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 366:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   /**
 367:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  Base class, specialization for a single word.
 368:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 369:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  See documentation for bitset.
 370:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   */
 371:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<>
 372:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     struct _Base_bitset<1>
 373:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 374:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       typedef unsigned long _WordT;
 375:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _WordT _M_w;
 376:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 377:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _GLIBCXX_CONSTEXPR _Base_bitset() _GLIBCXX_NOEXCEPT
 378:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       : _M_w(0)
 132              		.loc 4 378 0
 133 0028 0023     		movs	r3, #0
 134              	.LVL13:
 135 002a C0F8F830 		str	r3, [r0, #248]
 136              	.LVL14:
 137              	.LBE509:
 138              	.LBE508:
 139              	.LBE507:
 140              	.LBE506:
 141              	.LBB510:
 142              	.LBB511:
  35:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** public:
 143              		.loc 2 35 0
 144 002e C0F8FC30 		str	r3, [r0, #252]
 145              	.LVL15:
 146              	.LBE511:
 147              	.LBE510:
 148              	.LBB512:
 149              	.LBB513:
 150 0032 C0F80838 		str	r3, [r0, #2056]
 151              	.LVL16:
 152              	.LBE513:
 153              	.LBE512:
 154              	.LBB514:
 155              	.LBB515:
 156 0036 C0F8143F 		str	r3, [r0, #3860]
 157              	.LBE515:
 158              	.LBE514:
 159              	.LBE516:
 306:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 160              		.loc 1 306 0
 161 003a 30BD     		pop	{r4, r5, pc}
 162              		.cfi_endproc
 163              	.LFE1026:
 165              		.global	_ZN18contrast_processorC1Ett
 166              		.thumb_set _ZN18contrast_processorC1Ett,_ZN18contrast_processorC2Ett
 167              		.section	.text._ZN18contrast_processor14enable_metricsEm,"ax",%progbits
 168              		.align	1
 169              		.global	_ZN18contrast_processor14enable_metricsEm
 170              		.thumb
 171              		.thumb_func
 173              	_ZN18contrast_processor14enable_metricsEm:
 174              	.LFB1028:
 307:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 308:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** void contrast_processor::enable_metrics(std::uint32_t metrics_mask) {
 175              		.loc 1 308 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              	.LVL17:
 180              	.LBB543:
 309:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::size_t i = 0;
 181              		.loc 1 309 0
 182 0000 0022     		movs	r2, #0
 183              	.LBE543:
 308:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::size_t i = 0;
 184              		.loc 1 308 0
 185 0002 10B5     		push	{r4, lr}
 186              	.LCFI2:
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 4, -8
 189              		.cfi_offset 14, -4
 190              	.LVL18:
 191              	.L9:
 192              	.LBB561:
 310:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     while (metrics_mask != 0) {
 193              		.loc 1 310 0
 194 0004 81B1     		cbz	r1, .L15
 311:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if ((metrics_mask & 1) != 0)
 195              		.loc 1 311 0
 196 0006 CB07     		lsls	r3, r1, #31
 197              	.LVL19:
 198              	.LBB544:
 199              	.LBB545:
 200              	.LBB546:
 201              	.LBB547:
 202              	.LBB548:
 379:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 380:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 381:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
 382:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       constexpr _Base_bitset(unsigned long long __val) noexcept
 383:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #else
 384:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _Base_bitset(unsigned long __val)
 385:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
 386:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       : _M_w(__val)
 387:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 388:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 389:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR size_t
 390:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_whichword(size_t __pos) _GLIBCXX_NOEXCEPT
 391:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return __pos / _GLIBCXX_BITSET_BITS_PER_WORD; }
 392:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 393:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR size_t
 394:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_whichbyte(size_t __pos) _GLIBCXX_NOEXCEPT
 395:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return (__pos % _GLIBCXX_BITSET_BITS_PER_WORD) / __CHAR_BIT__; }
 396:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 397:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR size_t
 398:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_whichbit(size_t __pos) _GLIBCXX_NOEXCEPT
 399:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {  return __pos % _GLIBCXX_BITSET_BITS_PER_WORD; }
 400:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 401:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR _WordT
 402:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_maskbit(size_t __pos) _GLIBCXX_NOEXCEPT
 403:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }
 203              		.loc 4 403 0
 204 0008 41BF     		itttt	mi
 205 000a 0123     		movmi	r3, #1
 206              	.LBE548:
 207              	.LBE547:
 208              	.LBE546:
 209              	.LBE545:
 210              	.LBE544:
 211              	.LBB555:
 212              	.LBB556:
 213              	.LBB557:
 214              	.LBB558:
 399:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 215              		.loc 4 399 0
 216 000c 02F01F04 		andmi	r4, r2, #31
 217              	.LBE558:
 218              	.LBE557:
 219              	.LBE556:
 220              	.LBE555:
 221              	.LBB559:
 222              	.LBB553:
 223              	.LBB551:
 224              	.LBB550:
 225              	.LBB549:
 226              		.loc 4 403 0
 227 0010 A340     		lslmi	r3, r3, r4
 228              	.LBE549:
 229              	.LBE550:
 404:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 405:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _WordT&
 406:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_getword(size_t) _GLIBCXX_NOEXCEPT
 407:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w; }
 408:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 409:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _GLIBCXX_CONSTEXPR _WordT
 410:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_getword(size_t) const _GLIBCXX_NOEXCEPT
 411:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w; }
 412:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 413:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
 414:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       const _WordT*
 415:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_getdata() const noexcept
 416:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return &_M_w; }
 417:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
 418:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 419:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _WordT&
 420:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_hiword() _GLIBCXX_NOEXCEPT
 421:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w; }
 422:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 423:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _GLIBCXX_CONSTEXPR _WordT
 424:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_hiword() const _GLIBCXX_NOEXCEPT
 425:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w; }
 426:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 427:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 428:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_and(const _Base_bitset<1>& __x) _GLIBCXX_NOEXCEPT
 429:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { _M_w &= __x._M_w; }
 430:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 431:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 432:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_or(const _Base_bitset<1>& __x) _GLIBCXX_NOEXCEPT
 433:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { _M_w |= __x._M_w; }
 434:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 435:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 436:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_xor(const _Base_bitset<1>& __x) _GLIBCXX_NOEXCEPT
 437:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { _M_w ^= __x._M_w; }
 438:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 439:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 440:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_left_shift(size_t __shift) _GLIBCXX_NOEXCEPT
 441:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { _M_w <<= __shift; }
 442:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 443:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 444:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_right_shift(size_t __shift) _GLIBCXX_NOEXCEPT
 445:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { _M_w >>= __shift; }
 446:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 447:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 448:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_flip() _GLIBCXX_NOEXCEPT
 449:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { _M_w = ~_M_w; }
 450:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 451:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 452:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_set() _GLIBCXX_NOEXCEPT
 453:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { _M_w = ~static_cast<_WordT>(0); }
 454:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 455:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 456:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_reset() _GLIBCXX_NOEXCEPT
 457:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { _M_w = 0; }
 458:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 459:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       bool
 460:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_is_equal(const _Base_bitset<1>& __x) const _GLIBCXX_NOEXCEPT
 461:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w == __x._M_w; }
 462:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 463:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       template<size_t _Nb>
 464:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         bool
 465:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         _M_are_all() const _GLIBCXX_NOEXCEPT
 466:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         { return _M_w == (~static_cast<_WordT>(0)
 467:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 			  >> (_GLIBCXX_BITSET_BITS_PER_WORD - _Nb)); }
 468:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 469:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       bool
 470:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_is_any() const _GLIBCXX_NOEXCEPT
 471:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w != 0; }
 472:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 473:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       size_t
 474:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_count() const _GLIBCXX_NOEXCEPT
 475:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return __builtin_popcountl(_M_w); }
 476:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 477:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       unsigned long
 478:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_to_ulong() const _GLIBCXX_NOEXCEPT
 479:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w; }
 480:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 481:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
 482:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       unsigned long long
 483:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_to_ullong() const noexcept
 484:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return _M_w; }
 485:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
 486:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 487:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       size_t
 488:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_find_first(size_t __not_found) const _GLIBCXX_NOEXCEPT
 489:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 490:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         if (_M_w != 0)
 491:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****           return __builtin_ctzl(_M_w);
 492:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         else
 493:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****           return __not_found;
 494:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 495:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 496:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // find the next "on" bit that follows "prev"
 497:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       size_t
 498:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_find_next(size_t __prev, size_t __not_found) const
 499:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	_GLIBCXX_NOEXCEPT
 500:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 501:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	++__prev;
 502:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	if (__prev >= ((size_t) _GLIBCXX_BITSET_BITS_PER_WORD))
 503:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  return __not_found;
 504:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 505:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	_WordT __x = _M_w >> __prev;
 506:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	if (__x != 0)
 507:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  return __builtin_ctzl(__x) + __prev;
 508:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	else
 509:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  return __not_found;
 510:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 511:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     };
 512:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 513:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   /**
 514:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  Base class, specialization for no storage (zero-length %bitset).
 515:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 516:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  See documentation for bitset.
 517:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   */
 518:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<>
 519:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     struct _Base_bitset<0>
 520:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 521:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       typedef unsigned long _WordT;
 522:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 523:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _GLIBCXX_CONSTEXPR _Base_bitset() _GLIBCXX_NOEXCEPT
 524:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 525:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 526:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
 527:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       constexpr _Base_bitset(unsigned long long) noexcept
 528:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #else
 529:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _Base_bitset(unsigned long)
 530:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
 531:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 532:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 533:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR size_t
 534:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_whichword(size_t __pos) _GLIBCXX_NOEXCEPT
 535:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return __pos / _GLIBCXX_BITSET_BITS_PER_WORD; }
 536:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 537:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR size_t
 538:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_whichbyte(size_t __pos) _GLIBCXX_NOEXCEPT
 539:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return (__pos % _GLIBCXX_BITSET_BITS_PER_WORD) / __CHAR_BIT__; }
 540:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 541:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR size_t
 542:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_whichbit(size_t __pos) _GLIBCXX_NOEXCEPT
 543:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {  return __pos % _GLIBCXX_BITSET_BITS_PER_WORD; }
 544:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 545:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static _GLIBCXX_CONSTEXPR _WordT
 546:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_maskbit(size_t __pos) _GLIBCXX_NOEXCEPT
 547:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }
 548:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 549:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // This would normally give access to the data.  The bounds-checking
 550:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // in the bitset class will prevent the user from getting this far,
 551:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // but (1) it must still return an lvalue to compile, and (2) the
 552:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // user might call _Unchecked_set directly, in which case this /needs/
 553:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // to fail.  Let's not penalize zero-length users unless they actually
 554:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // make an unchecked call; all the memory ugliness is therefore
 555:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // localized to this single should-never-get-this-far function.
 556:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _WordT&
 557:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_getword(size_t) _GLIBCXX_NOEXCEPT
 558:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 559:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	__throw_out_of_range(__N("_Base_bitset::_M_getword")); 
 560:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	return *new _WordT;
 561:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 562:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 563:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _GLIBCXX_CONSTEXPR _WordT
 564:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_getword(size_t __pos) const _GLIBCXX_NOEXCEPT
 565:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return 0; }
 566:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 567:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _GLIBCXX_CONSTEXPR _WordT
 568:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_hiword() const _GLIBCXX_NOEXCEPT
 569:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return 0; }
 570:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 571:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 572:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_and(const _Base_bitset<0>&) _GLIBCXX_NOEXCEPT
 573:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 574:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 575:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 576:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_or(const _Base_bitset<0>&) _GLIBCXX_NOEXCEPT
 577:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 578:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 579:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 580:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_xor(const _Base_bitset<0>&) _GLIBCXX_NOEXCEPT
 581:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 582:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 583:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 584:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_left_shift(size_t) _GLIBCXX_NOEXCEPT
 585:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 586:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 587:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 588:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_right_shift(size_t) _GLIBCXX_NOEXCEPT
 589:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 590:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 591:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 592:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_flip() _GLIBCXX_NOEXCEPT
 593:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 594:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 595:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 596:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_set() _GLIBCXX_NOEXCEPT
 597:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 598:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 599:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 600:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_reset() _GLIBCXX_NOEXCEPT
 601:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { }
 602:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 603:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // Are all empty bitsets equal to each other?  Are they equal to
 604:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // themselves?  How to compare a thing which has no state?  What is
 605:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // the sound of one zero-length bitset clapping?
 606:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       bool
 607:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_is_equal(const _Base_bitset<0>&) const _GLIBCXX_NOEXCEPT
 608:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return true; }
 609:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 610:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       template<size_t _Nb>
 611:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         bool
 612:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         _M_are_all() const _GLIBCXX_NOEXCEPT
 613:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****         { return true; }
 614:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 615:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       bool
 616:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_is_any() const _GLIBCXX_NOEXCEPT
 617:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return false; }
 618:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 619:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       size_t
 620:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_count() const _GLIBCXX_NOEXCEPT
 621:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return 0; }
 622:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 623:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       unsigned long
 624:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_to_ulong() const _GLIBCXX_NOEXCEPT
 625:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return 0; }
 626:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 627:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
 628:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       unsigned long long
 629:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_to_ullong() const noexcept
 630:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return 0; }
 631:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
 632:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 633:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // Normally "not found" is the size, but that could also be
 634:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       // misinterpreted as an index in this corner case.  Oh well.
 635:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       size_t
 636:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_find_first(size_t) const _GLIBCXX_NOEXCEPT
 637:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return 0; }
 638:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 639:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       size_t
 640:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_find_next(size_t, size_t) const _GLIBCXX_NOEXCEPT
 641:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return 0; }
 642:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     };
 643:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 644:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 645:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   // Helper class to zero out the unused high-order bits in the highest word.
 646:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Extrabits>
 647:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     struct _Sanitize
 648:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 649:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       typedef unsigned long _WordT;
 650:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 651:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static void
 652:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_do_sanitize(_WordT& __val) _GLIBCXX_NOEXCEPT
 653:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { __val &= ~((~static_cast<_WordT>(0)) << _Extrabits); }
 654:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     };
 655:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 656:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<>
 657:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     struct _Sanitize<0>
 658:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 659:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       typedef unsigned long _WordT;
 660:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 661:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static void
 662:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_do_sanitize(_WordT) _GLIBCXX_NOEXCEPT { } 
 663:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     };
 664:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 665:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
 666:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Nb, bool = _Nb < _GLIBCXX_BITSET_BITS_PER_ULL>
 667:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     struct _Sanitize_val
 668:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 669:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static constexpr unsigned long long
 670:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_do_sanitize_val(unsigned long long __val)
 671:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return __val; }
 672:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     };
 673:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 674:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Nb>
 675:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     struct _Sanitize_val<_Nb, true>
 676:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 677:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       static constexpr unsigned long long
 678:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _S_do_sanitize_val(unsigned long long __val)
 679:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { return __val & ~((~static_cast<unsigned long long>(0)) << _Nb); }
 680:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     };
 681:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
 682:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 683:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   /**
 684:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  The %bitset class represents a @e fixed-size sequence of bits.
 685:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 686:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  @ingroup containers
 687:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 688:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  (Note that %bitset does @e not meet the formal requirements of a
 689:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  <a href="tables.html#65">container</a>.  Mainly, it lacks iterators.)
 690:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 691:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  The template argument, @a Nb, may be any non-negative number,
 692:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  specifying the number of bits (e.g., "0", "12", "1024*1024").
 693:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 694:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  In the general unoptimized case, storage is allocated in word-sized
 695:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  blocks.  Let B be the number of bits in a word, then (Nb+(B-1))/B
 696:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  words will be used for storage.  B - Nb%B bits are unused.  (They are
 697:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  the high-order bits in the highest word.)  It is a class invariant
 698:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  that those unused bits are always zero.
 699:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 700:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  If you think of %bitset as <em>a simple array of bits</em>, be
 701:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  aware that your mental picture is reversed: a %bitset behaves
 702:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  the same way as bits in integers do, with the bit at index 0 in
 703:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  the <em>least significant / right-hand</em> position, and the bit at
 704:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  index Nb-1 in the <em>most significant / left-hand</em> position.
 705:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  Thus, unlike other containers, a %bitset's index <em>counts from
 706:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  right to left</em>, to put it very loosely.
 707:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 708:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  This behavior is preserved when translating to and from strings.  For
 709:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  example, the first line of the following program probably prints
 710:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  <em>b(&apos;a&apos;) is 0001100001</em> on a modern ASCII system.
 711:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 712:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  @code
 713:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *     #include <bitset>
 714:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *     #include <iostream>
 715:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *     #include <sstream>
 716:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 717:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *     using namespace std;
 718:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 719:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *     int main()
 720:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *     {
 721:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *         long         a = 'a';
 722:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *         bitset<10>   b(a);
 723:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 724:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *         cout << "b('a') is " << b << endl;
 725:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 726:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *         ostringstream s;
 727:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *         s << b;
 728:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *         string  str = s.str();
 729:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *         cout << "index 3 in the string is " << str[3] << " but\n"
 730:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *              << "index 3 in the bitset is " << b[3] << endl;
 731:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *     }
 732:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  @endcode
 733:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 734:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  Also see:
 735:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt12ch33s02.html
 736:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  for a description of extensions.
 737:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 738:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  Most of the actual code isn't contained in %bitset<> itself, but in the
 739:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  base class _Base_bitset.  The base class works with whole words, not with
 740:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  individual bits.  This allows us to specialize _Base_bitset for the
 741:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  important special case where the %bitset is only a single word.
 742:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *
 743:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  Extra confusion can result due to the fact that the storage for
 744:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  _Base_bitset @e is a regular array, and is indexed as such.  This is
 745:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****    *  carefully encapsulated.
 746:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   */
 747:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****   template<size_t _Nb>
 748:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     class bitset
 749:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     : private _Base_bitset<_GLIBCXX_BITSET_WORDS(_Nb)>
 750:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     {
 751:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     private:
 752:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       typedef _Base_bitset<_GLIBCXX_BITSET_WORDS(_Nb)> _Base;
 753:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       typedef unsigned long _WordT;
 754:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 755:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       template<class _CharT, class _Traits, class _Alloc>
 756:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 757:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_check_initial_position(const std::basic_string<_CharT, _Traits, _Alloc>& __s,
 758:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 				size_t __position) const
 759:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 760:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	if (__position > __s.size())
 761:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  __throw_out_of_range_fmt(__N("bitset::bitset: __position "
 762:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 				       "(which is %zu) > __s.size() "
 763:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 				       "(which is %zu)"),
 764:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 				   __position, __s.size());
 765:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 766:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 767:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void _M_check(size_t __position, const char *__s) const
 768:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 769:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	if (__position >= _Nb)
 770:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  __throw_out_of_range_fmt(__N("%s: __position (which is %zu) "
 771:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 				       ">= _Nb (which is %zu)"),
 772:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 				   __s, __position, _Nb);
 773:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 774:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 775:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       void
 776:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       _M_do_sanitize() _GLIBCXX_NOEXCEPT
 777:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       { 
 778:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	typedef _Sanitize<_Nb % _GLIBCXX_BITSET_BITS_PER_WORD> __sanitize_type;
 779:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	__sanitize_type::_S_do_sanitize(this->_M_hiword());
 780:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       }
 781:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 782:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #if __cplusplus >= 201103L
 783:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       template<typename> friend struct hash;
 784:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** #endif
 785:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 786:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****     public:
 787:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       /**
 788:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        *  This encapsulates the concept of a single bit.  An instance of this
 789:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        *  class is a proxy for an actual bit; this way the individual bit
 790:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        *  operations are done as faster word-size bitwise instructions.
 791:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        *
 792:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        *  Most users will never need to use this class directly; conversions
 793:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        *  to and from bool are automatic and should be transparent.  Overloaded
 794:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        *  operators help to preserve the illusion.
 795:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        *
 796:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        *  (On a typical system, this <em>bit %reference</em> is 64
 797:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        *  times the size of an actual bit.  Ha.)
 798:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****        */
 799:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       class reference
 800:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       {
 801:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	friend class bitset;
 802:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 803:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	_WordT*	_M_wp;
 804:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	size_t 	_M_bpos;
 805:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	
 806:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	// left undefined
 807:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	reference();
 808:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	
 809:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset ****       public:
 810:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	reference(bitset& __b, size_t __pos) _GLIBCXX_NOEXCEPT
 811:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	{
 812:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  _M_wp = &__b._M_getword(__pos);
 813:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  _M_bpos = _Base::_S_whichbit(__pos);
 814:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	}
 815:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 816:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	~reference() _GLIBCXX_NOEXCEPT
 817:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	{ }
 818:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 819:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	// For b[i] = __x;
 820:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	reference&
 821:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	operator=(bool __x) _GLIBCXX_NOEXCEPT
 822:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	{
 823:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  if (__x)
 824:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    *_M_wp |= _Base::_S_maskbit(_M_bpos);
 230              		.loc 4 824 0
 231 0012 D0F8F840 		ldrmi	r4, [r0, #248]
 232              	.LBE551:
 233              	.LBE553:
 234              	.LBE559:
 312:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             metrics_enable_[i] = true;
 313:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         metrics_mask >>= 1;
 235              		.loc 1 313 0
 236 0016 4FEA5101 		lsr	r1, r1, #1
 237              	.LVL20:
 314:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         ++i;
 238              		.loc 1 314 0
 239 001a 02F10102 		add	r2, r2, #1
 240              	.LVL21:
 241              	.LBB560:
 242              	.LBB554:
 243              	.LBB552:
 244              		.loc 4 824 0
 245 001e 44BF     		itt	mi
 246 0020 2343     		orrmi	r3, r3, r4
 247 0022 C0F8F830 		strmi	r3, [r0, #248]
 248              	.LVL22:
 249 0026 EDE7     		b	.L9
 250              	.LVL23:
 251              	.L15:
 252              	.LBE552:
 253              	.LBE554:
 254              	.LBE560:
 255              	.LBE561:
 315:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 316:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 256              		.loc 1 316 0
 257 0028 10BD     		pop	{r4, pc}
 258              		.cfi_endproc
 259              	.LFE1028:
 261              		.section	.text._ZN18contrast_processor18get_rb_line_metricENS_11metric_typeERK21circular_cache_buf
 262              		.align	1
 263              		.global	_ZN18contrast_processor18get_rb_line_metricENS_11metric_typeERK21circular_cache_bufferISt5
 264              		.thumb
 265              		.thumb_func
 267              	_ZN18contrast_processor18get_rb_line_metricENS_11metric_typeERK21circular_cache_bufferISt5arrayIsLj
 268              	.LFB1033:
 317:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 318:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** void contrast_processor::update_red_metric(metric_type metric) {
 319:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].red += get_rb_line_metric(metric, red_roi_cache_);
 320:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 321:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 322:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** void contrast_processor::update_blue_metric(metric_type metric) {
 323:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].blue += get_rb_line_metric(metric, blue_roi_cache_);
 324:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 325:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 326:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** void contrast_processor::update_green_metric_even(metric_type metric) {
 327:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].green += get_green_line_metric(metric, -1);
 328:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 329:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 330:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** void contrast_processor::update_green_metric_odd(metric_type metric) {
 331:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].green += get_green_line_metric(metric, 1);
 332:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 333:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 334:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** std::uint64_t contrast_processor::get_rb_line_metric(metric_type metric, const roi_color_cache& col
 269              		.loc 1 334 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              	.LVL24:
 274 0000 10B5     		push	{r4, lr}
 275              	.LCFI3:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 335:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     return (*metric_algo_arr_[metric].get_rb_line_metric_fun)(color_cache, roi_width_);
 279              		.loc 1 335 0
 280 0002 054C     		ldr	r4, .L17
 281 0004 0C23     		movs	r3, #12
 282 0006 03FB0143 		mla	r3, r3, r1, r4
 283 000a 4188     		ldrh	r1, [r0, #2]
 284              	.LVL25:
 336:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 285              		.loc 1 336 0
 286 000c BDE81040 		pop	{r4, lr}
 287              	.LCFI4:
 288              		.cfi_restore 14
 289              		.cfi_restore 4
 290              		.cfi_def_cfa_offset 0
 335:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     return (*metric_algo_arr_[metric].get_rb_line_metric_fun)(color_cache, roi_width_);
 291              		.loc 1 335 0
 292 0010 1046     		mov	r0, r2
 293              	.LVL26:
 294 0012 9B68     		ldr	r3, [r3, #8]
 295 0014 1847     		bx	r3
 296              	.LVL27:
 297              	.L18:
 298 0016 00BF     		.align	2
 299              	.L17:
 300 0018 00000000 		.word	.LANCHOR0
 301              		.cfi_endproc
 302              	.LFE1033:
 304              		.section	.text._ZN18contrast_processor17update_red_metricENS_11metric_typeE,"ax",%progbits
 305              		.align	1
 306              		.global	_ZN18contrast_processor17update_red_metricENS_11metric_typeE
 307              		.thumb
 308              		.thumb_func
 310              	_ZN18contrast_processor17update_red_metricENS_11metric_typeE:
 311              	.LFB1029:
 318:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].red += get_rb_line_metric(metric, red_roi_cache_);
 312              		.loc 1 318 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL28:
 317 0000 38B5     		push	{r3, r4, r5, lr}
 318              	.LCFI5:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 3, -16
 321              		.cfi_offset 4, -12
 322              		.cfi_offset 5, -8
 323              		.cfi_offset 14, -4
 319:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 324              		.loc 1 319 0
 325 0002 00F60802 		addw	r2, r0, #2056
 326 0006 074B     		ldr	r3, .L20
 318:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].red += get_rb_line_metric(metric, red_roi_cache_);
 327              		.loc 1 318 0
 328 0008 0546     		mov	r5, r0
 329 000a 0C46     		mov	r4, r1
 319:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 330              		.loc 1 319 0
 331 000c 9847     		blx	r3
 332              	.LVL29:
 333 000e 1823     		movs	r3, #24
 334 0010 03FB0453 		mla	r3, r3, r4, r5
 335 0014 D3E90445 		ldrd	r4, [r3, #16]
 336              	.LVL30:
 337 0018 0019     		adds	r0, r0, r4
 338 001a 6941     		adcs	r1, r1, r5
 339 001c C3E90401 		strd	r0, [r3, #16]
 340 0020 38BD     		pop	{r3, r4, r5, pc}
 341              	.LVL31:
 342              	.L21:
 343 0022 00BF     		.align	2
 344              	.L20:
 345 0024 00000000 		.word	_ZN18contrast_processor18get_rb_line_metricENS_11metric_typeERK21circular_cache_bufferISt5ar
 346              		.cfi_endproc
 347              	.LFE1029:
 349              		.section	.text._ZN18contrast_processor18update_blue_metricENS_11metric_typeE,"ax",%progbits
 350              		.align	1
 351              		.global	_ZN18contrast_processor18update_blue_metricENS_11metric_typeE
 352              		.thumb
 353              		.thumb_func
 355              	_ZN18contrast_processor18update_blue_metricENS_11metric_typeE:
 356              	.LFB1030:
 322:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].blue += get_rb_line_metric(metric, blue_roi_cache_);
 357              		.loc 1 322 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              	.LVL32:
 362 0000 38B5     		push	{r3, r4, r5, lr}
 363              	.LCFI6:
 364              		.cfi_def_cfa_offset 16
 365              		.cfi_offset 3, -16
 366              		.cfi_offset 4, -12
 367              		.cfi_offset 5, -8
 368              		.cfi_offset 14, -4
 323:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 369              		.loc 1 323 0
 370 0002 00F61472 		addw	r2, r0, #3860
 371 0006 074B     		ldr	r3, .L23
 322:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].blue += get_rb_line_metric(metric, blue_roi_cache_);
 372              		.loc 1 322 0
 373 0008 0546     		mov	r5, r0
 374 000a 0C46     		mov	r4, r1
 323:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 375              		.loc 1 323 0
 376 000c 9847     		blx	r3
 377              	.LVL33:
 378 000e 1823     		movs	r3, #24
 379 0010 03FB0453 		mla	r3, r3, r4, r5
 380 0014 D3E90645 		ldrd	r4, [r3, #24]
 381              	.LVL34:
 382 0018 0019     		adds	r0, r0, r4
 383 001a 6941     		adcs	r1, r1, r5
 384 001c C3E90601 		strd	r0, [r3, #24]
 385 0020 38BD     		pop	{r3, r4, r5, pc}
 386              	.LVL35:
 387              	.L24:
 388 0022 00BF     		.align	2
 389              	.L23:
 390 0024 00000000 		.word	_ZN18contrast_processor18get_rb_line_metricENS_11metric_typeERK21circular_cache_bufferISt5ar
 391              		.cfi_endproc
 392              	.LFE1030:
 394              		.section	.text._ZN18contrast_processor21get_green_line_metricENS_11metric_typeEs,"ax",%progbits
 395              		.align	1
 396              		.global	_ZN18contrast_processor21get_green_line_metricENS_11metric_typeEs
 397              		.thumb
 398              		.thumb_func
 400              	_ZN18contrast_processor21get_green_line_metricENS_11metric_typeEs:
 401              	.LFB1034:
 337:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 338:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** std::uint64_t contrast_processor::get_green_line_metric(metric_type metric, std::int16_t prev_line_
 402              		.loc 1 338 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              	.LVL36:
 407 0000 10B5     		push	{r4, lr}
 408              	.LCFI7:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 4, -8
 411              		.cfi_offset 14, -4
 412              		.loc 1 338 0
 413 0002 0446     		mov	r4, r0
 339:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     return (*metric_algo_arr_[metric].get_green_line_metric_fun)(green_roi_cache_, roi_width_, prev
 414              		.loc 1 339 0
 415 0004 0C23     		movs	r3, #12
 416 0006 0548     		ldr	r0, .L26
 417              	.LVL37:
 418 0008 03FB0101 		mla	r1, r3, r1, r0
 419              	.LVL38:
 420 000c 04F1FC00 		add	r0, r4, #252
 421 0010 4B68     		ldr	r3, [r1, #4]
 422 0012 6188     		ldrh	r1, [r4, #2]
 340:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 423              		.loc 1 340 0
 424 0014 BDE81040 		pop	{r4, lr}
 425              	.LCFI8:
 426              		.cfi_restore 14
 427              		.cfi_restore 4
 428              		.cfi_def_cfa_offset 0
 429              	.LVL39:
 339:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     return (*metric_algo_arr_[metric].get_green_line_metric_fun)(green_roi_cache_, roi_width_, prev
 430              		.loc 1 339 0
 431 0018 1847     		bx	r3
 432              	.LVL40:
 433              	.L27:
 434 001a 00BF     		.align	2
 435              	.L26:
 436 001c 00000000 		.word	.LANCHOR0
 437              		.cfi_endproc
 438              	.LFE1034:
 440              		.section	.text._ZN18contrast_processor24update_green_metric_evenENS_11metric_typeE,"ax",%progbits
 441              		.align	1
 442              		.global	_ZN18contrast_processor24update_green_metric_evenENS_11metric_typeE
 443              		.thumb
 444              		.thumb_func
 446              	_ZN18contrast_processor24update_green_metric_evenENS_11metric_typeE:
 447              	.LFB1031:
 326:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].green += get_green_line_metric(metric, -1);
 448              		.loc 1 326 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              	.LVL41:
 453 0000 38B5     		push	{r3, r4, r5, lr}
 454              	.LCFI9:
 455              		.cfi_def_cfa_offset 16
 456              		.cfi_offset 3, -16
 457              		.cfi_offset 4, -12
 458              		.cfi_offset 5, -8
 459              		.cfi_offset 14, -4
 327:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 460              		.loc 1 327 0
 461 0002 4FF0FF32 		mov	r2, #-1
 462 0006 074B     		ldr	r3, .L29
 326:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].green += get_green_line_metric(metric, -1);
 463              		.loc 1 326 0
 464 0008 0546     		mov	r5, r0
 465 000a 0C46     		mov	r4, r1
 327:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 466              		.loc 1 327 0
 467 000c 9847     		blx	r3
 468              	.LVL42:
 469 000e 1823     		movs	r3, #24
 470 0010 03FB0453 		mla	r3, r3, r4, r5
 471 0014 D3E90245 		ldrd	r4, [r3, #8]
 472              	.LVL43:
 473 0018 0019     		adds	r0, r0, r4
 474 001a 6941     		adcs	r1, r1, r5
 475 001c C3E90201 		strd	r0, [r3, #8]
 476 0020 38BD     		pop	{r3, r4, r5, pc}
 477              	.LVL44:
 478              	.L30:
 479 0022 00BF     		.align	2
 480              	.L29:
 481 0024 00000000 		.word	_ZN18contrast_processor21get_green_line_metricENS_11metric_typeEs
 482              		.cfi_endproc
 483              	.LFE1031:
 485              		.section	.text._ZN18contrast_processor23update_green_metric_oddENS_11metric_typeE,"ax",%progbits
 486              		.align	1
 487              		.global	_ZN18contrast_processor23update_green_metric_oddENS_11metric_typeE
 488              		.thumb
 489              		.thumb_func
 491              	_ZN18contrast_processor23update_green_metric_oddENS_11metric_typeE:
 492              	.LFB1032:
 330:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].green += get_green_line_metric(metric, 1);
 493              		.loc 1 330 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              	.LVL45:
 498 0000 38B5     		push	{r3, r4, r5, lr}
 499              	.LCFI10:
 500              		.cfi_def_cfa_offset 16
 501              		.cfi_offset 3, -16
 502              		.cfi_offset 4, -12
 503              		.cfi_offset 5, -8
 504              		.cfi_offset 14, -4
 331:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 505              		.loc 1 331 0
 506 0002 0122     		movs	r2, #1
 507 0004 064B     		ldr	r3, .L32
 330:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     metrics_arr_[metric].green += get_green_line_metric(metric, 1);
 508              		.loc 1 330 0
 509 0006 0546     		mov	r5, r0
 510 0008 0C46     		mov	r4, r1
 331:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 511              		.loc 1 331 0
 512 000a 9847     		blx	r3
 513              	.LVL46:
 514 000c 1823     		movs	r3, #24
 515 000e 03FB0453 		mla	r3, r3, r4, r5
 516 0012 D3E90245 		ldrd	r4, [r3, #8]
 517              	.LVL47:
 518 0016 0019     		adds	r0, r0, r4
 519 0018 6941     		adcs	r1, r1, r5
 520 001a C3E90201 		strd	r0, [r3, #8]
 521 001e 38BD     		pop	{r3, r4, r5, pc}
 522              	.LVL48:
 523              	.L33:
 524              		.align	2
 525              	.L32:
 526 0020 00000000 		.word	_ZN18contrast_processor21get_green_line_metricENS_11metric_typeEs
 527              		.cfi_endproc
 528              	.LFE1032:
 530              		.section	.text._ZN18contrast_processor19update_metrics_evenEt,"ax",%progbits
 531              		.align	1
 532              		.global	_ZN18contrast_processor19update_metrics_evenEt
 533              		.thumb
 534              		.thumb_func
 536              	_ZN18contrast_processor19update_metrics_evenEt:
 537              	.LFB1036:
 341:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 342:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** void contrast_processor::process_line(image_pixel_iter line_start) {
 343:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     roi_color_cache* even_cache;
 344:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     roi_color_cache* odd_cache;
 345:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     if ((line_cnt_ & 1) == 0) {
 346:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         even_cache = &green_roi_cache_;
 347:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         odd_cache = &red_roi_cache_;
 348:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     } else {
 349:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         even_cache = &blue_roi_cache_;
 350:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         odd_cache = &green_roi_cache_;
 351:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 352:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     get_color_roi(line_start, even_cache, odd_cache);
 353:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint16_t num_lines_green = line_cnt_ + 1;
 354:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     if ((line_cnt_ & 1) == 0) {
 355:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         update_metrics_even(num_lines_green);
 356:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     } else {
 357:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         update_metrics_odd(num_lines_green);
 358:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 359:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     ++line_cnt_;
 360:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 361:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 362:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** void contrast_processor::update_metrics_even(std::uint16_t num_lines) {
 538              		.loc 1 362 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              	.LVL49:
 543 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 544              	.LCFI11:
 545              		.cfi_def_cfa_offset 32
 546              		.cfi_offset 4, -32
 547              		.cfi_offset 5, -28
 548              		.cfi_offset 6, -24
 549              		.cfi_offset 7, -20
 550              		.cfi_offset 8, -16
 551              		.cfi_offset 9, -12
 552              		.cfi_offset 10, -8
 553              		.cfi_offset 14, -4
 554              	.LBB582:
 555              	.LBB583:
 556              	.LBB584:
 363:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     for (unsigned int i = 0; i < NUM_METRICS; ++i) {
 364:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if (metrics_enable_[i]) {
 365:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             metric_type mt = static_cast<metric_type>(i);
 366:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             metric_algo_desc& ma = metric_algo_arr_[i];
 367:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             if (num_lines >= ma.min_lines)
 368:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                 update_green_metric_even(mt);
 369:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::uint16_t num_lines_red = (num_lines + 1) / 2;
 557              		.loc 1 369 0
 558 0004 4E1C     		adds	r6, r1, #1
 559              	.LBE584:
 560              	.LBE583:
 561              	.LBE582:
 362:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     for (unsigned int i = 0; i < NUM_METRICS; ++i) {
 562              		.loc 1 362 0
 563 0006 0746     		mov	r7, r0
 564 0008 8846     		mov	r8, r1
 565              	.LBB595:
 566              	.LBB593:
 567              	.LBB585:
 568              		.loc 1 369 0
 569 000a C6F34F06 		ubfx	r6, r6, #1, #16
 570              	.LBE585:
 571              	.LBE593:
 363:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     for (unsigned int i = 0; i < NUM_METRICS; ++i) {
 572              		.loc 1 363 0
 573 000e 0024     		movs	r4, #0
 574              	.LVL50:
 575              	.L39:
 576              	.LBB594:
 577              	.LBB586:
 578              	.LBB587:
 579              	.LBB588:
 580              	.LBB589:
 403:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 581              		.loc 4 403 0
 582 0010 0123     		movs	r3, #1
 583              	.LBE589:
 584              	.LBE588:
 825:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  else
 826:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    *_M_wp &= ~_Base::_S_maskbit(_M_bpos);
 827:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  return *this;
 828:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	}
 829:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 830:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	// For b[i] = b[__j];
 831:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	reference&
 832:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	operator=(const reference& __j) _GLIBCXX_NOEXCEPT
 833:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	{
 834:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  if ((*(__j._M_wp) & _Base::_S_maskbit(__j._M_bpos)))
 835:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    *_M_wp |= _Base::_S_maskbit(_M_bpos);
 836:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  else
 837:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	    *_M_wp &= ~_Base::_S_maskbit(_M_bpos);
 838:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	  return *this;
 839:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	}
 840:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 841:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	// Flips the bit
 842:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	bool
 843:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	operator~() const _GLIBCXX_NOEXCEPT
 844:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	{ return (*(_M_wp) & _Base::_S_maskbit(_M_bpos)) == 0; }
 845:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 846:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	// For __x = b[i];
 847:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	operator bool() const _GLIBCXX_NOEXCEPT
 848:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 	{ return (*(_M_wp) & _Base::_S_maskbit(_M_bpos)) != 0; }
 585              		.loc 4 848 0
 586 0012 D7F8F820 		ldr	r2, [r7, #248]
 587              	.LBB591:
 588              	.LBB590:
 403:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 589              		.loc 4 403 0
 590 0016 A340     		lsls	r3, r3, r4
 591              	.LBE590:
 592              	.LBE591:
 593              	.LBE587:
 594              	.LBE586:
 364:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             metric_type mt = static_cast<metric_type>(i);
 595              		.loc 1 364 0
 596 0018 1342     		tst	r3, r2
 597 001a 15D0     		beq	.L36
 598 001c 0C25     		movs	r5, #12
 599              	.LBB592:
 367:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                 update_green_metric_even(mt);
 600              		.loc 1 367 0
 601 001e DFF83CA0 		ldr	r10, .L41+8
 365:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             metric_algo_desc& ma = metric_algo_arr_[i];
 602              		.loc 1 365 0
 603 0022 5FFA84F9 		uxtb	r9, r4
 604              	.LVL51:
 605 0026 6543     		muls	r5, r4, r5
 367:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                 update_green_metric_even(mt);
 606              		.loc 1 367 0
 607 0028 35F80A30 		ldrh	r3, [r5, r10]
 608 002c 4345     		cmp	r3, r8
 609 002e 03D8     		bhi	.L37
 368:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::uint16_t num_lines_red = (num_lines + 1) / 2;
 610              		.loc 1 368 0
 611 0030 3846     		mov	r0, r7
 612 0032 4946     		mov	r1, r9
 613 0034 074B     		ldr	r3, .L41
 614 0036 9847     		blx	r3
 615              	.LVL52:
 616              	.L37:
 370:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             if (num_lines_red >= ma.min_lines)
 617              		.loc 1 370 0
 618 0038 3AF80530 		ldrh	r3, [r10, r5]
 619 003c B342     		cmp	r3, r6
 620 003e 03D8     		bhi	.L36
 371:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                 update_red_metric(mt);
 621              		.loc 1 371 0
 622 0040 3846     		mov	r0, r7
 623 0042 4946     		mov	r1, r9
 624 0044 044B     		ldr	r3, .L41+4
 625 0046 9847     		blx	r3
 626              	.LVL53:
 627              	.L36:
 628              	.LBE592:
 629              	.LBE594:
 363:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if (metrics_enable_[i]) {
 630              		.loc 1 363 0 discriminator 2
 631 0048 0134     		adds	r4, r4, #1
 632              	.LVL54:
 633 004a 0A2C     		cmp	r4, #10
 634 004c E0D1     		bne	.L39
 635              	.LBE595:
 372:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 373:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 374:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 636              		.loc 1 374 0
 637 004e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 638              	.LVL55:
 639              	.L42:
 640 0052 00BF     		.align	2
 641              	.L41:
 642 0054 00000000 		.word	_ZN18contrast_processor24update_green_metric_evenENS_11metric_typeE
 643 0058 00000000 		.word	_ZN18contrast_processor17update_red_metricENS_11metric_typeE
 644 005c 00000000 		.word	.LANCHOR0
 645              		.cfi_endproc
 646              	.LFE1036:
 648              		.section	.text._ZN18contrast_processor18update_metrics_oddEt,"ax",%progbits
 649              		.align	1
 650              		.global	_ZN18contrast_processor18update_metrics_oddEt
 651              		.thumb
 652              		.thumb_func
 654              	_ZN18contrast_processor18update_metrics_oddEt:
 655              	.LFB1037:
 375:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 376:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** void contrast_processor::update_metrics_odd(std::uint16_t num_lines) {
 656              		.loc 1 376 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              	.LVL56:
 661 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 662              	.LCFI12:
 663              		.cfi_def_cfa_offset 32
 664              		.cfi_offset 4, -32
 665              		.cfi_offset 5, -28
 666              		.cfi_offset 6, -24
 667              		.cfi_offset 7, -20
 668              		.cfi_offset 8, -16
 669              		.cfi_offset 9, -12
 670              		.cfi_offset 10, -8
 671              		.cfi_offset 14, -4
 672              		.loc 1 376 0
 673 0004 0646     		mov	r6, r0
 674 0006 0F46     		mov	r7, r1
 675              	.LBB616:
 676              	.LBB617:
 677              	.LBB618:
 377:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     for (unsigned int i = 0; i < NUM_METRICS; ++i) {
 378:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if (metrics_enable_[i]) {
 379:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             metric_type mt = static_cast<metric_type>(i);
 380:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             metric_algo_desc& ma = metric_algo_arr_[i];
 381:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             if (num_lines >= ma.min_lines)
 382:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                 update_green_metric_odd(mt);
 383:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::uint16_t num_lines_blue = num_lines / 2;
 678              		.loc 1 383 0
 679 0008 4FEA5108 		lsr	r8, r1, #1
 680              	.LBE618:
 681              	.LBE617:
 377:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     for (unsigned int i = 0; i < NUM_METRICS; ++i) {
 682              		.loc 1 377 0
 683 000c 0024     		movs	r4, #0
 684              	.LVL57:
 685              	.L48:
 686              	.LBB626:
 687              	.LBB619:
 688              	.LBB620:
 689              	.LBB621:
 690              	.LBB622:
 403:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 691              		.loc 4 403 0
 692 000e 0123     		movs	r3, #1
 693              	.LBE622:
 694              	.LBE621:
 695              		.loc 4 848 0
 696 0010 D6F8F820 		ldr	r2, [r6, #248]
 697              	.LBB624:
 698              	.LBB623:
 403:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bitset **** 
 699              		.loc 4 403 0
 700 0014 A340     		lsls	r3, r3, r4
 701              	.LBE623:
 702              	.LBE624:
 703              	.LBE620:
 704              	.LBE619:
 378:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             metric_type mt = static_cast<metric_type>(i);
 705              		.loc 1 378 0
 706 0016 1342     		tst	r3, r2
 707 0018 15D0     		beq	.L45
 708 001a 0C25     		movs	r5, #12
 709              	.LBB625:
 381:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                 update_green_metric_odd(mt);
 710              		.loc 1 381 0
 711 001c DFF838A0 		ldr	r10, .L50+8
 379:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             metric_algo_desc& ma = metric_algo_arr_[i];
 712              		.loc 1 379 0
 713 0020 5FFA84F9 		uxtb	r9, r4
 714              	.LVL58:
 715 0024 6543     		muls	r5, r4, r5
 381:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                 update_green_metric_odd(mt);
 716              		.loc 1 381 0
 717 0026 35F80A30 		ldrh	r3, [r5, r10]
 718 002a BB42     		cmp	r3, r7
 719 002c 03D8     		bhi	.L46
 382:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::uint16_t num_lines_blue = num_lines / 2;
 720              		.loc 1 382 0
 721 002e 3046     		mov	r0, r6
 722 0030 4946     		mov	r1, r9
 723 0032 074B     		ldr	r3, .L50
 724 0034 9847     		blx	r3
 725              	.LVL59:
 726              	.L46:
 384:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             if (num_lines_blue >= ma.min_lines)
 727              		.loc 1 384 0
 728 0036 3AF80530 		ldrh	r3, [r10, r5]
 729 003a 4345     		cmp	r3, r8
 730 003c 03D8     		bhi	.L45
 385:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                 update_blue_metric(mt);
 731              		.loc 1 385 0
 732 003e 3046     		mov	r0, r6
 733 0040 4946     		mov	r1, r9
 734 0042 044B     		ldr	r3, .L50+4
 735 0044 9847     		blx	r3
 736              	.LVL60:
 737              	.L45:
 738              	.LBE625:
 739              	.LBE626:
 377:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if (metrics_enable_[i]) {
 740              		.loc 1 377 0 discriminator 2
 741 0046 0134     		adds	r4, r4, #1
 742              	.LVL61:
 743 0048 0A2C     		cmp	r4, #10
 744 004a E0D1     		bne	.L48
 745              	.LBE616:
 386:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 387:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 388:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 746              		.loc 1 388 0
 747 004c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 748              	.LVL62:
 749              	.L51:
 750              		.align	2
 751              	.L50:
 752 0050 00000000 		.word	_ZN18contrast_processor23update_green_metric_oddENS_11metric_typeE
 753 0054 00000000 		.word	_ZN18contrast_processor18update_blue_metricENS_11metric_typeE
 754 0058 00000000 		.word	.LANCHOR0
 755              		.cfi_endproc
 756              	.LFE1037:
 758              		.section	.text._ZN18contrast_processor13get_color_roiE16image_pixel_iterP21circular_cache_bufferIS
 759              		.align	1
 760              		.global	_ZN18contrast_processor13get_color_roiE16image_pixel_iterP21circular_cache_bufferISt5array
 761              		.thumb
 762              		.thumb_func
 764              	_ZN18contrast_processor13get_color_roiE16image_pixel_iterP21circular_cache_bufferISt5arrayIsLj180EE
 765              	.LFB1038:
 389:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 390:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** void contrast_processor::get_color_roi(image_pixel_iter line,
 391:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         roi_color_cache* color_cache_even, roi_color_cache* color_cache_odd) {
 766              		.loc 1 391 0
 767              		.cfi_startproc
 768              		@ args = 4, pretend = 0, frame = 8
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              	.LVL63:
 771 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 772              	.LCFI13:
 773              		.cfi_def_cfa_offset 40
 774              		.cfi_offset 4, -28
 775              		.cfi_offset 5, -24
 776              		.cfi_offset 6, -20
 777              		.cfi_offset 7, -16
 778              		.cfi_offset 8, -12
 779              		.cfi_offset 9, -8
 780              		.cfi_offset 14, -4
 781              	.LVL64:
 782              		.loc 1 391 0
 783 0004 8DE80600 		stmia	sp, {r1, r2}
 784 0008 1946     		mov	r1, r3
 785              	.LBB653:
 786              	.LBB654:
 787              	.LBB655:
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             index_ = 0;
 788              		.loc 2 38 0
 789 000a 1A68     		ldr	r2, [r3]
 790              	.LBE655:
 791              	.LBE654:
 792              	.LBE653:
 793              		.loc 1 391 0
 794 000c 0646     		mov	r6, r0
 795 000e 0A9C     		ldr	r4, [sp, #40]
 796 0010 6D46     		mov	r5, sp
 797              	.LBB674:
 798              	.LBB657:
 799              	.LBB656:
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             index_ = 0;
 800              		.loc 2 38 0
 801 0012 0132     		adds	r2, r2, #1
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
 802              		.loc 2 39 0
 803 0014 052A     		cmp	r2, #5
 804 0016 08BF     		it	eq
 805 0018 0022     		moveq	r2, #0
 806              	.LBE656:
 807              	.LBE657:
 808              	.LBB658:
 392:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     color_cache_even->advance();
 393:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     color_cache_odd->advance();
 394:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     roi_color_line& even_line = color_cache_even->ref();
 395:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     roi_color_line& odd_line = color_cache_odd->ref();
 396:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     for (std::size_t i = 0; i < roi_width_; ++i) {
 809              		.loc 1 396 0
 810 001a 0027     		movs	r7, #0
 811 001c 41F8042B 		str	r2, [r1], #4
 812              	.LVL65:
 813              	.LBE658:
 814              	.LBB659:
 815              	.LBB660:
  38:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             index_ = 0;
 816              		.loc 2 38 0
 817 0020 2268     		ldr	r2, [r4]
 818 0022 0132     		adds	r2, r2, #1
  39:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****     }
 819              		.loc 2 39 0
 820 0024 052A     		cmp	r2, #5
 821 0026 08BF     		it	eq
 822 0028 0022     		moveq	r2, #0
 823 002a 44F8042B 		str	r2, [r4], #4
 824              	.LVL66:
 825              	.LBE660:
 826              	.LBE659:
 827              	.LBB661:
 828              	.LBB662:
 829              	.LBB663:
 830              	.LBB664:
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     };
 831              		.loc 3 53 0
 832 002e 1868     		ldr	r0, [r3]
 833              	.LVL67:
 834 0030 4FF4B473 		mov	r3, #360
 835              	.LVL68:
 836              	.LBE664:
 837              	.LBE663:
 838              	.LBE662:
 839              	.LBE661:
 840              	.LBB668:
 841              	.LBB669:
 842              	.LBB670:
 843              	.LBB671:
 844 0034 03FB0244 		mla	r4, r3, r2, r4
 845              	.LBE671:
 846              	.LBE670:
 847              	.LBE669:
 848              	.LBE668:
 849              	.LBB672:
 850              	.LBB667:
 851              	.LBB666:
 852              	.LBB665:
 853 0038 03FB0018 		mla	r8, r3, r0, r1
 854              	.LVL69:
 855              	.L55:
 856              	.LBE665:
 857              	.LBE666:
 858              	.LBE667:
 859              	.LBE672:
 860              	.LBB673:
 861              		.loc 1 396 0 discriminator 1
 862 003c 7388     		ldrh	r3, [r6, #2]
 863 003e 9F42     		cmp	r7, r3
 864 0040 0BD2     		bcs	.L57
 865              	.LVL70:
 397:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         even_line[i] = line.next_pixel_value();
 866              		.loc 1 397 0
 867 0042 DFF81C90 		ldr	r9, .L58
 868 0046 2846     		mov	r0, r5
 869 0048 C847     		blx	r9
 870              	.LVL71:
 871 004a 28F81700 		strh	r0, [r8, r7, lsl #1]	@ movhi
 872              	.LVL72:
 398:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         odd_line[i] = line.next_pixel_value();
 873              		.loc 1 398 0
 874 004e 2846     		mov	r0, r5
 875 0050 C847     		blx	r9
 876              	.LVL73:
 877 0052 24F81700 		strh	r0, [r4, r7, lsl #1]	@ movhi
 396:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         even_line[i] = line.next_pixel_value();
 878              		.loc 1 396 0
 879 0056 0137     		adds	r7, r7, #1
 880              	.LVL74:
 881 0058 F0E7     		b	.L55
 882              	.LVL75:
 883              	.L57:
 884              	.LBE673:
 885              	.LBE674:
 399:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** //        if (i == 0)
 400:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** //            SLOGF(SLOG_DEBUG, "New line");
 401:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** //        SLOGF(SLOG_DEBUG, "Even/odd line %d values: %d / %d", (int)i, (int)(even_line[i]), (int)(
 402:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 403:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 886              		.loc 1 403 0
 887 005a 03B0     		add	sp, sp, #12
 888              	.LCFI14:
 889              		.cfi_def_cfa_offset 28
 890              		@ sp needed
 891 005c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 892              	.LVL76:
 893              	.L59:
 894              		.align	2
 895              	.L58:
 896 0060 00000000 		.word	_ZN16image_pixel_iter16next_pixel_valueEv
 897              		.cfi_endproc
 898              	.LFE1038:
 900              		.section	.text._ZN18contrast_processor12process_lineE16image_pixel_iter,"ax",%progbits
 901              		.align	1
 902              		.global	_ZN18contrast_processor12process_lineE16image_pixel_iter
 903              		.thumb
 904              		.thumb_func
 906              	_ZN18contrast_processor12process_lineE16image_pixel_iter:
 907              	.LFB1035:
 342:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     roi_color_cache* even_cache;
 908              		.loc 1 342 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 8
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              	.LVL77:
 913 0000 30B5     		push	{r4, r5, lr}
 914              	.LCFI15:
 915              		.cfi_def_cfa_offset 12
 916              		.cfi_offset 4, -12
 917              		.cfi_offset 5, -8
 918              		.cfi_offset 14, -4
 919              	.LBB675:
 345:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         even_cache = &green_roi_cache_;
 920              		.loc 1 345 0
 921 0002 8388     		ldrh	r3, [r0, #4]
 922              	.LBE675:
 342:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     roi_color_cache* even_cache;
 923              		.loc 1 342 0
 924 0004 85B0     		sub	sp, sp, #20
 925              	.LCFI16:
 926              		.cfi_def_cfa_offset 32
 342:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     roi_color_cache* even_cache;
 927              		.loc 1 342 0
 928 0006 02AD     		add	r5, sp, #8
 929              	.LBB676:
 345:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         even_cache = &green_roi_cache_;
 930              		.loc 1 345 0
 931 0008 13F0010F 		tst	r3, #1
 932              	.LBE676:
 342:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     roi_color_cache* even_cache;
 933              		.loc 1 342 0
 934 000c 85E80600 		stmia	r5, {r1, r2}
 935 0010 00F1FC02 		add	r2, r0, #252
 936              	.LBB677:
 346:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         odd_cache = &red_roi_cache_;
 937              		.loc 1 346 0
 938 0014 06BF     		itte	eq
 939 0016 1346     		moveq	r3, r2
 940              	.LVL78:
 347:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     } else {
 941              		.loc 1 347 0
 942 0018 00F60802 		addweq	r2, r0, #2056
 943              	.LVL79:
 349:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         odd_cache = &green_roi_cache_;
 944              		.loc 1 349 0
 945 001c 00F61473 		addwne	r3, r0, #3860
 946              	.LVL80:
 352:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint16_t num_lines_green = line_cnt_ + 1;
 947              		.loc 1 352 0
 948 0020 0092     		str	r2, [sp]
 949              	.LBE677:
 342:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     roi_color_cache* even_cache;
 950              		.loc 1 342 0
 951 0022 0446     		mov	r4, r0
 952              	.LBB678:
 352:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     std::uint16_t num_lines_green = line_cnt_ + 1;
 953              		.loc 1 352 0
 954 0024 95E80600 		ldmia	r5, {r1, r2}
 955              	.LVL81:
 956 0028 074D     		ldr	r5, .L66
 957 002a A847     		blx	r5
 958              	.LVL82:
 353:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     if ((line_cnt_ & 1) == 0) {
 959              		.loc 1 353 0
 960 002c A388     		ldrh	r3, [r4, #4]
 961 002e 591C     		adds	r1, r3, #1
 354:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         update_metrics_even(num_lines_green);
 962              		.loc 1 354 0
 963 0030 DB07     		lsls	r3, r3, #31
 353:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     if ((line_cnt_ & 1) == 0) {
 964              		.loc 1 353 0
 965 0032 89B2     		uxth	r1, r1
 966              	.LVL83:
 355:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     } else {
 967              		.loc 1 355 0
 968 0034 2046     		mov	r0, r4
 969 0036 54BF     		ite	pl
 970 0038 044B     		ldrpl	r3, .L66+4
 357:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 971              		.loc 1 357 0
 972 003a 054B     		ldrmi	r3, .L66+8
 973 003c 9847     		blx	r3
 974              	.LVL84:
 359:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 975              		.loc 1 359 0
 976 003e A388     		ldrh	r3, [r4, #4]
 977 0040 0133     		adds	r3, r3, #1
 978 0042 A380     		strh	r3, [r4, #4]	@ movhi
 979              	.LBE678:
 360:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 980              		.loc 1 360 0
 981 0044 05B0     		add	sp, sp, #20
 982              	.LCFI17:
 983              		.cfi_def_cfa_offset 12
 984              		@ sp needed
 985 0046 30BD     		pop	{r4, r5, pc}
 986              	.LVL85:
 987              	.L67:
 988              		.align	2
 989              	.L66:
 990 0048 00000000 		.word	_ZN18contrast_processor13get_color_roiE16image_pixel_iterP21circular_cache_bufferISt5arrayIs
 991 004c 00000000 		.word	_ZN18contrast_processor19update_metrics_evenEt
 992 0050 00000000 		.word	_ZN18contrast_processor18update_metrics_oddEt
 993              		.cfi_endproc
 994              	.LFE1035:
 996              		.section	.text._ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt,"axG",%progbits,_ZNK21circ
 997              		.align	1
 998              		.weak	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 999              		.thumb
 1000              		.thumb_func
 1002              	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt:
 1003              	.LFB1058:
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return array_[circ_index(delta)];
 1004              		.loc 2 46 0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 1008              		@ link register save eliminated.
 1009              	.LVL86:
 1010              	.LBB685:
 1011              	.LBB686:
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         if (delta <= index_)
 1012              		.loc 2 53 0
 1013 0000 0523     		movs	r3, #5
 1014 0002 0268     		ldr	r2, [r0]
 1015              	.LVL87:
 1016              	.LBE686:
 1017              	.LBE685:
 1018              	.LBB688:
 1019              	.LBB689:
 1020              	.LBB690:
  53:/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/array ****     };
 1021              		.loc 3 53 0
 1022 0004 0430     		adds	r0, r0, #4
 1023              	.LVL88:
 1024              	.LBE690:
 1025              	.LBE689:
 1026              	.LBE688:
 1027              	.LBB691:
 1028              	.LBB687:
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         if (delta <= index_)
 1029              		.loc 2 53 0
 1030 0006 B1FBF3F3 		udiv	r3, r1, r3
 1031 000a 03EB8303 		add	r3, r3, r3, lsl #2
 1032 000e C91A     		subs	r1, r1, r3
 1033              	.LVL89:
  54:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****             ci = index_ - delta;
 1034              		.loc 2 54 0
 1035 0010 9142     		cmp	r1, r2
 1036 0012 88BF     		it	hi
 1037 0014 0532     		addhi	r2, r2, #5
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h ****         return ci;
 1038              		.loc 2 57 0
 1039 0016 511A     		subs	r1, r2, r1
 1040              	.LVL90:
 1041              	.LBE687:
 1042              	.LBE691:
  48:/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/contrast_processor.h **** 
 1043              		.loc 2 48 0
 1044 0018 4FF4B473 		mov	r3, #360
 1045 001c 03FB0100 		mla	r0, r3, r1, r0
 1046              	.LVL91:
 1047 0020 7047     		bx	lr
 1048              		.cfi_endproc
 1049              	.LFE1058:
 1051              		.section	.text._ZN12_GLOBAL__N_139get_rb_line_metric_filtered_gradient_thERK21circular_cache_buffe
 1052              		.align	1
 1053              		.thumb
 1054              		.thumb_func
 1056              	_ZN12_GLOBAL__N_139get_rb_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arrayIsLj18
 1057              	.LFB1014:
 243:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int32_t threshold_factor_q16 = 3 * 2 * (static_cast<std::int32_t>(1) << 16) / 5;
 1058              		.loc 1 243 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 24
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              	.LVL92:
 1063 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1064              	.LCFI18:
 1065              		.cfi_def_cfa_offset 36
 1066              		.cfi_offset 4, -36
 1067              		.cfi_offset 5, -32
 1068              		.cfi_offset 6, -28
 1069              		.cfi_offset 7, -24
 1070              		.cfi_offset 8, -20
 1071              		.cfi_offset 9, -16
 1072              		.cfi_offset 10, -12
 1073              		.cfi_offset 11, -8
 1074              		.cfi_offset 14, -4
 1075              	.LBB692:
 247:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 5; i < width; ++i) {
 1076              		.loc 1 247 0
 1077 0004 374B     		ldr	r3, .L76
 1078              	.LBE692:
 243:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int32_t threshold_factor_q16 = 3 * 2 * (static_cast<std::int32_t>(1) << 16) / 5;
 1079              		.loc 1 243 0
 1080 0006 87B0     		sub	sp, sp, #28
 1081              	.LCFI19:
 1082              		.cfi_def_cfa_offset 64
 243:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int32_t threshold_factor_q16 = 3 * 2 * (static_cast<std::int32_t>(1) << 16) / 5;
 1083              		.loc 1 243 0
 1084 0008 8B46     		mov	fp, r1
 1085              	.LBB697:
 247:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 5; i < width; ++i) {
 1086              		.loc 1 247 0
 1087 000a 0021     		movs	r1, #0
 1088              	.LVL93:
 1089              	.LBE697:
 243:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int32_t threshold_factor_q16 = 3 * 2 * (static_cast<std::int32_t>(1) << 16) / 5;
 1090              		.loc 1 243 0
 1091 000c 0746     		mov	r7, r0
 1092              	.LBB698:
 247:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 5; i < width; ++i) {
 1093              		.loc 1 247 0
 1094 000e 9847     		blx	r3
 1095              	.LVL94:
 1096              	.LBB693:
 248:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v1 = 3 * curr_line[i] + 2 * curr_line[i-1] + curr_line[i-2];
 1097              		.loc 1 248 0
 1098 0010 0525     		movs	r5, #5
 1099              	.LBE693:
 246:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 1100              		.loc 1 246 0
 1101 0012 4FF00008 		mov	r8, #0
 1102 0016 4FF00009 		mov	r9, #0
 247:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 5; i < width; ++i) {
 1103              		.loc 1 247 0
 1104 001a 0646     		mov	r6, r0
 1105              	.LVL95:
 1106              	.L73:
 1107              	.LBB696:
 248:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v1 = 3 * curr_line[i] + 2 * curr_line[i-1] + curr_line[i-2];
 1108              		.loc 1 248 0 discriminator 1
 1109 001c 5D45     		cmp	r5, fp
 1110 001e 5BD2     		bcs	.L75
 1111              	.LVL96:
 1112              	.LBB694:
 249:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v2 = curr_line[i-3] + 2 * curr_line[i-4] + 3 * curr_line[i-5];
 1113              		.loc 1 249 0
 1114 0020 7489     		ldrh	r4, [r6, #10]
 1115 0022 04EB4404 		add	r4, r4, r4, lsl #1
 1116 0026 3089     		ldrh	r0, [r6, #8]
 250:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1117              		.loc 1 250 0
 1118 0028 3188     		ldrh	r1, [r6]
 249:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v2 = curr_line[i-3] + 2 * curr_line[i-4] + 3 * curr_line[i-5];
 1119              		.loc 1 249 0
 1120 002a A4B2     		uxth	r4, r4
 1121              	.LVL97:
 1122 002c F388     		ldrh	r3, [r6, #6]
 1123 002e 04EB4000 		add	r0, r4, r0, lsl #1
 250:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1124              		.loc 1 250 0
 1125 0032 01EB4101 		add	r1, r1, r1, lsl #1
 249:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v2 = curr_line[i-3] + 2 * curr_line[i-4] + 3 * curr_line[i-5];
 1126              		.loc 1 249 0
 1127 0036 1844     		add	r0, r0, r3
 250:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1128              		.loc 1 250 0
 1129 0038 7388     		ldrh	r3, [r6, #2]
 1130 003a 01EB4301 		add	r1, r1, r3, lsl #1
 1131 003e B388     		ldrh	r3, [r6, #4]
 1132 0040 1944     		add	r1, r1, r3
 251:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v1 = 3 * curr_line[i] + 2 * color_cache.ref(1)[i] + color_cache.ref(2)[i];
 1133              		.loc 1 251 0
 1134 0042 DFF8A8C0 		ldr	ip, .L76+8
 1135 0046 2A23     		movs	r3, #42
 1136 0048 09B2     		sxth	r1, r1
 1137 004a 274A     		ldr	r2, .L76+4
 1138 004c 00B2     		sxth	r0, r0
 1139 004e CDF814C0 		str	ip, [sp, #20]
 1140 0052 E047     		blx	ip
 1141              	.LVL98:
 1142 0054 0023     		movs	r3, #0
 252:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v2 = color_cache.ref(3)[i] + 2 * color_cache.ref(4)[i] + 3 * color_cache.ref(5)[i];
 1143              		.loc 1 252 0
 1144 0056 DFF88CA0 		ldr	r10, .L76
 1145 005a 0121     		movs	r1, #1
 1146 005c 0236     		adds	r6, r6, #2
 251:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v1 = 3 * curr_line[i] + 2 * color_cache.ref(1)[i] + color_cache.ref(2)[i];
 1147              		.loc 1 251 0
 1148 005e 0246     		mov	r2, r0
 252:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v2 = color_cache.ref(3)[i] + 2 * color_cache.ref(4)[i] + 3 * color_cache.ref(5)[i];
 1149              		.loc 1 252 0
 1150 0060 3846     		mov	r0, r7
 251:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v1 = 3 * curr_line[i] + 2 * color_cache.ref(1)[i] + color_cache.ref(2)[i];
 1151              		.loc 1 251 0
 1152 0062 CDE90023 		strd	r2, [sp]
 1153              	.LVL99:
 252:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v2 = color_cache.ref(3)[i] + 2 * color_cache.ref(4)[i] + 3 * color_cache.ref(5)[i];
 1154              		.loc 1 252 0
 1155 0066 D047     		blx	r10
 1156              	.LVL100:
 1157 0068 0221     		movs	r1, #2
 1158 006a 0390     		str	r0, [sp, #12]
 1159              	.LVL101:
 1160 006c 3846     		mov	r0, r7
 1161              	.LVL102:
 1162 006e D047     		blx	r10
 1163              	.LVL103:
 1164 0070 039B     		ldr	r3, [sp, #12]
 1165 0072 33F81520 		ldrh	r2, [r3, r5, lsl #1]
 253:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1166              		.loc 1 253 0
 1167 0076 0321     		movs	r1, #3
 1168 0078 30F81530 		ldrh	r3, [r0, r5, lsl #1]
 1169 007c 03EB4203 		add	r3, r3, r2, lsl #1
 252:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v2 = color_cache.ref(3)[i] + 2 * color_cache.ref(4)[i] + 3 * color_cache.ref(5)[i];
 1170              		.loc 1 252 0
 1171 0080 2344     		add	r3, r3, r4
 253:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1172              		.loc 1 253 0
 1173 0082 3846     		mov	r0, r7
 1174              	.LVL104:
 252:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v2 = color_cache.ref(3)[i] + 2 * color_cache.ref(4)[i] + 3 * color_cache.ref(5)[i];
 1175              		.loc 1 252 0
 1176 0084 9BB2     		uxth	r3, r3
 1177 0086 0493     		str	r3, [sp, #16]
 1178              	.LVL105:
 253:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1179              		.loc 1 253 0
 1180 0088 D047     		blx	r10
 1181              	.LVL106:
 1182 008a 0521     		movs	r1, #5
 1183 008c 30F81520 		ldrh	r2, [r0, r5, lsl #1]
 1184 0090 3846     		mov	r0, r7
 1185              	.LVL107:
 1186 0092 0392     		str	r2, [sp, #12]
 1187              	.LVL108:
 1188 0094 D047     		blx	r10
 1189              	.LVL109:
 1190 0096 0421     		movs	r1, #4
 1191 0098 30F81540 		ldrh	r4, [r0, r5, lsl #1]
 1192 009c 3846     		mov	r0, r7
 1193              	.LVL110:
 1194 009e D047     		blx	r10
 1195              	.LVL111:
 1196 00a0 04EB4404 		add	r4, r4, r4, lsl #1
 1197 00a4 039A     		ldr	r2, [sp, #12]
 1198 00a6 A4B2     		uxth	r4, r4
 1199              	.LVL112:
 254:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1200              		.loc 1 254 0
 1201 00a8 049B     		ldr	r3, [sp, #16]
 1202 00aa DDF814C0 		ldr	ip, [sp, #20]
 253:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1203              		.loc 1 253 0
 1204 00ae 30F81510 		ldrh	r1, [r0, r5, lsl #1]
 1205 00b2 04EB4101 		add	r1, r4, r1, lsl #1
 1206 00b6 1144     		add	r1, r1, r2
 254:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1207              		.loc 1 254 0
 1208 00b8 18B2     		sxth	r0, r3
 1209              	.LVL113:
 1210 00ba 0B4A     		ldr	r2, .L76+4
 1211 00bc 2A23     		movs	r3, #42
 1212 00be 09B2     		sxth	r1, r1
 1213 00c0 E047     		blx	ip
 1214              	.LVL114:
 1215 00c2 DDE90023 		ldrd	r2, [sp]
 1216              	.LBE694:
 248:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v1 = 3 * curr_line[i] + 2 * curr_line[i-1] + curr_line[i-2];
 1217              		.loc 1 248 0
 1218 00c6 0135     		adds	r5, r5, #1
 1219              	.LVL115:
 1220 00c8 1218     		adds	r2, r2, r0
 1221 00ca 43F10003 		adc	r3, r3, #0
 1222              	.LBB695:
 254:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1223              		.loc 1 254 0
 1224 00ce 18EB0208 		adds	r8, r8, r2
 1225              	.LVL116:
 1226 00d2 49EB0309 		adc	r9, r9, r3
 1227              	.LVL117:
 1228 00d6 A1E7     		b	.L73
 1229              	.LVL118:
 1230              	.L75:
 1231              	.LBE695:
 1232              	.LBE696:
 1233              	.LBE698:
 257:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 1234              		.loc 1 257 0
 1235 00d8 4046     		mov	r0, r8
 1236 00da 4946     		mov	r1, r9
 1237 00dc 07B0     		add	sp, sp, #28
 1238              	.LCFI20:
 1239              		.cfi_def_cfa_offset 36
 1240              		@ sp needed
 1241 00de BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1242              	.LVL119:
 1243              	.L77:
 1244 00e2 00BF     		.align	2
 1245              	.L76:
 1246 00e4 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 1247 00e8 33330100 		.word	78643
 1248 00ec 00000000 		.word	_ZN12_GLOBAL__N_114square_diff_thEllls
 1249              		.cfi_endproc
 1250              	.LFE1014:
 1252              		.section	.text._ZN12_GLOBAL__N_142get_green_line_metric_filtered_gradient_thERK21circular_cache_bu
 1253              		.align	1
 1254              		.thumb
 1255              		.thumb_func
 1257              	_ZN12_GLOBAL__N_142get_green_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arrayIsL
 1258              	.LFB1015:
 259:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int32_t threshold_factor_q16 = 3 * 2 * (static_cast<std::int32_t>(1) << 16) / 5;
 1259              		.loc 1 259 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 48
 1262              		@ frame_needed = 0, uses_anonymous_args = 0
 1263              	.LVL120:
 1264 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1265              	.LCFI21:
 1266              		.cfi_def_cfa_offset 36
 1267              		.cfi_offset 4, -36
 1268              		.cfi_offset 5, -32
 1269              		.cfi_offset 6, -28
 1270              		.cfi_offset 7, -24
 1271              		.cfi_offset 8, -20
 1272              		.cfi_offset 9, -16
 1273              		.cfi_offset 10, -12
 1274              		.cfi_offset 11, -8
 1275              		.cfi_offset 14, -4
 1276 0004 8DB0     		sub	sp, sp, #52
 1277              	.LCFI22:
 1278              		.cfi_def_cfa_offset 88
 1279              	.LBB699:
 263:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = green_cache.ref(1);
 1280              		.loc 1 263 0
 1281 0006 504C     		ldr	r4, .L84
 1282              	.LBE699:
 259:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int32_t threshold_factor_q16 = 3 * 2 * (static_cast<std::int32_t>(1) << 16) / 5;
 1283              		.loc 1 259 0
 1284 0008 1546     		mov	r5, r2
 1285 000a 0091     		str	r1, [sp]
 1286              	.LVL121:
 1287              	.LBB709:
 263:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = green_cache.ref(1);
 1288              		.loc 1 263 0
 1289 000c 0021     		movs	r1, #0
 1290              	.LVL122:
 1291              	.LBE709:
 259:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const std::int32_t threshold_factor_q16 = 3 * 2 * (static_cast<std::int32_t>(1) << 16) / 5;
 1292              		.loc 1 259 0
 1293 000e 0646     		mov	r6, r0
 1294              	.LBB710:
 263:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = green_cache.ref(1);
 1295              		.loc 1 263 0
 1296 0010 A047     		blx	r4
 1297              	.LVL123:
 264:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = green_cache.ref(2);
 1298              		.loc 1 264 0
 1299 0012 0121     		movs	r1, #1
 263:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = green_cache.ref(1);
 1300              		.loc 1 263 0
 1301 0014 8346     		mov	fp, r0
 1302              	.LVL124:
 264:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = green_cache.ref(2);
 1303              		.loc 1 264 0
 1304 0016 3046     		mov	r0, r6
 1305              	.LVL125:
 1306 0018 A047     		blx	r4
 1307              	.LVL126:
 265:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line3 = green_cache.ref(3);
 1308              		.loc 1 265 0
 1309 001a 0221     		movs	r1, #2
 264:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = green_cache.ref(2);
 1310              		.loc 1 264 0
 1311 001c 8246     		mov	r10, r0
 1312              	.LVL127:
 265:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line3 = green_cache.ref(3);
 1313              		.loc 1 265 0
 1314 001e 3046     		mov	r0, r6
 1315              	.LVL128:
 1316 0020 A047     		blx	r4
 1317              	.LVL129:
 266:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line4 = green_cache.ref(4);
 1318              		.loc 1 266 0
 1319 0022 0321     		movs	r1, #3
 265:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line3 = green_cache.ref(3);
 1320              		.loc 1 265 0
 1321 0024 8146     		mov	r9, r0
 1322              	.LVL130:
 266:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line4 = green_cache.ref(4);
 1323              		.loc 1 266 0
 1324 0026 3046     		mov	r0, r6
 1325              	.LVL131:
 1326 0028 A047     		blx	r4
 1327              	.LVL132:
 267:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line5 = green_cache.ref(5);
 1328              		.loc 1 267 0
 1329 002a 0421     		movs	r1, #4
 266:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line4 = green_cache.ref(4);
 1330              		.loc 1 266 0
 1331 002c 8046     		mov	r8, r0
 1332              	.LVL133:
 267:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line5 = green_cache.ref(5);
 1333              		.loc 1 267 0
 1334 002e 3046     		mov	r0, r6
 1335              	.LVL134:
 1336 0030 A047     		blx	r4
 1337              	.LVL135:
 268:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin;
 1338              		.loc 1 268 0
 1339 0032 0521     		movs	r1, #5
 267:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line5 = green_cache.ref(5);
 1340              		.loc 1 267 0
 1341 0034 0746     		mov	r7, r0
 1342              	.LVL136:
 268:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin;
 1343              		.loc 1 268 0
 1344 0036 3046     		mov	r0, r6
 1345              	.LVL137:
 1346 0038 A047     		blx	r4
 1347              	.LVL138:
 271:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_begin = 2 * prev_line_offset;
 1348              		.loc 1 271 0
 1349 003a 002D     		cmp	r5, #0
 1350 003c 009B     		ldr	r3, [sp]
 273:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         } else {
 1351              		.loc 1 273 0
 1352 003e C8BF     		it	gt
 1353 0040 4FF6FD76 		movwgt	r6, #65533
 1354              	.LVL139:
 1355 0044 4FEA4502 		lsl	r2, r5, #1
 276:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1356              		.loc 1 276 0
 1357 0048 D4BF     		ite	le
 1358 004a 03EB4506 		addle	r6, r3, r5, lsl #1
 273:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         } else {
 1359              		.loc 1 273 0
 1360 004e 15FB0636 		smlabbgt	r6, r5, r6, r3
 1361              	.LBB700:
 1362              	.LBB701:
 280:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1363              		.loc 1 280 0
 1364 0052 6FF00103 		mvn	r3, #1
 1365              	.LBE701:
 1366              	.LBE700:
 275:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_end = width + 2 * prev_line_offset;
 1367              		.loc 1 275 0
 1368 0056 D8BF     		it	le
 1369 0058 A5EB8504 		suble	r4, r5, r5, lsl #2
 1370              	.LBB706:
 1371              	.LBB702:
 280:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1372              		.loc 1 280 0
 1373 005c 03FB05F3 		mul	r3, r3, r5
 1374              	.LBE702:
 1375              	.LBE706:
 272:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_end = width - 3 * prev_line_offset;
 1376              		.loc 1 272 0
 1377 0060 C8BF     		it	gt
 1378 0062 1446     		movgt	r4, r2
 1379              	.LVL140:
 1380 0064 09EB0301 		add	r1, r9, r3
 1381 0068 0691     		str	r1, [sp, #24]
 1382 006a 08EB0301 		add	r1, r8, r3
 1383 006e 5B00     		lsls	r3, r3, #1
 1384 0070 0791     		str	r1, [sp, #28]
 1385 0072 C118     		adds	r1, r0, r3
 1386 0074 FB18     		adds	r3, r7, r3
 1387 0076 0891     		str	r1, [sp, #32]
 1388 0078 0993     		str	r3, [sp, #36]
 1389 007a 0AEB0203 		add	r3, r10, r2
 1390 007e 0A93     		str	r3, [sp, #40]
 1391 0080 09EB0203 		add	r3, r9, r2
 1392 0084 0B93     		str	r3, [sp, #44]
 1393 0086 AB00     		lsls	r3, r5, #2
 1394 0088 9844     		add	r8, r8, r3
 1395              	.LVL141:
 1396              	.LBB707:
 1397              	.LBB703:
 283:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1398              		.loc 1 283 0
 1399 008a 1544     		add	r5, r5, r2
 1400 008c FB18     		adds	r3, r7, r3
 1401              	.LBE703:
 1402              	.LBE707:
 262:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref();
 1403              		.loc 1 262 0
 1404 008e 0022     		movs	r2, #0
 1405 0090 0593     		str	r3, [sp, #20]
 1406 0092 00EB4509 		add	r9, r0, r5, lsl #1
 1407              	.LVL142:
 1408 0096 0023     		movs	r3, #0
 1409 0098 CDE90023 		strd	r2, [sp]
 1410              	.LVL143:
 1411              	.L81:
 1412              	.LBB708:
 278:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v1 = 3 * curr_line[i] + 2 * prev_line1[i] + prev_line2[i-prev_line_offset]
 1413              		.loc 1 278 0 discriminator 1
 1414 009c B442     		cmp	r4, r6
 1415 009e 4ED2     		bcs	.L83
 1416              	.LVL144:
 1417              	.LBB704:
 279:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v2 = prev_line3[i-prev_line_offset] + 2 * prev_line4[i-2*prev_line_offset]
 1418              		.loc 1 279 0
 1419 00a0 3BF81450 		ldrh	r5, [fp, r4, lsl #1]
 1420 00a4 05EB4505 		add	r5, r5, r5, lsl #1
 1421 00a8 3AF81400 		ldrh	r0, [r10, r4, lsl #1]
 1422 00ac 069B     		ldr	r3, [sp, #24]
 1423 00ae ADB2     		uxth	r5, r5
 1424              	.LVL145:
 1425 00b0 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 1426              	.LVL146:
 1427 00b4 05EB4000 		add	r0, r5, r0, lsl #1
 1428 00b8 1844     		add	r0, r0, r3
 280:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1429              		.loc 1 280 0
 1430 00ba 089B     		ldr	r3, [sp, #32]
 1431 00bc 33F81410 		ldrh	r1, [r3, r4, lsl #1]
 1432 00c0 01EB4101 		add	r1, r1, r1, lsl #1
 1433 00c4 099B     		ldr	r3, [sp, #36]
 1434 00c6 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 1435 00ca 01EB4301 		add	r1, r1, r3, lsl #1
 1436 00ce 079B     		ldr	r3, [sp, #28]
 1437 00d0 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 1438 00d4 1944     		add	r1, r1, r3
 281:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v1 = 3 * curr_line[i] + 2 * prev_line1[i+prev_line_offset] + prev_line2[i+prev_line_off
 1439              		.loc 1 281 0
 1440 00d6 1D4A     		ldr	r2, .L84+4
 1441 00d8 2A23     		movs	r3, #42
 1442 00da 09B2     		sxth	r1, r1
 1443 00dc 1C4F     		ldr	r7, .L84+8
 1444 00de 00B2     		sxth	r0, r0
 1445 00e0 B847     		blx	r7
 1446              	.LVL147:
 1447 00e2 0023     		movs	r3, #0
 283:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1448              		.loc 1 283 0
 1449 00e4 0599     		ldr	r1, [sp, #20]
 1450 00e6 31F81410 		ldrh	r1, [r1, r4, lsl #1]
 1451 00ea 4900     		lsls	r1, r1, #1
 281:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v1 = 3 * curr_line[i] + 2 * prev_line1[i+prev_line_offset] + prev_line2[i+prev_line_off
 1452              		.loc 1 281 0
 1453 00ec 0246     		mov	r2, r0
 1454 00ee CDE90223 		strd	r2, [sp, #8]
 1455              	.LVL148:
 283:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1456              		.loc 1 283 0
 1457 00f2 38F81420 		ldrh	r2, [r8, r4, lsl #1]
 1458              	.LVL149:
 282:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v2 = prev_line3[i+2*prev_line_offset] + 2 * prev_line4[i+2*prev_line_offset] + 3 * prev
 1459              		.loc 1 282 0
 1460 00f6 0A9B     		ldr	r3, [sp, #40]
 1461 00f8 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1462 00fc 0B9B     		ldr	r3, [sp, #44]
 1463 00fe 05EB4005 		add	r5, r5, r0, lsl #1
 1464 0102 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 283:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1465              		.loc 1 283 0
 1466 0106 39F81430 		ldrh	r3, [r9, r4, lsl #1]
 1467 010a 03EB4303 		add	r3, r3, r3, lsl #1
 282:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             v2 = prev_line3[i+2*prev_line_offset] + 2 * prev_line4[i+2*prev_line_offset] + 3 * prev
 1468              		.loc 1 282 0
 1469 010e 2844     		add	r0, r0, r5
 1470              	.LVL150:
 283:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v1, v2, threshold_factor_q16, additive_noise_var);
 1471              		.loc 1 283 0
 1472 0110 11FA83F3 		uxtah	r3, r1, r3
 1473              	.LVL151:
 1474 0114 D118     		adds	r1, r2, r3
 284:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1475              		.loc 1 284 0
 1476 0116 00B2     		sxth	r0, r0
 1477 0118 09B2     		sxth	r1, r1
 1478 011a 0C4A     		ldr	r2, .L84+4
 1479              	.LVL152:
 1480 011c 2A23     		movs	r3, #42
 1481 011e B847     		blx	r7
 1482              	.LVL153:
 1483 0120 DDE90223 		ldrd	r2, [sp, #8]
 1484              	.LBE704:
 278:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v1 = 3 * curr_line[i] + 2 * prev_line1[i] + prev_line2[i-prev_line_offset]
 1485              		.loc 1 278 0
 1486 0124 0134     		adds	r4, r4, #1
 1487              	.LVL154:
 1488 0126 1218     		adds	r2, r2, r0
 1489 0128 43F10003 		adc	r3, r3, #0
 1490 012c 1046     		mov	r0, r2
 1491 012e 1946     		mov	r1, r3
 1492              	.LBB705:
 284:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1493              		.loc 1 284 0
 1494 0130 DDE90023 		ldrd	r2, [sp]
 1495 0134 1218     		adds	r2, r2, r0
 1496 0136 4B41     		adcs	r3, r3, r1
 1497 0138 CDE90023 		strd	r2, [sp]
 1498              	.LVL155:
 1499 013c AEE7     		b	.L81
 1500              	.LVL156:
 1501              	.L83:
 1502              	.LBE705:
 1503              	.LBE708:
 1504              	.LBE710:
 287:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** }
 1505              		.loc 1 287 0
 1506 013e DDE90001 		ldrd	r0, [sp]
 1507 0142 0DB0     		add	sp, sp, #52
 1508              	.LCFI23:
 1509              		.cfi_def_cfa_offset 36
 1510              	.LVL157:
 1511              		@ sp needed
 1512 0144 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1513              	.LVL158:
 1514              	.L85:
 1515              		.align	2
 1516              	.L84:
 1517 0148 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 1518 014c 33330100 		.word	78643
 1519 0150 00000000 		.word	_ZN12_GLOBAL__N_114square_diff_thEllls
 1520              		.cfi_endproc
 1521              	.LFE1015:
 1523              		.section	.text._ZN12_GLOBAL__N_148get_rb_line_metric_decimated4_gradient_th_factorERK21circular_ca
 1524              		.align	1
 1525              		.thumb
 1526              		.thumb_func
 1528              	_ZN12_GLOBAL__N_148get_rb_line_metric_decimated4_gradient_th_factorERK21circular_cache_bufferISt5ar
 1529              	.LFB1004:
 183:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 1530              		.loc 1 183 0
 1531              		.cfi_startproc
 1532              		@ args = 0, pretend = 0, frame = 16
 1533              		@ frame_needed = 0, uses_anonymous_args = 0
 1534              	.LVL159:
 1535 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1536              	.LCFI24:
 1537              		.cfi_def_cfa_offset 36
 1538              		.cfi_offset 4, -36
 1539              		.cfi_offset 5, -32
 1540              		.cfi_offset 6, -28
 1541              		.cfi_offset 7, -24
 1542              		.cfi_offset 8, -20
 1543              		.cfi_offset 9, -16
 1544              		.cfi_offset 10, -12
 1545              		.cfi_offset 11, -8
 1546              		.cfi_offset 14, -4
 1547 0004 85B0     		sub	sp, sp, #20
 1548              	.LCFI25:
 1549              		.cfi_def_cfa_offset 56
 1550              	.LBB711:
 185:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line4 = color_cache.ref(4);
 1551              		.loc 1 185 0
 1552 0006 1C4D     		ldr	r5, .L90
 1553              	.LBE711:
 183:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 1554              		.loc 1 183 0
 1555 0008 0646     		mov	r6, r0
 1556 000a 0291     		str	r1, [sp, #8]
 1557              	.LBB716:
 185:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line4 = color_cache.ref(4);
 1558              		.loc 1 185 0
 1559 000c 0021     		movs	r1, #0
 1560              	.LVL160:
 1561              	.LBE716:
 183:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 1562              		.loc 1 183 0
 1563 000e 9046     		mov	r8, r2
 1564 0010 9946     		mov	r9, r3
 1565              	.LBB717:
 185:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line4 = color_cache.ref(4);
 1566              		.loc 1 185 0
 1567 0012 A847     		blx	r5
 1568              	.LVL161:
 186:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 4; i < width; ++i) {
 1569              		.loc 1 186 0
 1570 0014 0421     		movs	r1, #4
 184:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 1571              		.loc 1 184 0
 1572 0016 0027     		movs	r7, #0
 185:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line4 = color_cache.ref(4);
 1573              		.loc 1 185 0
 1574 0018 0446     		mov	r4, r0
 1575              	.LVL162:
 186:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 4; i < width; ++i) {
 1576              		.loc 1 186 0
 1577 001a 3046     		mov	r0, r6
 1578              	.LVL163:
 1579 001c A847     		blx	r5
 1580              	.LVL164:
 1581 001e 0634     		adds	r4, r4, #6
 1582              	.LVL165:
 1583              	.LBB712:
 187:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 1584              		.loc 1 187 0
 1585 0020 0425     		movs	r5, #4
 1586              	.LBE712:
 184:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 1587              		.loc 1 184 0
 1588 0022 0026     		movs	r6, #0
 1589              	.LVL166:
 186:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 4; i < width; ++i) {
 1590              		.loc 1 186 0
 1591 0024 8346     		mov	fp, r0
 1592              	.LVL167:
 1593              	.L87:
 1594              	.LBB715:
 187:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 1595              		.loc 1 187 0 discriminator 1
 1596 0026 029B     		ldr	r3, [sp, #8]
 1597 0028 9D42     		cmp	r5, r3
 1598 002a 20D2     		bcs	.L89
 1599              	.LVL168:
 1600              	.LBB713:
 189:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line4[i], th_factor_q16, additive_noise_var);
 1601              		.loc 1 189 0
 1602 002c 34F902CF 		ldrsh	ip, [r4, #2]!
 1603              	.LVL169:
 1604 0030 4246     		mov	r2, r8
 1605 0032 6046     		mov	r0, ip
 1606 0034 34F9081C 		ldrsh	r1, [r4, #-8]
 1607 0038 4B46     		mov	r3, r9
 1608 003a DFF840A0 		ldr	r10, .L90+4
 1609 003e CDF80CC0 		str	ip, [sp, #12]
 1610 0042 D047     		blx	r10
 1611              	.LVL170:
 1612 0044 0023     		movs	r3, #0
 190:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1613              		.loc 1 190 0
 1614 0046 3BF91510 		ldrsh	r1, [fp, r5, lsl #1]
 1615 004a DDF80CC0 		ldr	ip, [sp, #12]
 1616              	.LBE713:
 187:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 1617              		.loc 1 187 0
 1618 004e 0135     		adds	r5, r5, #1
 1619              	.LVL171:
 1620              	.LBB714:
 189:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line4[i], th_factor_q16, additive_noise_var);
 1621              		.loc 1 189 0
 1622 0050 0246     		mov	r2, r0
 190:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1623              		.loc 1 190 0
 1624 0052 6046     		mov	r0, ip
 189:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line4[i], th_factor_q16, additive_noise_var);
 1625              		.loc 1 189 0
 1626 0054 CDE90023 		strd	r2, [sp]
 1627              	.LVL172:
 190:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1628              		.loc 1 190 0
 1629 0058 4246     		mov	r2, r8
 1630              	.LVL173:
 1631 005a 4B46     		mov	r3, r9
 1632 005c D047     		blx	r10
 1633              	.LVL174:
 1634 005e DDE90023 		ldrd	r2, [sp]
 1635 0062 1218     		adds	r2, r2, r0
 1636 0064 43F10003 		adc	r3, r3, #0
 1637 0068 B618     		adds	r6, r6, r2
 1638              	.LVL175:
 1639 006a 5F41     		adcs	r7, r7, r3
 1640              	.LVL176:
 1641 006c DBE7     		b	.L87
 1642              	.LVL177:
 1643              	.L89:
 1644              	.LBE714:
 1645              	.LBE715:
 1646              	.LBE717:
 193:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 1647              		.loc 1 193 0
 1648 006e 3046     		mov	r0, r6
 1649 0070 3946     		mov	r1, r7
 1650 0072 05B0     		add	sp, sp, #20
 1651              	.LCFI26:
 1652              		.cfi_def_cfa_offset 36
 1653              		@ sp needed
 1654 0074 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1655              	.LVL178:
 1656              	.L91:
 1657              		.align	2
 1658              	.L90:
 1659 0078 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 1660 007c 00000000 		.word	_ZN12_GLOBAL__N_114square_diff_thEllls
 1661              		.cfi_endproc
 1662              	.LFE1004:
 1664              		.section	.text._ZN12_GLOBAL__N_141get_rb_line_metric_decimated4_gradient_thERK21circular_cache_buf
 1665              		.align	1
 1666              		.thumb
 1667              		.thumb_func
 1669              	_ZN12_GLOBAL__N_141get_rb_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5arrayIsLj
 1670              	.LFB1008:
 208:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_decimated4_gradient_th_factor(color_cache, width, gradient_thresh
 1671              		.loc 1 208 0
 1672              		.cfi_startproc
 1673              		@ args = 0, pretend = 0, frame = 0
 1674              		@ frame_needed = 0, uses_anonymous_args = 0
 1675              	.LVL179:
 1676 0000 10B5     		push	{r4, lr}
 1677              	.LCFI27:
 1678              		.cfi_def_cfa_offset 8
 1679              		.cfi_offset 4, -8
 1680              		.cfi_offset 14, -4
 209:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 1681              		.loc 1 209 0
 1682 0002 4CF6CC42 		movw	r2, #52428
 1683 0006 0C23     		movs	r3, #12
 1684 0008 014C     		ldr	r4, .L93
 1685 000a A047     		blx	r4
 1686              	.LVL180:
 210:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 1687              		.loc 1 210 0
 1688 000c 10BD     		pop	{r4, pc}
 1689              	.L94:
 1690 000e 00BF     		.align	2
 1691              	.L93:
 1692 0010 00000000 		.word	_ZN12_GLOBAL__N_148get_rb_line_metric_decimated4_gradient_th_factorERK21circular_cache_buffe
 1693              		.cfi_endproc
 1694              	.LFE1008:
 1696              		.section	.text._ZN12_GLOBAL__N_144get_green_line_metric_decimated4_gradient_thERK21circular_cache_
 1697              		.align	1
 1698              		.thumb
 1699              		.thumb_func
 1701              	_ZN12_GLOBAL__N_144get_green_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5arrayI
 1702              	.LFB1009:
 212:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_decimated4_gradient_th_factor(green_cache, width, prev_line_of
 1703              		.loc 1 212 0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 0
 1706              		@ frame_needed = 0, uses_anonymous_args = 0
 1707              	.LVL181:
 1708 0000 10B5     		push	{r4, lr}
 1709              	.LCFI28:
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 4, -8
 1712              		.cfi_offset 14, -4
 1713              	.LBB718:
 1714              	.LBB719:
 197:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 1715              		.loc 1 197 0
 1716 0002 4CF6CC42 		movw	r2, #52428
 1717              	.LVL182:
 1718 0006 0C23     		movs	r3, #12
 1719 0008 014C     		ldr	r4, .L96
 1720 000a A047     		blx	r4
 1721              	.LVL183:
 1722              	.LBE719:
 1723              	.LBE718:
 214:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 1724              		.loc 1 214 0
 1725 000c 10BD     		pop	{r4, pc}
 1726              	.L97:
 1727 000e 00BF     		.align	2
 1728              	.L96:
 1729 0010 00000000 		.word	_ZN12_GLOBAL__N_148get_rb_line_metric_decimated4_gradient_th_factorERK21circular_cache_buffe
 1730              		.cfi_endproc
 1731              	.LFE1009:
 1733              		.section	.text._ZN12_GLOBAL__N_141get_green_line_metric_decimated4_gradientERK21circular_cache_buf
 1734              		.align	1
 1735              		.thumb
 1736              		.thumb_func
 1738              	_ZN12_GLOBAL__N_141get_green_line_metric_decimated4_gradientERK21circular_cache_bufferISt5arrayIsLj
 1739              	.LFB1007:
 204:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_decimated4_gradient_th_factor(green_cache, width, prev_line_of
 1740              		.loc 1 204 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744              	.LVL184:
 1745              	.LBB720:
 1746              	.LBB721:
 197:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 1747              		.loc 1 197 0
 1748 0000 0022     		movs	r2, #0
 1749              	.LVL185:
 1750              	.LBE721:
 1751              	.LBE720:
 204:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_decimated4_gradient_th_factor(green_cache, width, prev_line_of
 1752              		.loc 1 204 0
 1753 0002 10B5     		push	{r4, lr}
 1754              	.LCFI29:
 1755              		.cfi_def_cfa_offset 8
 1756              		.cfi_offset 4, -8
 1757              		.cfi_offset 14, -4
 1758              	.LBB723:
 1759              	.LBB722:
 197:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 1760              		.loc 1 197 0
 1761 0004 1346     		mov	r3, r2
 1762 0006 014C     		ldr	r4, .L99
 1763 0008 A047     		blx	r4
 1764              	.LVL186:
 1765              	.LBE722:
 1766              	.LBE723:
 206:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 1767              		.loc 1 206 0
 1768 000a 10BD     		pop	{r4, pc}
 1769              	.L100:
 1770              		.align	2
 1771              	.L99:
 1772 000c 00000000 		.word	_ZN12_GLOBAL__N_148get_rb_line_metric_decimated4_gradient_th_factorERK21circular_cache_buffe
 1773              		.cfi_endproc
 1774              	.LFE1007:
 1776              		.section	.text._ZN12_GLOBAL__N_138get_rb_line_metric_decimated4_gradientERK21circular_cache_buffer
 1777              		.align	1
 1778              		.thumb
 1779              		.thumb_func
 1781              	_ZN12_GLOBAL__N_138get_rb_line_metric_decimated4_gradientERK21circular_cache_bufferISt5arrayIsLj180
 1782              	.LFB1006:
 200:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_decimated4_gradient_th_factor(color_cache, width, 0, 0);
 1783              		.loc 1 200 0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 0
 1786              		@ frame_needed = 0, uses_anonymous_args = 0
 1787              	.LVL187:
 201:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 1788              		.loc 1 201 0
 1789 0000 0022     		movs	r2, #0
 200:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_decimated4_gradient_th_factor(color_cache, width, 0, 0);
 1790              		.loc 1 200 0
 1791 0002 10B5     		push	{r4, lr}
 1792              	.LCFI30:
 1793              		.cfi_def_cfa_offset 8
 1794              		.cfi_offset 4, -8
 1795              		.cfi_offset 14, -4
 201:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 1796              		.loc 1 201 0
 1797 0004 1346     		mov	r3, r2
 1798 0006 014C     		ldr	r4, .L102
 1799 0008 A047     		blx	r4
 1800              	.LVL188:
 202:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 1801              		.loc 1 202 0
 1802 000a 10BD     		pop	{r4, pc}
 1803              	.L103:
 1804              		.align	2
 1805              	.L102:
 1806 000c 00000000 		.word	_ZN12_GLOBAL__N_148get_rb_line_metric_decimated4_gradient_th_factorERK21circular_cache_buffe
 1807              		.cfi_endproc
 1808              	.LFE1006:
 1810              		.section	.text._ZN12_GLOBAL__N_137get_rb_line_metric_gradient_th_factorERK21circular_cache_bufferI
 1811              		.align	1
 1812              		.thumb
 1813              		.thumb_func
 1815              	_ZN12_GLOBAL__N_137get_rb_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180E
 1816              	.LFB990:
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 1817              		.loc 1 43 0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 16
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 1821              	.LVL189:
 1822 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1823              	.LCFI31:
 1824              		.cfi_def_cfa_offset 36
 1825              		.cfi_offset 4, -36
 1826              		.cfi_offset 5, -32
 1827              		.cfi_offset 6, -28
 1828              		.cfi_offset 7, -24
 1829              		.cfi_offset 8, -20
 1830              		.cfi_offset 9, -16
 1831              		.cfi_offset 10, -12
 1832              		.cfi_offset 11, -8
 1833              		.cfi_offset 14, -4
 1834 0004 85B0     		sub	sp, sp, #20
 1835              	.LCFI32:
 1836              		.cfi_def_cfa_offset 56
 1837              	.LBB724:
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = color_cache.ref(1);
 1838              		.loc 1 45 0
 1839 0006 1C4D     		ldr	r5, .L108
 1840              	.LBE724:
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 1841              		.loc 1 43 0
 1842 0008 0646     		mov	r6, r0
 1843 000a 0291     		str	r1, [sp, #8]
 1844              	.LBB729:
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = color_cache.ref(1);
 1845              		.loc 1 45 0
 1846 000c 0021     		movs	r1, #0
 1847              	.LVL190:
 1848              	.LBE729:
  43:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 1849              		.loc 1 43 0
 1850 000e 9046     		mov	r8, r2
 1851 0010 9946     		mov	r9, r3
 1852              	.LBB730:
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = color_cache.ref(1);
 1853              		.loc 1 45 0
 1854 0012 A847     		blx	r5
 1855              	.LVL191:
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 1; i < width; ++i) {
 1856              		.loc 1 46 0
 1857 0014 0121     		movs	r1, #1
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 1858              		.loc 1 44 0
 1859 0016 0027     		movs	r7, #0
  45:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = color_cache.ref(1);
 1860              		.loc 1 45 0
 1861 0018 0446     		mov	r4, r0
 1862              	.LVL192:
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 1; i < width; ++i) {
 1863              		.loc 1 46 0
 1864 001a 3046     		mov	r0, r6
 1865              	.LVL193:
 1866 001c A847     		blx	r5
 1867              	.LVL194:
  44:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 1868              		.loc 1 44 0
 1869 001e 0026     		movs	r6, #0
 1870              	.LVL195:
 1871              	.LBB725:
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 1872              		.loc 1 47 0
 1873 0020 0125     		movs	r5, #1
 1874              	.LBE725:
  46:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 1; i < width; ++i) {
 1875              		.loc 1 46 0
 1876 0022 8346     		mov	fp, r0
 1877              	.LVL196:
 1878              	.L105:
 1879              	.LBB728:
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 1880              		.loc 1 47 0 discriminator 1
 1881 0024 029B     		ldr	r3, [sp, #8]
 1882 0026 9D42     		cmp	r5, r3
 1883 0028 20D2     		bcs	.L107
 1884              	.LVL197:
 1885              	.LBB726:
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line[i], th_factor_q16, additive_noise_var);
 1886              		.loc 1 49 0
 1887 002a 34F902CF 		ldrsh	ip, [r4, #2]!
 1888              	.LVL198:
 1889 002e 4246     		mov	r2, r8
 1890 0030 6046     		mov	r0, ip
 1891 0032 34F9021C 		ldrsh	r1, [r4, #-2]
 1892 0036 4B46     		mov	r3, r9
 1893 0038 DFF840A0 		ldr	r10, .L108+4
 1894 003c CDF80CC0 		str	ip, [sp, #12]
 1895 0040 D047     		blx	r10
 1896              	.LVL199:
 1897 0042 0023     		movs	r3, #0
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1898              		.loc 1 50 0
 1899 0044 3BF91510 		ldrsh	r1, [fp, r5, lsl #1]
 1900 0048 DDF80CC0 		ldr	ip, [sp, #12]
 1901              	.LBE726:
  47:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 1902              		.loc 1 47 0
 1903 004c 0135     		adds	r5, r5, #1
 1904              	.LVL200:
 1905              	.LBB727:
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line[i], th_factor_q16, additive_noise_var);
 1906              		.loc 1 49 0
 1907 004e 0246     		mov	r2, r0
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1908              		.loc 1 50 0
 1909 0050 6046     		mov	r0, ip
  49:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line[i], th_factor_q16, additive_noise_var);
 1910              		.loc 1 49 0
 1911 0052 CDE90023 		strd	r2, [sp]
 1912              	.LVL201:
  50:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 1913              		.loc 1 50 0
 1914 0056 4246     		mov	r2, r8
 1915              	.LVL202:
 1916 0058 4B46     		mov	r3, r9
 1917 005a D047     		blx	r10
 1918              	.LVL203:
 1919 005c DDE90023 		ldrd	r2, [sp]
 1920 0060 1218     		adds	r2, r2, r0
 1921 0062 43F10003 		adc	r3, r3, #0
 1922 0066 B618     		adds	r6, r6, r2
 1923              	.LVL204:
 1924 0068 5F41     		adcs	r7, r7, r3
 1925              	.LVL205:
 1926 006a DBE7     		b	.L105
 1927              	.LVL206:
 1928              	.L107:
 1929              	.LBE727:
 1930              	.LBE728:
 1931              	.LBE730:
  53:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 1932              		.loc 1 53 0
 1933 006c 3046     		mov	r0, r6
 1934 006e 3946     		mov	r1, r7
 1935 0070 05B0     		add	sp, sp, #20
 1936              	.LCFI33:
 1937              		.cfi_def_cfa_offset 36
 1938              		@ sp needed
 1939 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1940              	.LVL207:
 1941              	.L109:
 1942 0076 00BF     		.align	2
 1943              	.L108:
 1944 0078 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 1945 007c 00000000 		.word	_ZN12_GLOBAL__N_114square_diff_thEllls
 1946              		.cfi_endproc
 1947              	.LFE990:
 1949              		.section	.text._ZN12_GLOBAL__N_130get_rb_line_metric_gradient_thERK21circular_cache_bufferISt5arra
 1950              		.align	1
 1951              		.thumb
 1952              		.thumb_func
 1954              	_ZN12_GLOBAL__N_130get_rb_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
 1955              	.LFB996:
  85:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_gradient_th_factor(color_cache, width,
 1956              		.loc 1 85 0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960              	.LVL208:
 1961 0000 10B5     		push	{r4, lr}
 1962              	.LCFI34:
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 4, -8
 1965              		.cfi_offset 14, -4
  87:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 1966              		.loc 1 87 0
 1967 0002 4CF6CC42 		movw	r2, #52428
 1968 0006 0C23     		movs	r3, #12
 1969 0008 014C     		ldr	r4, .L111
 1970 000a A047     		blx	r4
 1971              	.LVL209:
  88:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 1972              		.loc 1 88 0
 1973 000c 10BD     		pop	{r4, pc}
 1974              	.L112:
 1975 000e 00BF     		.align	2
 1976              	.L111:
 1977 0010 00000000 		.word	_ZN12_GLOBAL__N_137get_rb_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayI
 1978              		.cfi_endproc
 1979              	.LFE996:
 1981              		.section	.text._ZN12_GLOBAL__N_127get_rb_line_metric_gradientERK21circular_cache_bufferISt5arrayIs
 1982              		.align	1
 1983              		.thumb
 1984              		.thumb_func
 1986              	_ZN12_GLOBAL__N_127get_rb_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:
 1987              	.LFB994:
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_gradient_th_factor(color_cache, width, 0, 0);
 1988              		.loc 1 74 0
 1989              		.cfi_startproc
 1990              		@ args = 0, pretend = 0, frame = 0
 1991              		@ frame_needed = 0, uses_anonymous_args = 0
 1992              	.LVL210:
  75:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 1993              		.loc 1 75 0
 1994 0000 0022     		movs	r2, #0
  74:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_gradient_th_factor(color_cache, width, 0, 0);
 1995              		.loc 1 74 0
 1996 0002 10B5     		push	{r4, lr}
 1997              	.LCFI35:
 1998              		.cfi_def_cfa_offset 8
 1999              		.cfi_offset 4, -8
 2000              		.cfi_offset 14, -4
  75:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 2001              		.loc 1 75 0
 2002 0004 1346     		mov	r3, r2
 2003 0006 014C     		ldr	r4, .L114
 2004 0008 A047     		blx	r4
 2005              	.LVL211:
  76:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2006              		.loc 1 76 0
 2007 000a 10BD     		pop	{r4, pc}
 2008              	.L115:
 2009              		.align	2
 2010              	.L114:
 2011 000c 00000000 		.word	_ZN12_GLOBAL__N_137get_rb_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayI
 2012              		.cfi_endproc
 2013              	.LFE994:
 2015              		.section	.text._ZN12_GLOBAL__N_140get_green_line_metric_gradient_th_factorERK21circular_cache_buff
 2016              		.align	1
 2017              		.thumb
 2018              		.thumb_func
 2020              	_ZN12_GLOBAL__N_140get_green_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj1
 2021              	.LFB993:
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2022              		.loc 1 56 0
 2023              		.cfi_startproc
 2024              		@ args = 4, pretend = 0, frame = 24
 2025              		@ frame_needed = 0, uses_anonymous_args = 0
 2026              	.LVL212:
 2027 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2028              	.LCFI36:
 2029              		.cfi_def_cfa_offset 36
 2030              		.cfi_offset 4, -36
 2031              		.cfi_offset 5, -32
 2032              		.cfi_offset 6, -28
 2033              		.cfi_offset 7, -24
 2034              		.cfi_offset 8, -20
 2035              		.cfi_offset 9, -16
 2036              		.cfi_offset 10, -12
 2037              		.cfi_offset 11, -8
 2038              		.cfi_offset 14, -4
 2039              	.LBB731:
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = green_cache.ref(1);
 2040              		.loc 1 58 0
 2041 0004 214C     		ldr	r4, .L122
 2042              	.LBE731:
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2043              		.loc 1 56 0
 2044 0006 87B0     		sub	sp, sp, #28
 2045              	.LCFI37:
 2046              		.cfi_def_cfa_offset 64
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2047              		.loc 1 56 0
 2048 0008 0D46     		mov	r5, r1
 2049              	.LVL213:
 2050              	.LBB735:
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = green_cache.ref(1);
 2051              		.loc 1 58 0
 2052 000a 0021     		movs	r1, #0
 2053              	.LVL214:
 2054              	.LBE735:
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2055              		.loc 1 56 0
 2056 000c 1646     		mov	r6, r2
 2057 000e 0746     		mov	r7, r0
 2058 0010 9946     		mov	r9, r3
 2059              	.LBB736:
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = green_cache.ref(1);
 2060              		.loc 1 58 0
 2061 0012 A047     		blx	r4
 2062              	.LVL215:
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin{0};
 2063              		.loc 1 59 0
 2064 0014 0121     		movs	r1, #1
 2065              	.LBE736:
  56:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2066              		.loc 1 56 0
 2067 0016 BDF940A0 		ldrsh	r10, [sp, #64]
 2068              	.LBB737:
  58:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = green_cache.ref(1);
 2069              		.loc 1 58 0
 2070 001a 0190     		str	r0, [sp, #4]
 2071              	.LVL216:
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin{0};
 2072              		.loc 1 59 0
 2073 001c 3846     		mov	r0, r7
 2074              	.LVL217:
 2075 001e A047     		blx	r4
 2076              	.LVL218:
  62:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_end -= prev_line_offset;
 2077              		.loc 1 62 0
 2078 0020 002E     		cmp	r6, #0
  63:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         else
 2079              		.loc 1 63 0
 2080 0022 CABF     		itet	gt
 2081 0024 AD1B     		subgt	r5, r5, r6
  65:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = i_begin; i < i_end; ++i) {
 2082              		.loc 1 65 0
 2083 0026 7442     		rsble	r4, r6, #0
  60:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_end{width};
 2084              		.loc 1 60 0
 2085 0028 0024     		movgt	r4, #0
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref();
 2086              		.loc 1 57 0
 2087 002a 0027     		movs	r7, #0
 2088              	.LVL219:
 2089 002c 00EB4603 		add	r3, r0, r6, lsl #1
  59:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin{0};
 2090              		.loc 1 59 0
 2091 0030 8046     		mov	r8, r0
 2092              	.LVL220:
  57:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref();
 2093              		.loc 1 57 0
 2094 0032 0026     		movs	r6, #0
 2095 0034 0493     		str	r3, [sp, #16]
 2096              	.LVL221:
 2097              	.L119:
 2098              	.LBB732:
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2099              		.loc 1 66 0 discriminator 1
 2100 0036 AC42     		cmp	r4, r5
 2101 0038 22D2     		bcs	.L121
 2102              	.LVL222:
 2103              	.LBB733:
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line[i], th_factor_q16, additive_noise_var);
 2104              		.loc 1 68 0
 2105 003a 019B     		ldr	r3, [sp, #4]
 2106 003c 4A46     		mov	r2, r9
 2107 003e 33F914C0 		ldrsh	ip, [r3, r4, lsl #1]
 2108              	.LVL223:
 2109 0042 DFF84CB0 		ldr	fp, .L122+4
 2110 0046 6046     		mov	r0, ip
 2111 0048 049B     		ldr	r3, [sp, #16]
 2112 004a 33F91410 		ldrsh	r1, [r3, r4, lsl #1]
 2113 004e 5346     		mov	r3, r10
 2114 0050 CDF814C0 		str	ip, [sp, #20]
 2115 0054 D847     		blx	fp
 2116              	.LVL224:
 2117 0056 0023     		movs	r3, #0
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 2118              		.loc 1 69 0
 2119 0058 38F91410 		ldrsh	r1, [r8, r4, lsl #1]
 2120 005c DDF814C0 		ldr	ip, [sp, #20]
 2121              	.LBE733:
  66:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2122              		.loc 1 66 0
 2123 0060 0134     		adds	r4, r4, #1
 2124              	.LVL225:
 2125              	.LBB734:
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line[i], th_factor_q16, additive_noise_var);
 2126              		.loc 1 68 0
 2127 0062 0246     		mov	r2, r0
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 2128              		.loc 1 69 0
 2129 0064 6046     		mov	r0, ip
  68:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += square_diff_th(v, prev_line[i], th_factor_q16, additive_noise_var);
 2130              		.loc 1 68 0
 2131 0066 CDE90223 		strd	r2, [sp, #8]
 2132              	.LVL226:
  69:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 2133              		.loc 1 69 0
 2134 006a 4A46     		mov	r2, r9
 2135              	.LVL227:
 2136 006c 5346     		mov	r3, r10
 2137 006e D847     		blx	fp
 2138              	.LVL228:
 2139 0070 DDE90223 		ldrd	r2, [sp, #8]
 2140 0074 1218     		adds	r2, r2, r0
 2141 0076 43F10003 		adc	r3, r3, #0
 2142 007a B618     		adds	r6, r6, r2
 2143              	.LVL229:
 2144 007c 5F41     		adcs	r7, r7, r3
 2145              	.LVL230:
 2146 007e DAE7     		b	.L119
 2147              	.LVL231:
 2148              	.L121:
 2149              	.LBE734:
 2150              	.LBE732:
 2151              	.LBE737:
  72:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2152              		.loc 1 72 0
 2153 0080 3046     		mov	r0, r6
 2154 0082 3946     		mov	r1, r7
 2155 0084 07B0     		add	sp, sp, #28
 2156              	.LCFI38:
 2157              		.cfi_def_cfa_offset 36
 2158              		@ sp needed
 2159 0086 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2160              	.LVL232:
 2161              	.L123:
 2162 008a 00BF     		.align	2
 2163              	.L122:
 2164 008c 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 2165 0090 00000000 		.word	_ZN12_GLOBAL__N_114square_diff_thEllls
 2166              		.cfi_endproc
 2167              	.LFE993:
 2169              		.section	.text._ZN12_GLOBAL__N_133get_green_line_metric_gradient_thERK21circular_cache_bufferISt5a
 2170              		.align	1
 2171              		.thumb
 2172              		.thumb_func
 2174              	_ZN12_GLOBAL__N_133get_green_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5
 2175              	.LFB997:
  90:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_gradient_th_factor(green_cache, width, prev_line_offset,
 2176              		.loc 1 90 0
 2177              		.cfi_startproc
 2178              		@ args = 0, pretend = 0, frame = 0
 2179              		@ frame_needed = 0, uses_anonymous_args = 0
 2180              	.LVL233:
  92:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 2181              		.loc 1 92 0
 2182 0000 0C23     		movs	r3, #12
  90:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_gradient_th_factor(green_cache, width, prev_line_offset,
 2183              		.loc 1 90 0
 2184 0002 13B5     		push	{r0, r1, r4, lr}
 2185              	.LCFI39:
 2186              		.cfi_def_cfa_offset 16
 2187              		.cfi_offset 4, -8
 2188              		.cfi_offset 14, -4
  92:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 2189              		.loc 1 92 0
 2190 0004 034C     		ldr	r4, .L125
 2191 0006 0093     		str	r3, [sp]
 2192 0008 4CF6CC43 		movw	r3, #52428
 2193 000c A047     		blx	r4
 2194              	.LVL234:
  93:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2195              		.loc 1 93 0
 2196 000e 02B0     		add	sp, sp, #8
 2197              	.LCFI40:
 2198              		.cfi_def_cfa_offset 8
 2199              		@ sp needed
 2200 0010 10BD     		pop	{r4, pc}
 2201              	.L126:
 2202 0012 00BF     		.align	2
 2203              	.L125:
 2204 0014 00000000 		.word	_ZN12_GLOBAL__N_140get_green_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arr
 2205              		.cfi_endproc
 2206              	.LFE997:
 2208              		.section	.text._ZN12_GLOBAL__N_130get_green_line_metric_gradientERK21circular_cache_bufferISt5arra
 2209              		.align	1
 2210              		.thumb
 2211              		.thumb_func
 2213              	_ZN12_GLOBAL__N_130get_green_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
 2214              	.LFB995:
  78:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_gradient_th_factor(green_cache, width, prev_line_offset, 0, 0)
 2215              		.loc 1 78 0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 0
 2218              		@ frame_needed = 0, uses_anonymous_args = 0
 2219              	.LVL235:
  79:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 2220              		.loc 1 79 0
 2221 0000 0023     		movs	r3, #0
  78:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_green_line_metric_gradient_th_factor(green_cache, width, prev_line_offset, 0, 0)
 2222              		.loc 1 78 0
 2223 0002 13B5     		push	{r0, r1, r4, lr}
 2224              	.LCFI41:
 2225              		.cfi_def_cfa_offset 16
 2226              		.cfi_offset 4, -8
 2227              		.cfi_offset 14, -4
  79:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 2228              		.loc 1 79 0
 2229 0004 024C     		ldr	r4, .L128
 2230 0006 0093     		str	r3, [sp]
 2231 0008 A047     		blx	r4
 2232              	.LVL236:
  80:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2233              		.loc 1 80 0
 2234 000a 02B0     		add	sp, sp, #8
 2235              	.LCFI42:
 2236              		.cfi_def_cfa_offset 8
 2237              		@ sp needed
 2238 000c 10BD     		pop	{r4, pc}
 2239              	.L129:
 2240 000e 00BF     		.align	2
 2241              	.L128:
 2242 0010 00000000 		.word	_ZN12_GLOBAL__N_140get_green_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arr
 2243              		.cfi_endproc
 2244              	.LFE995:
 2246              		.section	.text._ZN12_GLOBAL__N_125get_rb_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj
 2247              		.align	1
 2248              		.thumb
 2249              		.thumb_func
 2251              	_ZN12_GLOBAL__N_125get_rb_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:
 2252              	.LFB1012:
 229:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2253              		.loc 1 229 0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 0
 2256              		@ frame_needed = 0, uses_anonymous_args = 0
 2257              	.LVL237:
 2258 0000 38B5     		push	{r3, r4, r5, lr}
 2259              	.LCFI43:
 2260              		.cfi_def_cfa_offset 16
 2261              		.cfi_offset 3, -16
 2262              		.cfi_offset 4, -12
 2263              		.cfi_offset 5, -8
 2264              		.cfi_offset 14, -4
 2265              	.LBB738:
 231:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 0; i < width; ++i) {
 2266              		.loc 1 231 0
 2267 0002 084B     		ldr	r3, .L134
 2268              	.LBE738:
 229:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2269              		.loc 1 229 0
 2270 0004 0C46     		mov	r4, r1
 2271              	.LBB743:
 231:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 0; i < width; ++i) {
 2272              		.loc 1 231 0
 2273 0006 0021     		movs	r1, #0
 2274              	.LVL238:
 2275 0008 9847     		blx	r3
 2276              	.LVL239:
 2277              	.LBB739:
 232:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2278              		.loc 1 232 0
 2279 000a 0023     		movs	r3, #0
 2280              	.LBE739:
 230:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 2281              		.loc 1 230 0
 2282 000c 0021     		movs	r1, #0
 231:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 0; i < width; ++i) {
 2283              		.loc 1 231 0
 2284 000e 0546     		mov	r5, r0
 2285              	.LVL240:
 230:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 2286              		.loc 1 230 0
 2287 0010 0020     		movs	r0, #0
 2288              	.LVL241:
 2289              	.L131:
 2290              	.LBB742:
 232:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2291              		.loc 1 232 0 discriminator 1
 2292 0012 A342     		cmp	r3, r4
 2293 0014 05D2     		bcs	.L133
 2294              	.LVL242:
 2295              	.LBB740:
 233:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += v * v;
 2296              		.loc 1 233 0 discriminator 3
 2297 0016 35F81320 		ldrh	r2, [r5, r3, lsl #1]
 2298              	.LVL243:
 2299              	.LBE740:
 232:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2300              		.loc 1 232 0 discriminator 3
 2301 001a 0133     		adds	r3, r3, #1
 2302              	.LVL244:
 2303              	.LBB741:
 234:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 2304              		.loc 1 234 0 discriminator 3
 2305 001c C2FB8201 		smlalbb	r0, r1, r2, r2
 2306              	.LVL245:
 2307 0020 F7E7     		b	.L131
 2308              	.LVL246:
 2309              	.L133:
 2310              	.LBE741:
 2311              	.LBE742:
 2312              	.LBE743:
 237:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2313              		.loc 1 237 0
 2314 0022 38BD     		pop	{r3, r4, r5, pc}
 2315              	.LVL247:
 2316              	.L135:
 2317              		.align	2
 2318              	.L134:
 2319 0024 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 2320              		.cfi_endproc
 2321              	.LFE1012:
 2323              		.section	.text._ZN12_GLOBAL__N_128get_green_line_metric_energyERK21circular_cache_bufferISt5arrayI
 2324              		.align	1
 2325              		.thumb
 2326              		.thumb_func
 2328              	_ZN12_GLOBAL__N_128get_green_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:
 2329              	.LFB1013:
 239:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_energy(green_cache, width);
 2330              		.loc 1 239 0
 2331              		.cfi_startproc
 2332              		@ args = 0, pretend = 0, frame = 0
 2333              		@ frame_needed = 0, uses_anonymous_args = 0
 2334              	.LVL248:
 2335 0000 08B5     		push	{r3, lr}
 2336              	.LCFI44:
 2337              		.cfi_def_cfa_offset 8
 2338              		.cfi_offset 3, -8
 2339              		.cfi_offset 14, -4
 240:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 2340              		.loc 1 240 0
 2341 0002 014B     		ldr	r3, .L137
 2342 0004 9847     		blx	r3
 2343              	.LVL249:
 241:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2344              		.loc 1 241 0
 2345 0006 08BD     		pop	{r3, pc}
 2346              	.L138:
 2347              		.align	2
 2348              	.L137:
 2349 0008 00000000 		.word	_ZN12_GLOBAL__N_125get_rb_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5E
 2350              		.cfi_endproc
 2351              	.LFE1013:
 2353              		.section	.text._ZN12_GLOBAL__N_128get_rb_line_metric_intensityERK21circular_cache_bufferISt5arrayI
 2354              		.align	1
 2355              		.thumb
 2356              		.thumb_func
 2358              	_ZN12_GLOBAL__N_128get_rb_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:
 2359              	.LFB1010:
 216:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2360              		.loc 1 216 0
 2361              		.cfi_startproc
 2362              		@ args = 0, pretend = 0, frame = 0
 2363              		@ frame_needed = 0, uses_anonymous_args = 0
 2364              	.LVL250:
 2365 0000 D0B5     		push	{r4, r6, r7, lr}
 2366              	.LCFI45:
 2367              		.cfi_def_cfa_offset 16
 2368              		.cfi_offset 4, -16
 2369              		.cfi_offset 6, -12
 2370              		.cfi_offset 7, -8
 2371              		.cfi_offset 14, -4
 2372              	.LBB744:
 218:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 0; i < width; ++i) {
 2373              		.loc 1 218 0
 2374 0002 094B     		ldr	r3, .L143
 2375              	.LBE744:
 216:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2376              		.loc 1 216 0
 2377 0004 0C46     		mov	r4, r1
 2378              	.LBB747:
 218:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 0; i < width; ++i) {
 2379              		.loc 1 218 0
 2380 0006 0021     		movs	r1, #0
 2381              	.LVL251:
 2382 0008 9847     		blx	r3
 2383              	.LVL252:
 2384              	.LBB745:
 219:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += curr_line[i];
 2385              		.loc 1 219 0
 2386 000a 0023     		movs	r3, #0
 2387              	.LBE745:
 217:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 2388              		.loc 1 217 0
 2389 000c 0021     		movs	r1, #0
 218:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 0; i < width; ++i) {
 2390              		.loc 1 218 0
 2391 000e 0246     		mov	r2, r0
 2392              	.LVL253:
 217:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 2393              		.loc 1 217 0
 2394 0010 0020     		movs	r0, #0
 2395              	.LVL254:
 2396              	.L140:
 2397              	.LBB746:
 219:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += curr_line[i];
 2398              		.loc 1 219 0 discriminator 1
 2399 0012 A342     		cmp	r3, r4
 2400 0014 06D2     		bcs	.L142
 2401              	.LVL255:
 220:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 2402              		.loc 1 220 0 discriminator 3
 2403 0016 32F91360 		ldrsh	r6, [r2, r3, lsl #1]
 2404 001a F717     		asrs	r7, r6, #31
 2405 001c 8019     		adds	r0, r0, r6
 2406              	.LVL256:
 2407 001e 7941     		adcs	r1, r1, r7
 2408              	.LVL257:
 219:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += curr_line[i];
 2409              		.loc 1 219 0 discriminator 3
 2410 0020 0133     		adds	r3, r3, #1
 2411              	.LVL258:
 2412 0022 F6E7     		b	.L140
 2413              	.LVL259:
 2414              	.L142:
 2415              	.LBE746:
 2416              	.LBE747:
 223:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2417              		.loc 1 223 0
 2418 0024 D0BD     		pop	{r4, r6, r7, pc}
 2419              	.L144:
 2420 0026 00BF     		.align	2
 2421              	.L143:
 2422 0028 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 2423              		.cfi_endproc
 2424              	.LFE1010:
 2426              		.section	.text._ZN12_GLOBAL__N_131get_green_line_metric_intensityERK21circular_cache_bufferISt5arr
 2427              		.align	1
 2428              		.thumb
 2429              		.thumb_func
 2431              	_ZN12_GLOBAL__N_131get_green_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EELj5EE
 2432              	.LFB1011:
 225:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_intensity(green_cache, width);
 2433              		.loc 1 225 0
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 0
 2436              		@ frame_needed = 0, uses_anonymous_args = 0
 2437              	.LVL260:
 2438 0000 08B5     		push	{r3, lr}
 2439              	.LCFI46:
 2440              		.cfi_def_cfa_offset 8
 2441              		.cfi_offset 3, -8
 2442              		.cfi_offset 14, -4
 226:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 2443              		.loc 1 226 0
 2444 0002 014B     		ldr	r3, .L146
 2445 0004 9847     		blx	r3
 2446              	.LVL261:
 227:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2447              		.loc 1 227 0
 2448 0006 08BD     		pop	{r3, pc}
 2449              	.L147:
 2450              		.align	2
 2451              	.L146:
 2452 0008 00000000 		.word	_ZN12_GLOBAL__N_128get_rb_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EEL
 2453              		.cfi_endproc
 2454              	.LFE1011:
 2456              		.section	.text._ZN12_GLOBAL__N_138get_rb_line_metric_decimated2_gradientERK21circular_cache_buffer
 2457              		.align	1
 2458              		.thumb
 2459              		.thumb_func
 2461              	_ZN12_GLOBAL__N_138get_rb_line_metric_decimated2_gradientERK21circular_cache_bufferISt5arrayIsLj180
 2462              	.LFB1002:
 164:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2463              		.loc 1 164 0
 2464              		.cfi_startproc
 2465              		@ args = 0, pretend = 0, frame = 0
 2466              		@ frame_needed = 0, uses_anonymous_args = 0
 2467              	.LVL262:
 2468 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2469              	.LCFI47:
 2470              		.cfi_def_cfa_offset 32
 2471              		.cfi_offset 3, -32
 2472              		.cfi_offset 4, -28
 2473              		.cfi_offset 5, -24
 2474              		.cfi_offset 6, -20
 2475              		.cfi_offset 7, -16
 2476              		.cfi_offset 8, -12
 2477              		.cfi_offset 9, -8
 2478              		.cfi_offset 14, -4
 2479              	.LBB748:
 166:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = color_cache.ref(2);
 2480              		.loc 1 166 0
 2481 0004 144C     		ldr	r4, .L152
 2482              	.LBE748:
 164:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2483              		.loc 1 164 0
 2484 0006 0D46     		mov	r5, r1
 2485              	.LBB753:
 166:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = color_cache.ref(2);
 2486              		.loc 1 166 0
 2487 0008 0021     		movs	r1, #0
 2488              	.LVL263:
 2489              	.LBE753:
 164:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2490              		.loc 1 164 0
 2491 000a 0746     		mov	r7, r0
 2492              	.LBB754:
 166:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = color_cache.ref(2);
 2493              		.loc 1 166 0
 2494 000c A047     		blx	r4
 2495              	.LVL264:
 167:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 2; i < width; ++i) {
 2496              		.loc 1 167 0
 2497 000e 0221     		movs	r1, #2
 166:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = color_cache.ref(2);
 2498              		.loc 1 166 0
 2499 0010 0646     		mov	r6, r0
 2500              	.LVL265:
 167:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 2; i < width; ++i) {
 2501              		.loc 1 167 0
 2502 0012 3846     		mov	r0, r7
 2503              	.LVL266:
 2504 0014 A047     		blx	r4
 2505              	.LVL267:
 165:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 2506              		.loc 1 165 0
 2507 0016 0027     		movs	r7, #0
 2508              	.LVL268:
 2509 0018 B11C     		adds	r1, r6, #2
 2510              	.LBB749:
 168:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2511              		.loc 1 168 0
 2512 001a 0224     		movs	r4, #2
 2513              	.LBE749:
 165:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref();
 2514              		.loc 1 165 0
 2515 001c 0026     		movs	r6, #0
 2516              	.LVL269:
 2517              	.L149:
 2518              	.LBB752:
 168:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2519              		.loc 1 168 0 discriminator 1
 2520 001e AC42     		cmp	r4, r5
 2521 0020 16D2     		bcs	.L151
 2522              	.LVL270:
 2523              	.LBB750:
 170:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 2524              		.loc 1 170 0
 2525 0022 31F9023F 		ldrsh	r3, [r1, #2]!
 2526              	.LVL271:
 172:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 2527              		.loc 1 172 0
 2528 0026 30F914E0 		ldrsh	lr, [r0, r4, lsl #1]
 170:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 2529              		.loc 1 170 0
 2530 002a 31F9042C 		ldrsh	r2, [r1, #-4]
 2531 002e 9A1A     		subs	r2, r3, r2
 2532              	.LVL272:
 172:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 2533              		.loc 1 172 0
 2534 0030 CEEB0303 		rsb	r3, lr, r3
 171:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             d = v - prev_line2[i];
 2535              		.loc 1 171 0
 2536 0034 5243     		muls	r2, r2, r2
 2537              	.LVL273:
 173:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 2538              		.loc 1 173 0
 2539 0036 5B43     		muls	r3, r3, r3
 2540              	.LVL274:
 2541              	.LBE750:
 168:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2542              		.loc 1 168 0
 2543 0038 0134     		adds	r4, r4, #1
 2544              	.LVL275:
 2545 003a 13EB0208 		adds	r8, r3, r2
 2546              	.LBB751:
 173:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 2547              		.loc 1 173 0
 2548 003e 4FEAE379 		asr	r9, r3, #31
 2549 0042 49EBE279 		adc	r9, r9, r2, asr #31
 2550 0046 16EB0806 		adds	r6, r6, r8
 2551              	.LVL276:
 2552 004a 47EB0907 		adc	r7, r7, r9
 2553              	.LVL277:
 2554 004e E6E7     		b	.L149
 2555              	.LVL278:
 2556              	.L151:
 2557              	.LBE751:
 2558              	.LBE752:
 2559              	.LBE754:
 176:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2560              		.loc 1 176 0
 2561 0050 3046     		mov	r0, r6
 2562              	.LVL279:
 2563 0052 3946     		mov	r1, r7
 2564 0054 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2565              	.LVL280:
 2566              	.L153:
 2567              		.align	2
 2568              	.L152:
 2569 0058 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 2570              		.cfi_endproc
 2571              	.LFE1002:
 2573              		.section	.text._ZN12_GLOBAL__N_141get_green_line_metric_decimated2_gradientERK21circular_cache_buf
 2574              		.align	1
 2575              		.thumb
 2576              		.thumb_func
 2578              	_ZN12_GLOBAL__N_141get_green_line_metric_decimated2_gradientERK21circular_cache_bufferISt5arrayIsLj
 2579              	.LFB1003:
 178:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         return get_rb_line_metric_decimated2_gradient(green_cache, width);
 2580              		.loc 1 178 0
 2581              		.cfi_startproc
 2582              		@ args = 0, pretend = 0, frame = 0
 2583              		@ frame_needed = 0, uses_anonymous_args = 0
 2584              	.LVL281:
 2585 0000 08B5     		push	{r3, lr}
 2586              	.LCFI48:
 2587              		.cfi_def_cfa_offset 8
 2588              		.cfi_offset 3, -8
 2589              		.cfi_offset 14, -4
 179:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****     }
 2590              		.loc 1 179 0
 2591 0002 014B     		ldr	r3, .L155
 2592 0004 9847     		blx	r3
 2593              	.LVL282:
 180:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2594              		.loc 1 180 0
 2595 0006 08BD     		pop	{r3, pc}
 2596              	.L156:
 2597              		.align	2
 2598              	.L155:
 2599 0008 00000000 		.word	_ZN12_GLOBAL__N_138get_rb_line_metric_decimated2_gradientERK21circular_cache_bufferISt5array
 2600              		.cfi_endproc
 2601              	.LFE1003:
 2603              		.section	.text._ZN12_GLOBAL__N_129get_rb_line_metric_laplacian2ERK21circular_cache_bufferISt5array
 2604              		.align	1
 2605              		.thumb
 2606              		.thumb_func
 2608              	_ZN12_GLOBAL__N_129get_rb_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:
 2609              	.LFB1000:
 129:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2610              		.loc 1 129 0
 2611              		.cfi_startproc
 2612              		@ args = 0, pretend = 0, frame = 0
 2613              		@ frame_needed = 0, uses_anonymous_args = 0
 2614              	.LVL283:
 2615 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2616              	.LCFI49:
 2617              		.cfi_def_cfa_offset 32
 2618              		.cfi_offset 4, -32
 2619              		.cfi_offset 5, -28
 2620              		.cfi_offset 6, -24
 2621              		.cfi_offset 7, -20
 2622              		.cfi_offset 8, -16
 2623              		.cfi_offset 9, -12
 2624              		.cfi_offset 10, -8
 2625              		.cfi_offset 14, -4
 2626              	.LBB755:
 131:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line1 = color_cache.ref(1);
 2627              		.loc 1 131 0
 2628 0004 2A4C     		ldr	r4, .L161
 2629              	.LBE755:
 129:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2630              		.loc 1 129 0
 2631 0006 0F46     		mov	r7, r1
 2632              	.LBB759:
 131:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line1 = color_cache.ref(1);
 2633              		.loc 1 131 0
 2634 0008 0021     		movs	r1, #0
 2635              	.LVL284:
 2636              	.LBE759:
 129:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2637              		.loc 1 129 0
 2638 000a 0546     		mov	r5, r0
 2639              	.LBB760:
 131:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line1 = color_cache.ref(1);
 2640              		.loc 1 131 0
 2641 000c A047     		blx	r4
 2642              	.LVL285:
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref(2);
 2643              		.loc 1 132 0
 2644 000e 0121     		movs	r1, #1
 131:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line1 = color_cache.ref(1);
 2645              		.loc 1 131 0
 2646 0010 8046     		mov	r8, r0
 2647              	.LVL286:
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref(2);
 2648              		.loc 1 132 0
 2649 0012 2846     		mov	r0, r5
 2650              	.LVL287:
 2651 0014 A047     		blx	r4
 2652              	.LVL288:
 133:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = color_cache.ref(3);
 2653              		.loc 1 133 0
 2654 0016 0221     		movs	r1, #2
 132:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref(2);
 2655              		.loc 1 132 0
 2656 0018 0646     		mov	r6, r0
 2657              	.LVL289:
 133:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = color_cache.ref(3);
 2658              		.loc 1 133 0
 2659 001a 2846     		mov	r0, r5
 2660              	.LVL290:
 2661 001c A047     		blx	r4
 2662              	.LVL291:
 134:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = color_cache.ref(4);
 2663              		.loc 1 134 0
 2664 001e 0321     		movs	r1, #3
 133:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = color_cache.ref(3);
 2665              		.loc 1 133 0
 2666 0020 8246     		mov	r10, r0
 2667              	.LVL292:
 134:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = color_cache.ref(4);
 2668              		.loc 1 134 0
 2669 0022 2846     		mov	r0, r5
 2670              	.LVL293:
 2671 0024 A047     		blx	r4
 2672              	.LVL294:
 135:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 2; (i + 2) < width; ++i) {
 2673              		.loc 1 135 0
 2674 0026 0421     		movs	r1, #4
 134:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = color_cache.ref(4);
 2675              		.loc 1 134 0
 2676 0028 8146     		mov	r9, r0
 2677              	.LVL295:
 135:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 2; (i + 2) < width; ++i) {
 2678              		.loc 1 135 0
 2679 002a 2846     		mov	r0, r5
 2680              	.LVL296:
 2681 002c A047     		blx	r4
 2682              	.LVL297:
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line2 = color_cache.ref();
 2683              		.loc 1 130 0
 2684 002e 0025     		movs	r5, #0
 2685              	.LVL298:
 2686 0030 5146     		mov	r1, r10
 2687 0032 CE46     		mov	lr, r9
 2688              	.LBB756:
 136:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2689              		.loc 1 136 0
 2690 0034 4FF0020C 		mov	ip, #2
 2691              	.LBE756:
 130:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line2 = color_cache.ref();
 2692              		.loc 1 130 0
 2693 0038 0024     		movs	r4, #0
 2694              	.LVL299:
 2695              	.L158:
 2696 003a 0CF10203 		add	r3, ip, #2
 2697              	.LBB758:
 136:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2698              		.loc 1 136 0 discriminator 1
 2699 003e BB42     		cmp	r3, r7
 2700 0040 31D2     		bcs	.L160
 2701              	.LVL300:
 2702 0042 B1F80690 		ldrh	r9, [r1, #6]
 2703 0046 4B88     		ldrh	r3, [r1, #2]
 2704 0048 4B44     		add	r3, r3, r9
 2705 004a BEF80420 		ldrh	r2, [lr, #4]
 2706 004e 1344     		add	r3, r3, r2
 2707              	.LBB757:
 138:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t n2 = curr_line[i-2] + curr_line[i+2] + prev_line2[i] + next_line2[i]
 2708              		.loc 1 138 0
 2709 0050 B6F80490 		ldrh	r9, [r6, #4]
 2710 0054 38F81C20 		ldrh	r2, [r8, ip, lsl #1]
 2711 0058 9944     		add	r9, r9, r3
 2712              	.LVL301:
 2713 005a 30F81C30 		ldrh	r3, [r0, ip, lsl #1]
 2714 005e 1344     		add	r3, r3, r2
 2715 0060 0A88     		ldrh	r2, [r1]
 2716 0062 1344     		add	r3, r3, r2
 140:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = 16 * v - 2 * n1 - n2;
 2717              		.loc 1 140 0
 2718 0064 0A89     		ldrh	r2, [r1, #8]
 2719 0066 1344     		add	r3, r3, r2
 2720 0068 BEF80220 		ldrh	r2, [lr, #2]
 2721 006c 1344     		add	r3, r3, r2
 2722 006e BEF806A0 		ldrh	r10, [lr, #6]
 2723 0072 5344     		add	r3, r3, r10
 2724 0074 7288     		ldrh	r2, [r6, #2]
 2725 0076 1A44     		add	r2, r2, r3
 2726              	.LVL302:
 141:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 2727              		.loc 1 141 0
 2728 0078 0FFA89F3 		sxth	r3, r9
 2729 007c B1F904A0 		ldrsh	r10, [r1, #4]
 2730 0080 C3EBCA09 		rsb	r9, r3, r10, lsl #3
 2731              	.LVL303:
 140:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = 16 * v - 2 * n1 - n2;
 2732              		.loc 1 140 0
 2733 0084 F388     		ldrh	r3, [r6, #6]
 2734              	.LVL304:
 2735 0086 13FA82F3 		uxtah	r3, r3, r2
 2736 008a 0CF1010C 		add	ip, ip, #1
 2737              	.LVL305:
 141:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 2738              		.loc 1 141 0
 2739 008e 1BB2     		sxth	r3, r3
 2740 0090 C3EB4903 		rsb	r3, r3, r9, lsl #1
 2741              	.LVL306:
 2742 0094 0236     		adds	r6, r6, #2
 2743              	.LVL307:
 142:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 2744              		.loc 1 142 0
 2745 0096 5B43     		muls	r3, r3, r3
 2746              	.LVL308:
 2747 0098 0231     		adds	r1, r1, #2
 2748              	.LVL309:
 2749 009a E418     		adds	r4, r4, r3
 2750              	.LVL310:
 2751 009c 45EBE375 		adc	r5, r5, r3, asr #31
 2752              	.LVL311:
 2753 00a0 0EF1020E 		add	lr, lr, #2
 2754              	.LVL312:
 2755 00a4 C9E7     		b	.L158
 2756              	.LVL313:
 2757              	.L160:
 2758              	.LBE757:
 2759              	.LBE758:
 2760              	.LBE760:
 145:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2761              		.loc 1 145 0
 2762 00a6 2046     		mov	r0, r4
 2763              	.LVL314:
 2764 00a8 2946     		mov	r1, r5
 2765 00aa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2766              	.LVL315:
 2767              	.L162:
 2768 00ae 00BF     		.align	2
 2769              	.L161:
 2770 00b0 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 2771              		.cfi_endproc
 2772              	.LFE1000:
 2774              		.section	.text._ZN12_GLOBAL__N_132get_green_line_metric_laplacian2ERK21circular_cache_bufferISt5ar
 2775              		.align	1
 2776              		.thumb
 2777              		.thumb_func
 2779              	_ZN12_GLOBAL__N_132get_green_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EELj5E
 2780              	.LFB1001:
 147:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2781              		.loc 1 147 0
 2782              		.cfi_startproc
 2783              		@ args = 0, pretend = 0, frame = 8
 2784              		@ frame_needed = 0, uses_anonymous_args = 0
 2785              	.LVL316:
 2786 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2787              	.LCFI50:
 2788              		.cfi_def_cfa_offset 48
 2789              		.cfi_offset 4, -36
 2790              		.cfi_offset 5, -32
 2791              		.cfi_offset 6, -28
 2792              		.cfi_offset 7, -24
 2793              		.cfi_offset 8, -20
 2794              		.cfi_offset 9, -16
 2795              		.cfi_offset 10, -12
 2796              		.cfi_offset 11, -8
 2797              		.cfi_offset 14, -4
 2798              	.LBB761:
 149:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line1 = green_cache.ref(1);
 2799              		.loc 1 149 0
 2800 0004 274C     		ldr	r4, .L167
 2801              	.LBE761:
 147:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2802              		.loc 1 147 0
 2803 0006 8946     		mov	r9, r1
 2804              	.LVL317:
 2805              	.LBB765:
 149:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line1 = green_cache.ref(1);
 2806              		.loc 1 149 0
 2807 0008 0021     		movs	r1, #0
 2808              	.LVL318:
 2809              	.LBE765:
 147:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2810              		.loc 1 147 0
 2811 000a 1546     		mov	r5, r2
 2812 000c 0646     		mov	r6, r0
 2813              	.LBB766:
 149:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line1 = green_cache.ref(1);
 2814              		.loc 1 149 0
 2815 000e A047     		blx	r4
 2816              	.LVL319:
 150:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref(2);
 2817              		.loc 1 150 0
 2818 0010 0121     		movs	r1, #1
 148:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line2 = green_cache.ref();
 2819              		.loc 1 148 0
 2820 0012 4FF0000A 		mov	r10, #0
 149:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line1 = green_cache.ref(1);
 2821              		.loc 1 149 0
 2822 0016 0190     		str	r0, [sp, #4]
 2823              	.LVL320:
 150:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref(2);
 2824              		.loc 1 150 0
 2825 0018 3046     		mov	r0, r6
 2826              	.LVL321:
 2827 001a A047     		blx	r4
 2828              	.LVL322:
 151:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = green_cache.ref(3);
 2829              		.loc 1 151 0
 2830 001c 0221     		movs	r1, #2
 150:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref(2);
 2831              		.loc 1 150 0
 2832 001e 0746     		mov	r7, r0
 2833              	.LVL323:
 151:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = green_cache.ref(3);
 2834              		.loc 1 151 0
 2835 0020 3046     		mov	r0, r6
 2836              	.LVL324:
 2837 0022 A047     		blx	r4
 2838              	.LVL325:
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = green_cache.ref(4);
 2839              		.loc 1 152 0
 2840 0024 0321     		movs	r1, #3
 151:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line1 = green_cache.ref(3);
 2841              		.loc 1 151 0
 2842 0026 8346     		mov	fp, r0
 2843              	.LVL326:
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = green_cache.ref(4);
 2844              		.loc 1 152 0
 2845 0028 3046     		mov	r0, r6
 2846              	.LVL327:
 2847 002a A047     		blx	r4
 2848              	.LVL328:
 153:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 1; (i + 1) < width; ++i) {
 2849              		.loc 1 153 0
 2850 002c 0421     		movs	r1, #4
 152:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line2 = green_cache.ref(4);
 2851              		.loc 1 152 0
 2852 002e 8046     		mov	r8, r0
 2853              	.LVL329:
 153:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 1; (i + 1) < width; ++i) {
 2854              		.loc 1 153 0
 2855 0030 3046     		mov	r0, r6
 2856              	.LVL330:
 2857 0032 A047     		blx	r4
 2858              	.LVL331:
 2859 0034 6A00     		lsls	r2, r5, #1
 2860 0036 5946     		mov	r1, fp
 2861 0038 08EB020C 		add	ip, r8, r2
 2862              	.LBB762:
 154:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2863              		.loc 1 154 0
 2864 003c 0123     		movs	r3, #1
 2865 003e 3A44     		add	r2, r2, r7
 2866              	.LBE762:
 148:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line2 = green_cache.ref();
 2867              		.loc 1 148 0
 2868 0040 4FF0000B 		mov	fp, #0
 2869              	.LVL332:
 2870              	.L164:
 2871 0044 03F1010E 		add	lr, r3, #1
 2872              	.LBB764:
 154:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = curr_line[i];
 2873              		.loc 1 154 0 discriminator 1
 2874 0048 CE45     		cmp	lr, r9
 2875 004a 26D2     		bcs	.L166
 2876              	.LVL333:
 2877              	.LBB763:
 156:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t n2 = curr_line[i-1] + curr_line[i+1] + prev_line2[i] + next_line2[i];
 2878              		.loc 1 156 0
 2879 004c 37F91340 		ldrsh	r4, [r7, r3, lsl #1]
 2880 0050 38F91360 		ldrsh	r6, [r8, r3, lsl #1]
 2881 0054 2644     		add	r6, r6, r4
 2882 0056 3CF91340 		ldrsh	r4, [ip, r3, lsl #1]
 2883 005a 3444     		add	r4, r4, r6
 157:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = 12 * v - 2 * n1 - n2;
 2884              		.loc 1 157 0
 2885 005c B1F90050 		ldrsh	r5, [r1]
 156:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t n2 = curr_line[i-1] + curr_line[i+1] + prev_line2[i] + next_line2[i];
 2886              		.loc 1 156 0
 2887 0060 32F91360 		ldrsh	r6, [r2, r3, lsl #1]
 2888 0064 2644     		add	r6, r6, r4
 2889              	.LVL334:
 157:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = 12 * v - 2 * n1 - n2;
 2890              		.loc 1 157 0
 2891 0066 B1F90440 		ldrsh	r4, [r1, #4]
 2892 006a 2544     		add	r5, r5, r4
 2893 006c 30F91340 		ldrsh	r4, [r0, r3, lsl #1]
 2894 0070 2544     		add	r5, r5, r4
 2895              	.LVL335:
 158:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 2896              		.loc 1 158 0
 2897 0072 B1F90240 		ldrsh	r4, [r1, #2]
 2898 0076 04EB4404 		add	r4, r4, r4, lsl #1
 2899 007a 0231     		adds	r1, r1, #2
 2900              	.LVL336:
 2901 007c C6EB4404 		rsb	r4, r6, r4, lsl #1
 157:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = 12 * v - 2 * n1 - n2;
 2902              		.loc 1 157 0
 2903 0080 019E     		ldr	r6, [sp, #4]
 2904              	.LVL337:
 2905 0082 36F91360 		ldrsh	r6, [r6, r3, lsl #1]
 2906 0086 3544     		add	r5, r5, r6
 2907              	.LVL338:
 158:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 2908              		.loc 1 158 0
 2909 0088 C5EB4404 		rsb	r4, r5, r4, lsl #1
 2910              	.LVL339:
 2911 008c 7346     		mov	r3, lr
 2912              	.LVL340:
 159:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 2913              		.loc 1 159 0
 2914 008e 6443     		muls	r4, r4, r4
 2915              	.LVL341:
 2916 0090 1AEB040A 		adds	r10, r10, r4
 2917              	.LVL342:
 2918 0094 4BEBE47B 		adc	fp, fp, r4, asr #31
 2919              	.LVL343:
 2920 0098 D4E7     		b	.L164
 2921              	.LVL344:
 2922              	.L166:
 2923              	.LBE763:
 2924              	.LBE764:
 2925              	.LBE766:
 162:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 2926              		.loc 1 162 0
 2927 009a 5046     		mov	r0, r10
 2928              	.LVL345:
 2929 009c 5946     		mov	r1, fp
 2930 009e 03B0     		add	sp, sp, #12
 2931              	.LCFI51:
 2932              		.cfi_def_cfa_offset 36
 2933              		@ sp needed
 2934 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2935              	.LVL346:
 2936              	.L168:
 2937              		.align	2
 2938              	.L167:
 2939 00a4 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 2940              		.cfi_endproc
 2941              	.LFE1001:
 2943              		.section	.text._ZN12_GLOBAL__N_129get_rb_line_metric_laplacian1ERK21circular_cache_bufferISt5array
 2944              		.align	1
 2945              		.thumb
 2946              		.thumb_func
 2948              	_ZN12_GLOBAL__N_129get_rb_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:
 2949              	.LFB998:
  95:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2950              		.loc 1 95 0
 2951              		.cfi_startproc
 2952              		@ args = 0, pretend = 0, frame = 0
 2953              		@ frame_needed = 0, uses_anonymous_args = 0
 2954              	.LVL347:
 2955 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2956              	.LCFI52:
 2957              		.cfi_def_cfa_offset 24
 2958              		.cfi_offset 4, -24
 2959              		.cfi_offset 5, -20
 2960              		.cfi_offset 6, -16
 2961              		.cfi_offset 7, -12
 2962              		.cfi_offset 8, -8
 2963              		.cfi_offset 14, -4
 2964              	.LBB767:
  97:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref(1);
 2965              		.loc 1 97 0
 2966 0004 194C     		ldr	r4, .L173
 2967              	.LBE767:
  95:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2968              		.loc 1 95 0
 2969 0006 0E46     		mov	r6, r1
 2970              	.LBB771:
  97:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref(1);
 2971              		.loc 1 97 0
 2972 0008 0021     		movs	r1, #0
 2973              	.LVL348:
 2974              	.LBE771:
  95:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 2975              		.loc 1 95 0
 2976 000a 0546     		mov	r5, r0
 2977              	.LBB772:
  97:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref(1);
 2978              		.loc 1 97 0
 2979 000c A047     		blx	r4
 2980              	.LVL349:
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = color_cache.ref(2);
 2981              		.loc 1 98 0
 2982 000e 0121     		movs	r1, #1
  97:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = color_cache.ref(1);
 2983              		.loc 1 97 0
 2984 0010 0746     		mov	r7, r0
 2985              	.LVL350:
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = color_cache.ref(2);
 2986              		.loc 1 98 0
 2987 0012 2846     		mov	r0, r5
 2988              	.LVL351:
 2989 0014 A047     		blx	r4
 2990              	.LVL352:
  99:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 1; (i + 1) < width; ++i) {
 2991              		.loc 1 99 0
 2992 0016 0221     		movs	r1, #2
  98:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = color_cache.ref(2);
 2993              		.loc 1 98 0
 2994 0018 8046     		mov	r8, r0
 2995              	.LVL353:
  99:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = 1; (i + 1) < width; ++i) {
 2996              		.loc 1 99 0
 2997 001a 2846     		mov	r0, r5
 2998              	.LVL354:
 2999 001c A047     		blx	r4
 3000              	.LVL355:
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line = color_cache.ref();
 3001              		.loc 1 96 0
 3002 001e 0025     		movs	r5, #0
 3003              	.LVL356:
 3004 0020 4246     		mov	r2, r8
 3005              	.LBB768:
 100:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = 4 * curr_line[i];
 3006              		.loc 1 100 0
 3007 0022 4FF0010E 		mov	lr, #1
 3008              	.LBE768:
  96:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line = color_cache.ref();
 3009              		.loc 1 96 0
 3010 0026 0024     		movs	r4, #0
 3011              	.LVL357:
 3012              	.L170:
 3013 0028 0EF10101 		add	r1, lr, #1
 3014              	.LBB770:
 100:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = 4 * curr_line[i];
 3015              		.loc 1 100 0 discriminator 1
 3016 002c B142     		cmp	r1, r6
 3017 002e 19D2     		bcs	.L172
 3018              	.LVL358:
 3019              	.LBB769:
 101:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = v - curr_line[i-1] - curr_line[i+1] - prev_line[i] - next_line[i];
 3020              		.loc 1 101 0
 3021 0030 5388     		ldrh	r3, [r2, #2]
 3022 0032 9B00     		lsls	r3, r3, #2
 102:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 3023              		.loc 1 102 0
 3024 0034 B2F900C0 		ldrsh	ip, [r2]
 3025 0038 0232     		adds	r2, r2, #2
 3026              	.LVL359:
 3027 003a 1BB2     		sxth	r3, r3
 3028 003c CCEB0303 		rsb	r3, ip, r3
 3029 0040 B2F902C0 		ldrsh	ip, [r2, #2]
 3030 0044 CCEB0303 		rsb	r3, ip, r3
 3031 0048 30F91EC0 		ldrsh	ip, [r0, lr, lsl #1]
 3032 004c CCEB0303 		rsb	r3, ip, r3
 3033              	.LVL360:
 3034 0050 37F91EE0 		ldrsh	lr, [r7, lr, lsl #1]
 3035              	.LVL361:
 3036 0054 CEEB0303 		rsb	r3, lr, r3
 3037              	.LVL362:
 3038 0058 8E46     		mov	lr, r1
 103:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 3039              		.loc 1 103 0
 3040 005a 5B43     		muls	r3, r3, r3
 3041              	.LVL363:
 3042 005c E418     		adds	r4, r4, r3
 3043              	.LVL364:
 3044 005e 45EBE375 		adc	r5, r5, r3, asr #31
 3045              	.LVL365:
 3046 0062 E1E7     		b	.L170
 3047              	.LVL366:
 3048              	.L172:
 3049              	.LBE769:
 3050              	.LBE770:
 3051              	.LBE772:
 106:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 3052              		.loc 1 106 0
 3053 0064 2046     		mov	r0, r4
 3054              	.LVL367:
 3055 0066 2946     		mov	r1, r5
 3056 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3057              	.LVL368:
 3058              	.L174:
 3059              		.align	2
 3060              	.L173:
 3061 006c 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 3062              		.cfi_endproc
 3063              	.LFE998:
 3065              		.section	.text._ZN12_GLOBAL__N_132get_green_line_metric_laplacian1ERK21circular_cache_bufferISt5ar
 3066              		.align	1
 3067              		.thumb
 3068              		.thumb_func
 3070              	_ZN12_GLOBAL__N_132get_green_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EELj5E
 3071              	.LFB999:
 108:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 3072              		.loc 1 108 0
 3073              		.cfi_startproc
 3074              		@ args = 0, pretend = 0, frame = 0
 3075              		@ frame_needed = 0, uses_anonymous_args = 0
 3076              	.LVL369:
 3077 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3078              	.LCFI53:
 3079              		.cfi_def_cfa_offset 32
 3080              		.cfi_offset 3, -32
 3081              		.cfi_offset 4, -28
 3082              		.cfi_offset 5, -24
 3083              		.cfi_offset 6, -20
 3084              		.cfi_offset 7, -16
 3085              		.cfi_offset 8, -12
 3086              		.cfi_offset 9, -8
 3087              		.cfi_offset 14, -4
 3088              	.LBB773:
 110:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref(1);
 3089              		.loc 1 110 0
 3090 0004 1E4F     		ldr	r7, .L181
 3091              	.LBE773:
 108:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 3092              		.loc 1 108 0
 3093 0006 8946     		mov	r9, r1
 3094              	.LBB777:
 110:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref(1);
 3095              		.loc 1 110 0
 3096 0008 0021     		movs	r1, #0
 3097              	.LVL370:
 3098              	.LBE777:
 108:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::uint64_t ret{0};
 3099              		.loc 1 108 0
 3100 000a 1446     		mov	r4, r2
 3101 000c 8046     		mov	r8, r0
 3102              	.LBB778:
 110:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref(1);
 3103              		.loc 1 110 0
 3104 000e B847     		blx	r7
 3105              	.LVL371:
 111:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = green_cache.ref(2);
 3106              		.loc 1 111 0
 3107 0010 0121     		movs	r1, #1
 110:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& curr_line = green_cache.ref(1);
 3108              		.loc 1 110 0
 3109 0012 0546     		mov	r5, r0
 3110              	.LVL372:
 111:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = green_cache.ref(2);
 3111              		.loc 1 111 0
 3112 0014 4046     		mov	r0, r8
 3113              	.LVL373:
 3114 0016 B847     		blx	r7
 3115              	.LVL374:
 112:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin{0};
 3116              		.loc 1 112 0
 3117 0018 0221     		movs	r1, #2
 111:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& prev_line = green_cache.ref(2);
 3118              		.loc 1 111 0
 3119 001a 0646     		mov	r6, r0
 3120              	.LVL375:
 112:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin{0};
 3121              		.loc 1 112 0
 3122 001c 4046     		mov	r0, r8
 3123              	.LVL376:
 3124 001e B847     		blx	r7
 3125              	.LVL377:
 115:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if (prev_line_offset > 0)
 3126              		.loc 1 115 0
 3127 0020 6242     		negs	r2, r4
 114:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         prev_line_offset = -prev_line_offset;
 3128              		.loc 1 114 0
 3129 0022 4F46     		mov	r7, r9
 109:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line = green_cache.ref();
 3130              		.loc 1 109 0
 3131 0024 0021     		movs	r1, #0
 115:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         if (prev_line_offset > 0)
 3132              		.loc 1 115 0
 3133 0026 12B2     		sxth	r2, r2
 116:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             i_end -= prev_line_offset;
 3134              		.loc 1 116 0
 3135 0028 002A     		cmp	r2, #0
 117:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         else
 3136              		.loc 1 117 0
 3137 002a CCBF     		ite	gt
 3138 002c BF1A     		subgt	r7, r7, r2
 119:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         for (std::size_t i = i_begin; i < i_end; ++i) {
 3139              		.loc 1 119 0
 3140 002e 5442     		rsble	r4, r2, #0
 3141 0030 4FEA4202 		lsl	r2, r2, #1
 113:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_end{width};
 3142              		.loc 1 113 0
 3143 0034 C8BF     		it	gt
 3144 0036 0024     		movgt	r4, #0
 3145 0038 00EB020C 		add	ip, r0, r2
 112:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         std::size_t i_begin{0};
 3146              		.loc 1 112 0
 3147 003c 8646     		mov	lr, r0
 3148              	.LVL378:
 3149 003e 2A44     		add	r2, r2, r5
 109:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         const roi_color_line& next_line = green_cache.ref();
 3150              		.loc 1 109 0
 3151 0040 0020     		movs	r0, #0
 3152              	.LVL379:
 3153              	.L178:
 3154              	.LBB774:
 120:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = 4 * curr_line[i];
 3155              		.loc 1 120 0 discriminator 1
 3156 0042 BC42     		cmp	r4, r7
 3157 0044 19D2     		bcs	.L180
 3158              	.LVL380:
 3159              	.LBB775:
 121:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int32_t d = v - prev_line[i + prev_line_offset] - prev_line[i]
 3160              		.loc 1 121 0
 3161 0046 36F81430 		ldrh	r3, [r6, r4, lsl #1]
 3162 004a 9B00     		lsls	r3, r3, #2
 122:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****                                - next_line[i + prev_line_offset] - next_line[i];
 3163              		.loc 1 122 0
 3164 004c 3CF91480 		ldrsh	r8, [ip, r4, lsl #1]
 3165 0050 1BB2     		sxth	r3, r3
 3166 0052 C8EB0303 		rsb	r3, r8, r3
 3167 0056 3EF91480 		ldrsh	r8, [lr, r4, lsl #1]
 3168 005a C8EB0303 		rsb	r3, r8, r3
 123:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             ret += d * d;
 3169              		.loc 1 123 0
 3170 005e 32F91480 		ldrsh	r8, [r2, r4, lsl #1]
 3171 0062 C8EB0303 		rsb	r3, r8, r3
 3172              	.LVL381:
 3173 0066 35F91480 		ldrsh	r8, [r5, r4, lsl #1]
 3174 006a C8EB0303 		rsb	r3, r8, r3
 3175              	.LVL382:
 3176              	.LBE775:
 120:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****             std::int16_t v = 4 * curr_line[i];
 3177              		.loc 1 120 0
 3178 006e 0134     		adds	r4, r4, #1
 3179              	.LVL383:
 3180              	.LBB776:
 124:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp ****         }
 3181              		.loc 1 124 0
 3182 0070 5B43     		muls	r3, r3, r3
 3183              	.LVL384:
 3184 0072 C018     		adds	r0, r0, r3
 3185              	.LVL385:
 3186 0074 41EBE371 		adc	r1, r1, r3, asr #31
 3187              	.LVL386:
 3188 0078 E3E7     		b	.L178
 3189              	.LVL387:
 3190              	.L180:
 3191              	.LBE776:
 3192              	.LBE774:
 3193              	.LBE778:
 127:/home/tienluong/workspace/atlantis_fw/AsicFwS2/src/contrast_processor.cpp **** 
 3194              		.loc 1 127 0
 3195 007a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3196              	.LVL388:
 3197              	.L182:
 3198 007e 00BF     		.align	2
 3199              	.L181:
 3200 0080 00000000 		.word	_ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
 3201              		.cfi_endproc
 3202              	.LFE999:
 3204              		.global	_ZN18contrast_processor16metric_algo_arr_E
 3205              		.section	.data._ZN18contrast_processor16metric_algo_arr_E,"aw",%progbits
 3206              		.align	2
 3207              		.set	.LANCHOR0,. + 0
 3210              	_ZN18contrast_processor16metric_algo_arr_E:
 3211 0000 0200     		.short	2
 3212 0002 0000     		.space	2
 3213 0004 00000000 		.word	_ZN12_GLOBAL__N_130get_green_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180E
 3214 0008 00000000 		.word	_ZN12_GLOBAL__N_127get_rb_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj
 3215 000c 0300     		.short	3
 3216 000e 0000     		.space	2
 3217 0010 00000000 		.word	_ZN12_GLOBAL__N_132get_green_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj18
 3218 0014 00000000 		.word	_ZN12_GLOBAL__N_129get_rb_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EE
 3219 0018 0500     		.short	5
 3220 001a 0000     		.space	2
 3221 001c 00000000 		.word	_ZN12_GLOBAL__N_132get_green_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj18
 3222 0020 00000000 		.word	_ZN12_GLOBAL__N_129get_rb_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EE
 3223 0024 0300     		.short	3
 3224 0026 0000     		.space	2
 3225 0028 00000000 		.word	_ZN12_GLOBAL__N_141get_green_line_metric_decimated2_gradientERK21circular_cache_bufferISt5ar
 3226 002c 00000000 		.word	_ZN12_GLOBAL__N_138get_rb_line_metric_decimated2_gradientERK21circular_cache_bufferISt5array
 3227 0030 0500     		.short	5
 3228 0032 0000     		.space	2
 3229 0034 00000000 		.word	_ZN12_GLOBAL__N_141get_green_line_metric_decimated4_gradientERK21circular_cache_bufferISt5ar
 3230 0038 00000000 		.word	_ZN12_GLOBAL__N_138get_rb_line_metric_decimated4_gradientERK21circular_cache_bufferISt5array
 3231 003c 0100     		.short	1
 3232 003e 0000     		.space	2
 3233 0040 00000000 		.word	_ZN12_GLOBAL__N_131get_green_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180
 3234 0044 00000000 		.word	_ZN12_GLOBAL__N_128get_rb_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EEL
 3235 0048 0100     		.short	1
 3236 004a 0000     		.space	2
 3237 004c 00000000 		.word	_ZN12_GLOBAL__N_128get_green_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EEL
 3238 0050 00000000 		.word	_ZN12_GLOBAL__N_125get_rb_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5E
 3239 0054 0200     		.short	2
 3240 0056 0000     		.space	2
 3241 0058 00000000 		.word	_ZN12_GLOBAL__N_133get_green_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj1
 3242 005c 00000000 		.word	_ZN12_GLOBAL__N_130get_rb_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180E
 3243 0060 0500     		.short	5
 3244 0062 0000     		.space	2
 3245 0064 00000000 		.word	_ZN12_GLOBAL__N_144get_green_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt
 3246 0068 00000000 		.word	_ZN12_GLOBAL__N_141get_rb_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5ar
 3247 006c 0600     		.short	6
 3248 006e 0000     		.space	2
 3249 0070 00000000 		.word	_ZN12_GLOBAL__N_142get_green_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5a
 3250 0074 00000000 		.word	_ZN12_GLOBAL__N_139get_rb_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arra
 3251              		.text
 3252              	.Letext0:
 3253              		.file 5 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/machine/_default_types
 3254              		.file 6 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/stdint.h"
 3255              		.file 7 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h
 3256              		.file 8 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/sys/lock.h"
 3257              		.file 9 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/sys/_types.h"
 3258              		.file 10 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/sys/reent.h"
 3259              		.file 11 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.
 3260              		.file 12 "<built-in>"
 3261              		.file 13 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/cstdint"
 3262              		.file 14 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/except
 3263              		.file 15 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/arm-none-ea
 3264              		.file 16 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/cwchar"
 3265              		.file 17 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/char_t
 3266              		.file 18 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/alloca
 3267              		.file 19 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/clocale"
 3268              		.file 20 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/basic_
 3269              		.file 21 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/basic_
 3270              		.file 22 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/image_pixel_iter.h"
 3271              		.file 23 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/exception"
 3272              		.file 24 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/debug/debug
 3273              		.file 25 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/predef
 3274              		.file 26 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/ext/new_all
 3275              		.file 27 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/ext/numeric
 3276              		.file 28 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/wchar.h"
 3277              		.file 29 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/locale.h"
 3278              		.file 30 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/arm-none-ea
 3279              		.file 31 "/opt/toolchains/gcc-arm-none-eabi-4_9-2015q1/arm-none-eabi/include/c++/4.9.3/bits/stl_pa
 3280              		.file 32 "/home/tienluong/workspace/atlantis_fw/AsicFwS2/include/light_system.h"
DEFINED SYMBOLS
                            *ABS*:00000000 contrast_processor.cpp
     /tmp/ccenyjz1.s:19     .text._ZN12_GLOBAL__N_114square_diff_thEllls:00000000 $t
     /tmp/ccenyjz1.s:23     .text._ZN12_GLOBAL__N_114square_diff_thEllls:00000000 _ZN12_GLOBAL__N_114square_diff_thEllls
     /tmp/ccenyjz1.s:71     .text._ZN18contrast_processorC2Ett:00000000 $t
     /tmp/ccenyjz1.s:76     .text._ZN18contrast_processorC2Ett:00000000 _ZN18contrast_processorC2Ett
     /tmp/ccenyjz1.s:76     .text._ZN18contrast_processorC2Ett:00000000 _ZN18contrast_processorC1Ett
     /tmp/ccenyjz1.s:168    .text._ZN18contrast_processor14enable_metricsEm:00000000 $t
     /tmp/ccenyjz1.s:173    .text._ZN18contrast_processor14enable_metricsEm:00000000 _ZN18contrast_processor14enable_metricsEm
     /tmp/ccenyjz1.s:262    .text._ZN18contrast_processor18get_rb_line_metricENS_11metric_typeERK21circular_cache_bufferISt5arrayIsLj180EELj5EE:00000000 $t
     /tmp/ccenyjz1.s:267    .text._ZN18contrast_processor18get_rb_line_metricENS_11metric_typeERK21circular_cache_bufferISt5arrayIsLj180EELj5EE:00000000 _ZN18contrast_processor18get_rb_line_metricENS_11metric_typeERK21circular_cache_bufferISt5arrayIsLj180EELj5EE
     /tmp/ccenyjz1.s:300    .text._ZN18contrast_processor18get_rb_line_metricENS_11metric_typeERK21circular_cache_bufferISt5arrayIsLj180EELj5EE:00000018 $d
     /tmp/ccenyjz1.s:305    .text._ZN18contrast_processor17update_red_metricENS_11metric_typeE:00000000 $t
     /tmp/ccenyjz1.s:310    .text._ZN18contrast_processor17update_red_metricENS_11metric_typeE:00000000 _ZN18contrast_processor17update_red_metricENS_11metric_typeE
     /tmp/ccenyjz1.s:345    .text._ZN18contrast_processor17update_red_metricENS_11metric_typeE:00000024 $d
     /tmp/ccenyjz1.s:350    .text._ZN18contrast_processor18update_blue_metricENS_11metric_typeE:00000000 $t
     /tmp/ccenyjz1.s:355    .text._ZN18contrast_processor18update_blue_metricENS_11metric_typeE:00000000 _ZN18contrast_processor18update_blue_metricENS_11metric_typeE
     /tmp/ccenyjz1.s:390    .text._ZN18contrast_processor18update_blue_metricENS_11metric_typeE:00000024 $d
     /tmp/ccenyjz1.s:395    .text._ZN18contrast_processor21get_green_line_metricENS_11metric_typeEs:00000000 $t
     /tmp/ccenyjz1.s:400    .text._ZN18contrast_processor21get_green_line_metricENS_11metric_typeEs:00000000 _ZN18contrast_processor21get_green_line_metricENS_11metric_typeEs
     /tmp/ccenyjz1.s:436    .text._ZN18contrast_processor21get_green_line_metricENS_11metric_typeEs:0000001c $d
     /tmp/ccenyjz1.s:441    .text._ZN18contrast_processor24update_green_metric_evenENS_11metric_typeE:00000000 $t
     /tmp/ccenyjz1.s:446    .text._ZN18contrast_processor24update_green_metric_evenENS_11metric_typeE:00000000 _ZN18contrast_processor24update_green_metric_evenENS_11metric_typeE
     /tmp/ccenyjz1.s:481    .text._ZN18contrast_processor24update_green_metric_evenENS_11metric_typeE:00000024 $d
     /tmp/ccenyjz1.s:486    .text._ZN18contrast_processor23update_green_metric_oddENS_11metric_typeE:00000000 $t
     /tmp/ccenyjz1.s:491    .text._ZN18contrast_processor23update_green_metric_oddENS_11metric_typeE:00000000 _ZN18contrast_processor23update_green_metric_oddENS_11metric_typeE
     /tmp/ccenyjz1.s:526    .text._ZN18contrast_processor23update_green_metric_oddENS_11metric_typeE:00000020 $d
     /tmp/ccenyjz1.s:531    .text._ZN18contrast_processor19update_metrics_evenEt:00000000 $t
     /tmp/ccenyjz1.s:536    .text._ZN18contrast_processor19update_metrics_evenEt:00000000 _ZN18contrast_processor19update_metrics_evenEt
     /tmp/ccenyjz1.s:642    .text._ZN18contrast_processor19update_metrics_evenEt:00000054 $d
     /tmp/ccenyjz1.s:649    .text._ZN18contrast_processor18update_metrics_oddEt:00000000 $t
     /tmp/ccenyjz1.s:654    .text._ZN18contrast_processor18update_metrics_oddEt:00000000 _ZN18contrast_processor18update_metrics_oddEt
     /tmp/ccenyjz1.s:752    .text._ZN18contrast_processor18update_metrics_oddEt:00000050 $d
     /tmp/ccenyjz1.s:759    .text._ZN18contrast_processor13get_color_roiE16image_pixel_iterP21circular_cache_bufferISt5arrayIsLj180EELj5EES5_:00000000 $t
     /tmp/ccenyjz1.s:764    .text._ZN18contrast_processor13get_color_roiE16image_pixel_iterP21circular_cache_bufferISt5arrayIsLj180EELj5EES5_:00000000 _ZN18contrast_processor13get_color_roiE16image_pixel_iterP21circular_cache_bufferISt5arrayIsLj180EELj5EES5_
     /tmp/ccenyjz1.s:896    .text._ZN18contrast_processor13get_color_roiE16image_pixel_iterP21circular_cache_bufferISt5arrayIsLj180EELj5EES5_:00000060 $d
     /tmp/ccenyjz1.s:901    .text._ZN18contrast_processor12process_lineE16image_pixel_iter:00000000 $t
     /tmp/ccenyjz1.s:906    .text._ZN18contrast_processor12process_lineE16image_pixel_iter:00000000 _ZN18contrast_processor12process_lineE16image_pixel_iter
     /tmp/ccenyjz1.s:990    .text._ZN18contrast_processor12process_lineE16image_pixel_iter:00000048 $d
     /tmp/ccenyjz1.s:997    .text._ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt:00000000 $t
     /tmp/ccenyjz1.s:1002   .text._ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt:00000000 _ZNK21circular_cache_bufferISt5arrayIsLj180EELj5EE3refEt
     /tmp/ccenyjz1.s:1052   .text._ZN12_GLOBAL__N_139get_rb_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 $t
     /tmp/ccenyjz1.s:1056   .text._ZN12_GLOBAL__N_139get_rb_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 _ZN12_GLOBAL__N_139get_rb_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
     /tmp/ccenyjz1.s:1246   .text._ZN12_GLOBAL__N_139get_rb_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:000000e4 $d
     /tmp/ccenyjz1.s:1253   .text._ZN12_GLOBAL__N_142get_green_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 $t
     /tmp/ccenyjz1.s:1257   .text._ZN12_GLOBAL__N_142get_green_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 _ZN12_GLOBAL__N_142get_green_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts
     /tmp/ccenyjz1.s:1517   .text._ZN12_GLOBAL__N_142get_green_line_metric_filtered_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000148 $d
     /tmp/ccenyjz1.s:1524   .text._ZN12_GLOBAL__N_148get_rb_line_metric_decimated4_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtls:00000000 $t
     /tmp/ccenyjz1.s:1528   .text._ZN12_GLOBAL__N_148get_rb_line_metric_decimated4_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtls:00000000 _ZN12_GLOBAL__N_148get_rb_line_metric_decimated4_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtls
     /tmp/ccenyjz1.s:1659   .text._ZN12_GLOBAL__N_148get_rb_line_metric_decimated4_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtls:00000078 $d
     /tmp/ccenyjz1.s:1665   .text._ZN12_GLOBAL__N_141get_rb_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 $t
     /tmp/ccenyjz1.s:1669   .text._ZN12_GLOBAL__N_141get_rb_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 _ZN12_GLOBAL__N_141get_rb_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
     /tmp/ccenyjz1.s:1692   .text._ZN12_GLOBAL__N_141get_rb_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000010 $d
     /tmp/ccenyjz1.s:1697   .text._ZN12_GLOBAL__N_144get_green_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 $t
     /tmp/ccenyjz1.s:1701   .text._ZN12_GLOBAL__N_144get_green_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 _ZN12_GLOBAL__N_144get_green_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts
     /tmp/ccenyjz1.s:1729   .text._ZN12_GLOBAL__N_144get_green_line_metric_decimated4_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000010 $d
     /tmp/ccenyjz1.s:1734   .text._ZN12_GLOBAL__N_141get_green_line_metric_decimated4_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 $t
     /tmp/ccenyjz1.s:1738   .text._ZN12_GLOBAL__N_141get_green_line_metric_decimated4_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 _ZN12_GLOBAL__N_141get_green_line_metric_decimated4_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts
     /tmp/ccenyjz1.s:1772   .text._ZN12_GLOBAL__N_141get_green_line_metric_decimated4_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:0000000c $d
     /tmp/ccenyjz1.s:1777   .text._ZN12_GLOBAL__N_138get_rb_line_metric_decimated4_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 $t
     /tmp/ccenyjz1.s:1781   .text._ZN12_GLOBAL__N_138get_rb_line_metric_decimated4_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 _ZN12_GLOBAL__N_138get_rb_line_metric_decimated4_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
     /tmp/ccenyjz1.s:1806   .text._ZN12_GLOBAL__N_138get_rb_line_metric_decimated4_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:0000000c $d
     /tmp/ccenyjz1.s:1811   .text._ZN12_GLOBAL__N_137get_rb_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtls:00000000 $t
     /tmp/ccenyjz1.s:1815   .text._ZN12_GLOBAL__N_137get_rb_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtls:00000000 _ZN12_GLOBAL__N_137get_rb_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtls
     /tmp/ccenyjz1.s:1944   .text._ZN12_GLOBAL__N_137get_rb_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtls:00000078 $d
     /tmp/ccenyjz1.s:1950   .text._ZN12_GLOBAL__N_130get_rb_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 $t
     /tmp/ccenyjz1.s:1954   .text._ZN12_GLOBAL__N_130get_rb_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 _ZN12_GLOBAL__N_130get_rb_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
     /tmp/ccenyjz1.s:1977   .text._ZN12_GLOBAL__N_130get_rb_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000010 $d
     /tmp/ccenyjz1.s:1982   .text._ZN12_GLOBAL__N_127get_rb_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 $t
     /tmp/ccenyjz1.s:1986   .text._ZN12_GLOBAL__N_127get_rb_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 _ZN12_GLOBAL__N_127get_rb_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
     /tmp/ccenyjz1.s:2011   .text._ZN12_GLOBAL__N_127get_rb_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:0000000c $d
     /tmp/ccenyjz1.s:2016   .text._ZN12_GLOBAL__N_140get_green_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtsls:00000000 $t
     /tmp/ccenyjz1.s:2020   .text._ZN12_GLOBAL__N_140get_green_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtsls:00000000 _ZN12_GLOBAL__N_140get_green_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtsls
     /tmp/ccenyjz1.s:2164   .text._ZN12_GLOBAL__N_140get_green_line_metric_gradient_th_factorERK21circular_cache_bufferISt5arrayIsLj180EELj5EEtsls:0000008c $d
     /tmp/ccenyjz1.s:2170   .text._ZN12_GLOBAL__N_133get_green_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 $t
     /tmp/ccenyjz1.s:2174   .text._ZN12_GLOBAL__N_133get_green_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 _ZN12_GLOBAL__N_133get_green_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts
     /tmp/ccenyjz1.s:2204   .text._ZN12_GLOBAL__N_133get_green_line_metric_gradient_thERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000014 $d
     /tmp/ccenyjz1.s:2209   .text._ZN12_GLOBAL__N_130get_green_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 $t
     /tmp/ccenyjz1.s:2213   .text._ZN12_GLOBAL__N_130get_green_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 _ZN12_GLOBAL__N_130get_green_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts
     /tmp/ccenyjz1.s:2242   .text._ZN12_GLOBAL__N_130get_green_line_metric_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000010 $d
     /tmp/ccenyjz1.s:2247   .text._ZN12_GLOBAL__N_125get_rb_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 $t
     /tmp/ccenyjz1.s:2251   .text._ZN12_GLOBAL__N_125get_rb_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 _ZN12_GLOBAL__N_125get_rb_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
     /tmp/ccenyjz1.s:2319   .text._ZN12_GLOBAL__N_125get_rb_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000024 $d
     /tmp/ccenyjz1.s:2324   .text._ZN12_GLOBAL__N_128get_green_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 $t
     /tmp/ccenyjz1.s:2328   .text._ZN12_GLOBAL__N_128get_green_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 _ZN12_GLOBAL__N_128get_green_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts
     /tmp/ccenyjz1.s:2349   .text._ZN12_GLOBAL__N_128get_green_line_metric_energyERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000008 $d
     /tmp/ccenyjz1.s:2354   .text._ZN12_GLOBAL__N_128get_rb_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 $t
     /tmp/ccenyjz1.s:2358   .text._ZN12_GLOBAL__N_128get_rb_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 _ZN12_GLOBAL__N_128get_rb_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
     /tmp/ccenyjz1.s:2422   .text._ZN12_GLOBAL__N_128get_rb_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000028 $d
     /tmp/ccenyjz1.s:2427   .text._ZN12_GLOBAL__N_131get_green_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 $t
     /tmp/ccenyjz1.s:2431   .text._ZN12_GLOBAL__N_131get_green_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 _ZN12_GLOBAL__N_131get_green_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts
     /tmp/ccenyjz1.s:2452   .text._ZN12_GLOBAL__N_131get_green_line_metric_intensityERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000008 $d
     /tmp/ccenyjz1.s:2457   .text._ZN12_GLOBAL__N_138get_rb_line_metric_decimated2_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 $t
     /tmp/ccenyjz1.s:2461   .text._ZN12_GLOBAL__N_138get_rb_line_metric_decimated2_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 _ZN12_GLOBAL__N_138get_rb_line_metric_decimated2_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
     /tmp/ccenyjz1.s:2569   .text._ZN12_GLOBAL__N_138get_rb_line_metric_decimated2_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000058 $d
     /tmp/ccenyjz1.s:2574   .text._ZN12_GLOBAL__N_141get_green_line_metric_decimated2_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 $t
     /tmp/ccenyjz1.s:2578   .text._ZN12_GLOBAL__N_141get_green_line_metric_decimated2_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 _ZN12_GLOBAL__N_141get_green_line_metric_decimated2_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts
     /tmp/ccenyjz1.s:2599   .text._ZN12_GLOBAL__N_141get_green_line_metric_decimated2_gradientERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000008 $d
     /tmp/ccenyjz1.s:2604   .text._ZN12_GLOBAL__N_129get_rb_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 $t
     /tmp/ccenyjz1.s:2608   .text._ZN12_GLOBAL__N_129get_rb_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 _ZN12_GLOBAL__N_129get_rb_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
     /tmp/ccenyjz1.s:2770   .text._ZN12_GLOBAL__N_129get_rb_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:000000b0 $d
     /tmp/ccenyjz1.s:2775   .text._ZN12_GLOBAL__N_132get_green_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 $t
     /tmp/ccenyjz1.s:2779   .text._ZN12_GLOBAL__N_132get_green_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 _ZN12_GLOBAL__N_132get_green_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts
     /tmp/ccenyjz1.s:2939   .text._ZN12_GLOBAL__N_132get_green_line_metric_laplacian2ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:000000a4 $d
     /tmp/ccenyjz1.s:2944   .text._ZN12_GLOBAL__N_129get_rb_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 $t
     /tmp/ccenyjz1.s:2948   .text._ZN12_GLOBAL__N_129get_rb_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:00000000 _ZN12_GLOBAL__N_129get_rb_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt
     /tmp/ccenyjz1.s:3061   .text._ZN12_GLOBAL__N_129get_rb_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEt:0000006c $d
     /tmp/ccenyjz1.s:3066   .text._ZN12_GLOBAL__N_132get_green_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 $t
     /tmp/ccenyjz1.s:3070   .text._ZN12_GLOBAL__N_132get_green_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000000 _ZN12_GLOBAL__N_132get_green_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts
     /tmp/ccenyjz1.s:3200   .text._ZN12_GLOBAL__N_132get_green_line_metric_laplacian1ERK21circular_cache_bufferISt5arrayIsLj180EELj5EEts:00000080 $d
     /tmp/ccenyjz1.s:3210   .data._ZN18contrast_processor16metric_algo_arr_E:00000000 _ZN18contrast_processor16metric_algo_arr_E
     /tmp/ccenyjz1.s:3206   .data._ZN18contrast_processor16metric_algo_arr_E:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN16image_pixel_iter16next_pixel_valueEv
